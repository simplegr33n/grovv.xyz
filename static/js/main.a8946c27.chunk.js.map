{"version":3,"sources":["config/firebaseConfig.js","App/_utils/DbHelper.js","App/auth/SignIn.js","App/auth/SignUp.js","App/main-content/FeedChart/FeedChart.js","App/main-content/GrowConfig/GrowConfig.js","App/main-content/GrowJournal/JournalAddEditModal.js","App/main-content/GrowJournal/FullImageModal.js","App/main-content/GrowJournal/JournalCreateModal.js","App/main-content/GrowJournal/JournalTimelineButton.js","App/main-content/GrowJournal/JournalBoxItem.js","App/main-content/GrowJournal/JournalEntry.js","App/main-content/GrowJournal/GrowJournal.js","App/main-content/GrowPage/GrowDataDisplay.js","App/main-content/Graphs/GraphSensorsBox.js","App/main-content/GrowPage/GrowBoxItem.js","App/main-content/GrowConfig/SVGs/area.svg","App/main-content/GrowConfig/SVGs/container.svg","App/main-content/GrowConfig/GrowVisualEditor.js","App/main-content/GrowConfig/GrowSetUp.js","App/main-content/GrowPage/GrowDetailsConfig.js","App/main-content/Graphs/GraphSensors.js","App/main-content/GrowPage/GrowDetailsGraphs.js","App/main-content/GrowPage/GrowDetailsPage.js","App/main-content/GrowPage/GrowCamFull.js","App/main-content/GrowPage/GrowPage.js","App/main-content/Graphs/GraphSensorsTest.js","App/graphs/GrowGraphsTest.js","App/app-bar/AppBar.js","App/App.js","js/serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","Object","classCallCheck","this","firebase","apps","length","initializeApp","db","database","auth","storage","DbHelper","userID","userGrows","setData","forEach","grow","ref","_this","child","id","console","log","on","snapshot","val","errorObject","code","growID","date","Date","year","getFullYear","toString","month","getMonth","days","tempDay","dy","getDate","i","staticTwoDayData","getTwoDaysAddedDays","day","includes","gChild","dataPoint","dataTime","time","getTime","tempCurrentData","sort","a","b","fullData","concat","dayData","temp_min","temp_max","temp_hyst","fan_min","fan_max","humidity_min","humidity_max","humidity_hyst","humidifier_min","humidifier_max","lights_on","lights_off","update","set","_this2","userGrowIDs","sensors_live","key","setUserGrows","once","createdAt","journals","journalsList","keys","push","updatedAt","setUserJournals","journalID","setJournalEntries","tempEntriesList","datetime_true","tempDotsList","entry","datetime_short","tempDeepDotsList","dotDate","dotValue","journalName","openJournal","userRef","nowDate","name","previewImage","entryID","trueDate","title","content","growStage","postDate","images","closeModal","editDate","temptTrueDate","shortMonth","shortDateVar","published","grow_stage","datetime_post","datetime_edit","journal_id","jRef","file","setImages","storageRef","dateNow","metadata","contentType","type","put","then","getDownloadURL","url","urlSplit","split","thumbURL","refFromURL","delete","catch","error","SignIn","props","possibleConstructorReturn","getPrototypeOf","call","handleUsernameChange","event","setState","username","target","value","handlePasswordChange","password","handleSubmit","state","validateEmail","hideSigninFields","signInWithEmailAndPassword","errorCode","errorMessage","message","alert","SHOWFIELDS","showSigninFields","onAuthStateChanged","user","testEmail","test","String","toLowerCase","testPswd","react_default","createElement","onChange","onKeyPress","ev","enterSubmit","onClick","Component","SignUp","hideSignupFields","showSignupFields","validatePassword","createUserWithEmailAndPassword","handleGotoSignIn","gotoSignIn","postUserToFirebase","uid","email","timestamp","userData","updates","FeedChart","src","GrowConfig","saveConfig","dbHelper","setGrowConfig","watchGrowConfig","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","abrupt","stop","_x","apply","arguments","setFetchedConfig","configObj","handleTempMinChange","handleTempMaxChange","handleTempHystChange","handleFanMinChange","handleFanMaxChange","handleHumidityMinChange","handleHumidityMaxChange","handleHumidityHystChange","handleHumidifierMinChange","handleHumidifierMaxChange","_ismounted","watchConfig","className","JournalAddEditModal","handleTitleChange","handleContentChange","cancelModal","deleteAllAddedImages","saveEntry","saveJournalEntry","displayFullImage","handleImageUpload","_ref2","_callee2","_context2","tempImages","tempAddedImages","addedImages","thumb","deleteImage","dataset","img","handleImageDelete","handleDateChange","dt","handleGrowStageChange","editPost","tempTrueDate","tempPostDate","tempContent","tempTitle","undefined","tempGrowStage","tempPostId","files","_this3","renderedThumbnails","map","image","alt","data-value","react_datepicker_min_default","selected","placeholder","es","onDrop","onImageDrop","bind","accept","multiple","_ref3","getRootProps","getInputProps","role","aria-label","FullImageModal","nextImage","fullSizeList","imageUrl","currentImage","previousImage","imageList","currentFullImage","tempFullSizeList","JournalCreateModal","handleJournalNameChange","setJournalID","createJournal","JournalTimelineButton","setEntries","entries","monthDayDate","timelineDate","idVar","charAt","toUpperCase","slice","isActiveEntry","currentEntryID","array","datetimeShortMD","dateString","toDateString","JournalBoxItem","journal","updatedAtDate","updatedAtHoursString","getHours","updatedAtMinutesString","getMinutes","JournalEntry","currentEntry","editEntryByID","prevProps","prevState","datetimeTrue","GrowJournal","watchEntries","watchJournalEntries","entriesList","dotsList","timelineEntries","timelineDots","displayEntries","addTimelineEntry","displayContent","timelineEntry","openFullImageModal","fullImageModalImages","openFullImage","handleJournalChange","openCreateJournalModal","testContent","renderedJournalOptions","userJournals","renderedUserJournals","GrowJournal_JournalBoxItem","renderedJournalEntries","GrowJournal_JournalEntry","renderedTimelineDots","dot","GrowJournal_JournalTimelineButton","GrowJournal_JournalAddEditModal","GrowJournal_FullImageModal","GrowJournal_JournalCreateModal","GrowDataDisplay","cTemp","fanSpeed","humiPower","humidity","liveData","Math","round","backgroundIndicator","GraphSensorsBox","componentDidUpdate","rawGrowData","gwID","rawData","data","processedData","processedPoint","getGraphData","rawContent","payload","readableTime","moment","fromNow","tempTemp","tempTempColor","tempFanPower","tempFanSpdColor","tempHumidity","tempHumidityColor","tempHumidifierPower","tempHumiPwrColor","line","dataKey","stroke","style","color","renderDayGraph","parentSize","xSize","floor","ySize","es6","width","height","yAxisId","domain","tickFormatter","unixTime","format","hide","orientation","renderTooltip","GrowBoxItem","componentDidMount","urls","cam","camURL","componentWillUnmount","watchPiCam","tempURL","setInterval","tempCamURL","openFullCam","openGrow","openMainPage","checkActive","lastUpdateTime","difference","activeIndicatorStyle","graphElementSize","graphSizeUpdated","divRef","clientWidth","clientHeight","tempSize","lastUpdate","liveGrowData","objectFit","cursor","GrowPage_GrowDataDisplay","element","Graphs_GraphSensorsBox","_extends","assign","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","area_ref2","x","y","fill","SvgArea","svgRef","ForwardRef","forwardRef","__webpack_require__","p","container_extends","container_objectWithoutProperties","container_objectWithoutPropertiesLoose","container_ref2","SvgContainer","container_ForwardRef","GrowVisualEditor","baseDimensionsPixels","visualEditorSizeUpdate","baseDimensions","editorDimensions","elementSize","baseWidth","baseHeight","widthOverHeight","setDimensions","display","flexDirection","backgroundColor","margin","padding","flex","position","justifyContent","GrowSetUp","GrowConfig_GrowVisualEditor","GrowDetailsConfig","handleLightsOnChange","handleLightsOffChange","getResetValue","setResetValue","resetValue","handleReset","resetGrow","entry_default","marginTop","userSelect","GrowConfig_GrowSetUp","GraphSensors","growConfig","generateTickSourceArrays","rawRef","concatData","list","dataLength","processData","m","subtract","lightsOnArray","lightsOffArray","add","createTickArray","tickRange","ticks","tempOnArray","tempOffArray","sourceArray","tick","lightBackgrounds","tickArray","window","displayWindow","now","tempTemp2","tempTempColor2","tempHumidity2","tempHumidityColor2","tempTemp3","tempTempColor3","tempHumidity3","tempHumidityColor3","s2Temp","s2Humi","s3Temp","s3Humi","toggleTempLine","displayTemp","toggleFanLine","displayFan","toggleHumidityLine","displayHumidity","toggleHumidifierLine","displayHumidifier","toggle1","toggle3","toggle12","toggle24","toggle72","strokeWidth","vertical","horizontal","verticalFill","fillOpacity","marginLeft","fontSize","wi_index_esm","GrowDetailsGraphs","Graphs_GraphSensors","GrowDetailsPage","dataLengthRef","processGrowData","growData","lastLiveData","SENSOR_PIDS","SENSOR_NAMES","SENSOR_TYPES","SENSOR_LINE_COLORS","SENSOR_LINE_THICKNESSES","DAILY_HIGHS","DAILY_HIGHS_TIMES","DAILY_LOWS","DAILY_LOWS_TIMES","DAILY_AVGS","YEST_AVGS","lastDayData","yesterdayData","SENSORS","sensor","PID","thickness","pid","tIndex","parseFloat","getLinkedJournals","setLinkedJournals","linkedJournals","openJournals","displayBottom","openData","openConfig","openFeed","openEditFeed","getConfig","setConfig","zIndexOne","zIndex","zIndexZero","journalsStyle","graphsStyle","feedStyle","editFeedStyle","configStyle","renderedLinkedJournals","listItems","maxHeight","sA1_Temp","visibility","marginBottom","yestTempAVG","tempAVG","highTemp","lowTemp","overflowY","GrowPage_GrowDetailsGraphs","feed_chart","feed_edit","GrowPage_GrowDetailsConfig","maxWidth","GrowCamFull","closeCam","closeFullCam","GrowPage","page","openCreateGrowModal","setGrow","renderedGrowBoxes","GrowPage_GrowBoxItem","GrowPage_GrowDetailsPage","GrowPage_GrowCamFull","GraphSensorsTest","growDeprecate","getData","getThreeDays","GrowGraphsTest","Graphs_GraphSensorsTest","AppBar","setMainContent","openGrows","openGanjaGrove","openVegger","setGrowByID","handleSignOut","signOut","location","reload","renderedLiveGrowButtons","liveButtonData","brokenName","acroName","piece","flowerTempRef","flowerHumidityRef","App","getThreeDayData","setThreeDayData","getLiveGrowData","setLiveGrowData","dataID","newGrowData","currentData","previousData","threeDayData","tempThreeDayData","parseInt","getUsername","UID","URL_livecam","setValue","mainContent","currentGrow","openChart","editChart","open","openMainPageFromExternal","configGrowID","openGraphs","URL_vegger_livecam","getUserGrows","getUserJournals","app_bar_AppBar","main_content_GrowJournal_GrowJournal","main_content_GrowPage_GrowPage","main_content_FeedChart_FeedChart","main_content_GrowConfig_GrowConfig","graphs_GrowGraphsTest","auth_SignIn","gotoSignUp","auth_SignUp","Boolean","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8946c27.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport 'firebase/auth' \r\nimport 'firebase/storage' \r\n\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyBJuUseKfGN_MjNEWg722WY1FsO2xZ1AuE\",\r\n    authDomain: \"grovv-22cbd.firebaseapp.com\",\r\n    databaseURL: \"https://grovv-22cbd.firebaseio.com\",\r\n    projectId: \"grovv-22cbd\",\r\n    storageBucket: \"grovv-22cbd.appspot.com\",\r\n    messagingSenderId: \"30272449560\"\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config);\r\n        }\r\n\r\n        this.db = firebase.database();\r\n        this.auth = firebase.auth();\r\n        this.storage = firebase.storage();\r\n    }\r\n}\r\n\r\nexport default Firebase;\r\n","import Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass DbHelper {\r\n\r\n    constructor() {\r\n\r\n        this.firebase = new Firebase();\r\n\r\n        this.userID = 'wR4QKyZ77mho1fL0FQWSMBQ170S2'\r\n\r\n    }\r\n\r\n\r\n    // .......... //\r\n    // LIVE DATA  //\r\n    // .......... //\r\n    // Get live data from firebase\r\n    // TODO: FIx when database is changed\r\n    async getLiveGrowData(userGrows, setData) {\r\n\r\n        userGrows.forEach((grow) => {\r\n            // Grow Live Data in firebase\r\n            var ref = this.firebase.db.ref().child('grow_data').child(this.userID).child(grow.id).child('live_data')\r\n\r\n            console.log(\"GROW GET DATA \" + grow.id)\r\n\r\n            ref.on('value', (snapshot) => {\r\n\r\n                console.log(grow.id + \" IS \")\r\n                console.log(snapshot.val())\r\n\r\n                setData(grow.id, snapshot.val())\r\n            }, function (errorObject) {\r\n                console.log(\"follow \" + grow + \" live failed: \" + errorObject.code);\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // ....... //\r\n    // GRAPHS  //\r\n    // ....... //\r\n\r\n    // Get 3 day data window from firebase\r\n    async getThreeDays(growID, setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('grow_data').child(this.userID).child(growID).child('sensor_data')\r\n\r\n\r\n        var date = new Date();\r\n        var year = date.getFullYear().toString()\r\n        var month = (date.getMonth() + 1).toString()\r\n        if (month.length < 2) {\r\n            month = '0' + month\r\n        }\r\n\r\n        var days = []\r\n        var tempDay = null\r\n        var dy = date.getDate()\r\n        if ((dy - 2) >= 1) {\r\n            tempDay = dy - 2\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if ((dy - 1) >= 1) {\r\n            tempDay = dy - 1\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if (dy.toString().length < 2) {\r\n            dy = '0' + dy\r\n        }\r\n        days[days.length] = dy\r\n\r\n        var i = 0;\r\n\r\n        var staticTwoDayData = []\r\n        var getTwoDaysAddedDays = []\r\n\r\n        days.forEach((day) => {\r\n            if (day.toString() === dy.toString()) {\r\n                return;\r\n            }\r\n\r\n            ref.child(year).child(month).child(day).on(\"value\", (snapshot) => {\r\n                if (!getTwoDaysAddedDays.includes(day)) {\r\n                    getTwoDaysAddedDays[getTwoDaysAddedDays.length] = day\r\n                } else {\r\n                    return;\r\n                }\r\n                snapshot.forEach((child) => {\r\n                    child.forEach((gChild) => {\r\n                        i++;\r\n                        if (i % 10 === 0 || i === 0) {\r\n                            var dataPoint = gChild.val()\r\n                            var dataTime = new Date(dataPoint.time).getTime()\r\n                            dataPoint.time = dataTime\r\n                            staticTwoDayData[staticTwoDayData.length] = dataPoint;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                if ((getTwoDaysAddedDays.length === days.length - 1)) {\r\n\r\n\r\n                    ref.child(year).child(month).child(dy).on(\"value\", (snapshot) => {\r\n\r\n                        console.log(\"DAYALOOUYA! deeep\" + dy)\r\n                        var tempCurrentData = [];\r\n\r\n\r\n                        snapshot.forEach((child) => {\r\n                            child.forEach((gChild) => {\r\n                                i++;\r\n                                if (i % 10 === 0 || i === 0) {\r\n                                    var dataPoint = gChild.val()\r\n                                    var dataTime = new Date(dataPoint.time).getTime()\r\n                                    dataPoint.time = dataTime\r\n                                    tempCurrentData[tempCurrentData.length] = dataPoint;\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        tempCurrentData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n                        console.log(\"DBHELPER Test 3-day Datapoints to return... grow:\" + growID)\r\n                        console.log(tempCurrentData.length);\r\n                        console.log(tempCurrentData[0]);\r\n                        console.log(tempCurrentData[tempCurrentData.length - 1]);\r\n\r\n                        var fullData = staticTwoDayData.concat(tempCurrentData);\r\n\r\n                        fullData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n\r\n                        setData(fullData);\r\n\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Get 3 day data window from firebase\r\n    getThreeDayData(growID, setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('grow_data').child(this.userID).child(growID).child('sensor_data')\r\n\r\n\r\n        var date = new Date();\r\n        var year = date.getFullYear().toString()\r\n        var month = (date.getMonth() + 1).toString()\r\n        if (month.length < 2) {\r\n            month = '0' + month\r\n        }\r\n\r\n        var days = []\r\n        var tempDay = null\r\n        var dy = date.getDate()\r\n        if ((dy - 2) >= 1) {\r\n            tempDay = dy - 2\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if ((dy - 1) >= 1) {\r\n            tempDay = dy - 1\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if (dy.toString().length < 2) {\r\n            dy = '0' + dy\r\n        }\r\n        days[days.length] = dy\r\n\r\n        days.forEach((day) => {\r\n\r\n            ref.child(year).child(month).child(day).on(\"value\", (snapshot) => {\r\n\r\n                // TODO: on child added listener instead, this this var stored outside the \"on()\" event\r\n                var dayData = []\r\n\r\n                snapshot.forEach((child) => {\r\n                    child.forEach((gChild) => {\r\n                        var dataPoint = gChild.val()\r\n\r\n                        dataPoint.time = dataPoint.time * 1000\r\n\r\n                        dayData[dayData.length] = dataPoint;\r\n                    });\r\n                });\r\n\r\n                dayData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n                console.log(\"Day dat\" + growID)\r\n                console.log(dayData)\r\n\r\n                setData(growID, day, dayData);\r\n            });\r\n        });\r\n    }\r\n\r\n    // ............ //\r\n    // GROW CONFIG  //\r\n    // ............ //\r\n\r\n    // Watch Grow Config in firebase\r\n    watchGrowConfig(growID, setData) {\r\n\r\n        // Config data in firebase // TODO... proper\r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            if (snapshot.val() === null) {\r\n                return;\r\n            }\r\n\r\n            // TODO: just set it to snapshot.val()... doing below is redundant..\r\n            setData({\r\n                temp_min: snapshot.val().temp_min,\r\n                temp_max: snapshot.val().temp_max,\r\n                temp_hyst: snapshot.val().temp_hyst,\r\n                fan_min: snapshot.val().fan_min,\r\n                fan_max: snapshot.val().fan_max,\r\n                humidity_min: snapshot.val().humidity_min,\r\n                humidity_max: snapshot.val().humidity_max,\r\n                humidity_hyst: snapshot.val().humidity_hyst,\r\n                humidifier_min: snapshot.val().humidifier_min,\r\n                humidifier_max: snapshot.val().humidifier_max,\r\n                lights_on: snapshot.val().lights_on,\r\n                lights_off: snapshot.val().lights_off\r\n            });\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch config failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // Set Grow Config in firebase\r\n    setGrowConfig(growID, config) {\r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config')\r\n        ref.update(config)\r\n    }\r\n\r\n\r\n    // Watch Grow Config in firebase\r\n    watchGrowSensors(growID, setData) {\r\n\r\n        // Config data in firebase // TODO... proper\r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config').child('SENSORS')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            if (snapshot.val() === null) {\r\n                return;\r\n            }\r\n\r\n            // setData({\r\n            //     type: snapshot.val().type,\r\n            //     name: snapshot.val().name,\r\n            //     PID: snapshot.val().PID,\r\n            //     thickness: snapshot.val().thickness,\r\n            //     color: snapshot.val().color,\r\n            // });\r\n\r\n            setData(snapshot.val())\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch sensors failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n\r\n    // .................. //\r\n    // GROW CONFIG RESET  //\r\n    // .................. //\r\n\r\n    // Get Reset Value\r\n    getResetValue(growID, setData) {\r\n\r\n        // Config data isResetting in firebase \r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config').child('isResetting')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            if (snapshot.val() === null) {\r\n                setData(false);\r\n                return;\r\n            }\r\n\r\n            setData(snapshot.val())\r\n\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch isResetting failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // Get Reset Value\r\n    resetGrow(growID) {\r\n        // Config data isResetting in firebase \r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config').child('isResetting')\r\n\r\n        ref.set(true)\r\n    }\r\n\r\n\r\n\r\n    // ........... //\r\n    // GROW PAGE   //\r\n    // ........... //\r\n\r\n    // Get live data from firebase\r\n    getUserGrows(setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('users').child(this.userID).child('grows')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var userGrowIDs = [];\r\n\r\n            console.log(\"TODO: remove filter. what does this even do O.o \")\r\n            snapshot.forEach((child) => {\r\n                if (!child.val().sensors_live) {\r\n                    userGrowIDs[userGrowIDs.length] = child.key\r\n                }\r\n            });\r\n\r\n            var setUserGrows = []\r\n\r\n            userGrowIDs.forEach((key) => {\r\n                var growRef = this.firebase.db.ref().child('grows').child(this.userID).child(key)\r\n\r\n                growRef.once('value', (snapshot) => {\r\n\r\n                    if (!setUserGrows.includes(snapshot.val())) {\r\n                        setUserGrows[setUserGrows.length] = snapshot.val()\r\n                    }\r\n\r\n                    setUserGrows.sort((a, b) => (a.createdAt > b.createdAt) ? 1 : -1)\r\n\r\n                    setData(setUserGrows)\r\n\r\n                }, function (errorObject) {\r\n                    console.log(\"watch user grows grow failed: \" + errorObject.code);\r\n                });\r\n            })\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch user grows failed: \" + errorObject.code);\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    // ............ //\r\n    // GROW JRNLS  //\r\n    // ............ //\r\n\r\n    // Get live data from firebase\r\n    getLinkedJournals(journals, setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('users').child(this.userID).child('journals')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var journalsList = [];\r\n\r\n            snapshot.forEach((child) => {\r\n                if (journals) {\r\n                    Object.keys(journals).forEach(function (key) {\r\n                        if (child.val().id === key) {\r\n                            journalsList.push(child.val())\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            journalsList.sort((a, b) => (a.updatedAt < b.updatedAt) ? 1 : -1)\r\n\r\n            setData(journalsList)\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"GrowDetails watch user journals failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // ............ //\r\n    // WATCH JRNLS  //\r\n    // ............ //\r\n\r\n    // Watch Journals\r\n    getUserJournals(setUserJournals) {\r\n        var ref = this.firebase.db.ref().child('users').child(this.userID).child('journals')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var journalsList = [];\r\n\r\n            snapshot.forEach((child) => {\r\n                journalsList.push(child.val())\r\n            });\r\n\r\n            console.log(\"Journals List:\")\r\n            console.log(journalsList)\r\n\r\n            journalsList.sort((a, b) => (a.updatedAt < b.updatedAt) ? 1 : -1)\r\n\r\n            setUserJournals(journalsList)\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch user journals failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // Watch Entries\r\n    watchJournalEntries(journalID, setJournalEntries) {\r\n\r\n        var ref = this.firebase.db.ref().child('journals').child(this.userID).child(journalID).child('entries')\r\n\r\n        console.log('watchin... ' + journalID)\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var tempEntriesList = []\r\n            snapshot.forEach((child) => {\r\n                tempEntriesList.push(child.val())\r\n            });\r\n\r\n            tempEntriesList.sort((a, b) => (a.datetime_true > b.datetime_true) ? 1 : -1)\r\n\r\n            var tempDotsList = [];\r\n            tempEntriesList.forEach((entry) => {\r\n                if (!tempDotsList.includes(entry.datetime_short)) {\r\n                    tempDotsList[tempDotsList.length] = entry.datetime_short;\r\n                }\r\n            });\r\n\r\n            var tempDeepDotsList = [];\r\n            tempDotsList.forEach((dotDate) => {\r\n                var dotValue = []\r\n                tempEntriesList.forEach((entry) => {\r\n                    if (dotDate === entry.datetime_short) {\r\n                        dotValue[dotValue.length] = entry;\r\n                    }\r\n                });\r\n\r\n                tempDeepDotsList[tempDeepDotsList.length] = dotValue;\r\n            });\r\n\r\n            setJournalEntries(tempEntriesList, tempDeepDotsList)\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"follow journal failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // ............ //\r\n    // JRNL CREATE  //\r\n    // ............ //\r\n\r\n    // Get live data from firebase\r\n    async createJournal(journalName, openJournal) {\r\n        // ref for actual journal\r\n        var ref = this.firebase.db.ref().child('journals').child(this.userID).push()\r\n        // user object ref to journal key\r\n        var userRef = this.firebase.db.ref().child('users').child(this.userID).child('journals').child(ref.key)\r\n\r\n        var journalID = ref.key\r\n        var nowDate = new Date()\r\n\r\n        ref.update({ 'id': journalID, 'name': journalName, 'updatedAt': nowDate.getTime(), 'createdAt': nowDate.getTime(), 'previewImage': 'https://via.placeholder.com/160x120?text=NO+PREVIEW' })\r\n        userRef.update({ 'id': journalID, 'name': journalName, 'updatedAt': nowDate.getTime(), 'createdAt': nowDate.getTime(), 'previewImage': 'https://via.placeholder.com/160x120?text=NO+PREVIEW' })\r\n\r\n        openJournal(journalID)\r\n    }\r\n\r\n\r\n    // ................ //\r\n    // SAVE JRNL ENTRY  //\r\n    // ................ //\r\n\r\n    // Get live data from firebase\r\n    saveJournalEntry(journalID, entryID, trueDate, title, content, growStage, postDate, images, closeModal) {\r\n        // Journal data in firebase // TODO scalable.\r\n        var ref = this.firebase.db.ref().child('journals').child(this.userID).child(journalID).child('entries')\r\n\r\n        var editDate = new Date().getTime()\r\n\r\n        var temptTrueDate = trueDate\r\n        var shortMonth = (temptTrueDate.getMonth() + 1) + \"-\"\r\n        if (shortMonth.length === 2) {\r\n            shortMonth = \"0\" + shortMonth;\r\n        }\r\n        var shortDateVar = shortMonth + temptTrueDate.getDate() + \"-\" + temptTrueDate.getFullYear()\r\n\r\n        if (!entryID) {\r\n            // ref for actual journal\r\n            var refPush = ref.push()\r\n            entryID = refPush.key\r\n        }\r\n\r\n        if (!postDate) {\r\n            postDate = new Date()\r\n        }\r\n\r\n        if (!trueDate) {\r\n            trueDate = new Date()\r\n        }\r\n\r\n\r\n        ref.child(entryID).update({\r\n            'id': entryID,\r\n            'title': title,\r\n            'published': true,\r\n            'content': content,\r\n            'grow_stage': growStage,\r\n            'datetime_post': postDate.getTime(),\r\n            'datetime_edit': editDate,\r\n            'datetime_true': trueDate.getTime(),\r\n            'datetime_short': shortDateVar,\r\n            'journal_id': journalID,\r\n            'images': images\r\n        })\r\n\r\n        console.log('set journal entry ' + entryID)\r\n\r\n        // update updatedAt\r\n        var jRef = this.firebase.db.ref().child('journals').child(this.userID).child(journalID)\r\n        var userRef = this.firebase.db.ref().child('users').child(this.userID).child('journals').child(journalID)\r\n        var nowDate = new Date()\r\n        jRef.child('updatedAt').set(nowDate.getTime())\r\n        userRef.child('updatedAt').set(nowDate.getTime())\r\n\r\n\r\n        closeModal(entryID);\r\n    }\r\n\r\n    // .................. //\r\n    // JRNL ENTRY IMAGES  //\r\n    // .................. //\r\n\r\n    // Upload Image\r\n    async handleImageUpload(file, setImages) {\r\n        // Get storage reference and push file blob \r\n        var storageRef = this.firebase.storage.ref().child('journals').child(this.userID);\r\n\r\n        console.log(\"filename:\" + file.name)\r\n\r\n        var dateNow = new Date()\r\n\r\n        const metadata = { contentType: file.type };\r\n        const storageTask = storageRef.child(dateNow.getTime() + file.name).put(file, metadata);\r\n        storageTask\r\n            .then(snapshot => snapshot.ref.getDownloadURL())\r\n            .then(url => {\r\n                // Create thumb url from url (thumbs automatically created via cloud function on upload)\r\n                var urlSplit = url.split(\"%2F\")\r\n                var thumbURL = urlSplit[0] + \"%2F\" + urlSplit[1] + \"%2Fthumb_\" + urlSplit[2]\r\n\r\n                // URL AND THUMBURL\r\n                setImages(url, thumbURL)\r\n\r\n            })\r\n    }\r\n\r\n    // Delete Image\r\n    handleImageDelete(url) {\r\n        // Create a reference to the file to delete\r\n        var desertRef = this.firebase.storage.refFromURL(url)\r\n\r\n        // Delete the file\r\n        desertRef.delete().then(function () {\r\n            // File deleted successfully\r\n            console.log(\"deleted \" + url + \"successfully :)\")\r\n        }).catch(function (error) {\r\n            // Uh-oh, an error occurred!\r\n            console.log(\"delete \" + url + \"error :(\")\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default DbHelper;","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            SHOWFIELDS: false\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n\r\n        this.firebase.auth.onAuthStateChanged((user) => {\r\n            if (!user) {\r\n                this.showSigninFields();\r\n            }\r\n        });\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    validateEmail(testEmail) {\r\n        var emailRegex = /^\\S+@\\S+$/;\r\n        return emailRegex.test(String(testEmail).toLowerCase());\r\n    }\r\n\r\n    validatePassword(testPswd) {\r\n        var paswdRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;\r\n        return paswdRegex.test(String(testPswd));\r\n    }\r\n\r\n    enterSubmit() {\r\n        console.log(\"SignIn submit enter pressed\");\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        console.log(`SignUp submit enter pressed - username ${username}`);\r\n        if (!this.validateEmail(username)) {\r\n            alert('Bad email me thinks :(')\r\n            return;\r\n        }\r\n        // if (!this.validatePassword(password)) {\r\n        //     alert('Bad password. Must be 7-15 characters with at least 1 numeric digit and a special character.')\r\n        //     return;\r\n        // }\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.hideSigninFields();\r\n\r\n        this.firebase.auth.signInWithEmailAndPassword(username, password).catch(function (error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(`${errorCode}: ${errorMessage}`)\r\n            alert(`${errorCode}: ${errorMessage}`)\r\n            this.setState({ SHOWFIELDS: true });\r\n            return;\r\n            // ...\r\n        });\r\n\r\n        console.log(`username ${username} - logged in`)\r\n        // this.props.signIn();\r\n        return;\r\n\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        console.log(\"SignIn submit pressed\");\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        console.log(`SignUp submit pressed - username ${username}`);\r\n        if (!this.validateEmail(username)) {\r\n            alert('Bad email me thinks :(')\r\n            return;\r\n        }\r\n        // if (!this.validatePassword(password)) {\r\n        //     alert('Bad password. Must be 7-15 characters with at least 1 numeric digit and a special character.')\r\n        //     return;\r\n        // }\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.hideSigninFields();\r\n\r\n        this.firebase.auth.signInWithEmailAndPassword(username, password).catch(function (error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(`${errorCode}: ${errorMessage}`)\r\n            alert(`${errorCode}: ${errorMessage}`)\r\n            this.setState({ SHOWFIELDS: true });\r\n            return;\r\n            // ...\r\n        });\r\n\r\n        console.log(`username ${username} - logged in`)\r\n        // this.props.signIn();\r\n        return;\r\n\r\n    }\r\n\r\n    hideSigninFields = () => {\r\n        this.setState({ SHOWFIELDS: false });\r\n    }\r\n\r\n    showSigninFields = () => {\r\n        this.setState({ SHOWFIELDS: true });\r\n    }\r\n\r\n    // handleGotoSignUp = () => {\r\n    //     this.props.gotoSignUp(\"signup\");\r\n    //     console.log(\"Goto signup pressed\");\r\n    // }\r\n\r\n    render() {\r\n\r\n        if (this.state.SHOWFIELDS) {\r\n            return (\r\n                <div id=\"signin-div\">\r\n                    <h3>Sign In</h3>\r\n                    <div>\r\n                        Email:\r\n                        <input id=\"signin-username\" value={this.state.username} onChange={this.handleUsernameChange} />\r\n                    </div>\r\n                    <div>\r\n                        Password:\r\n                        <input type=\"password\" id=\"signin-password\" value={this.state.password} \r\n                        onChange={this.handlePasswordChange}\r\n                        onKeyPress={(ev) => {\r\n                            console.log(`Pressed keyCode ${ev.key}`);\r\n                            if (ev.key === 'Enter' || ev.key === '13') {\r\n                              // Do code here\r\n                              this.enterSubmit()\r\n                            }\r\n                          }} />\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"submit-signin-btn\" onClick={this.handleSubmit} > Sign in! </button>\r\n                    </div>\r\n                    {/* <div>\r\n                        <button id=\"goto-signup-btn\" onClick={this.handleGotoSignUp} > Sign up! </button>\r\n                    </div> */}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    One Moment...\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default SignIn;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            SHOWFIELDS: false\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n\r\n        this.firebase.auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                this.postUserToFirebase(user.uid, user.email);\r\n            } else {\r\n                this.showSignupFields();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    postUserToFirebase(uid, username) {\r\n        let date = new Date()\r\n        let timestamp = date.getTime()\r\n\r\n        // A user entry.\r\n        var userData = {\r\n            uid: uid,\r\n            username: username,\r\n            createdAt: timestamp,\r\n            updatedAt: timestamp,\r\n        };\r\n\r\n        // Write the new post's data simultaneously in the posts list and the user's post list.\r\n        var updates = {};\r\n        updates['/users/' + uid] = userData;\r\n\r\n        return this.firebase.db.ref().update(updates);\r\n    }\r\n\r\n    validateEmail(testEmail) {\r\n        var emailRegex = /^\\S+@\\S+$/;\r\n        return emailRegex.test(String(testEmail).toLowerCase());\r\n    }\r\n\r\n    validatePassword(testPswd) {\r\n        var paswdRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;\r\n        return paswdRegex.test(String(testPswd));\r\n    }\r\n\r\n    hideSignupFields = () => {\r\n        this.setState({ SHOWFIELDS: false });\r\n    }\r\n\r\n    showSignupFields = () => {\r\n        this.setState({ SHOWFIELDS: true });\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        console.log(`SignUp submit pressed - username ${username}`);\r\n        if (!this.validateEmail(username)) {\r\n            alert('Bad email me thinks :(')\r\n            this.setState({\r\n                username: ''\r\n            });\r\n            return;\r\n        }\r\n        if (!this.validatePassword(password)) {\r\n            alert('Bad password. Must be 7-15 characters with at least 1 numeric digit and a special character.')\r\n            this.setState({\r\n                password: ''\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.firebase.auth.createUserWithEmailAndPassword(username, password).catch(function (error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(`${errorCode}: ${errorMessage}`)\r\n            return;\r\n            // ...\r\n        });\r\n        \r\n        return;\r\n    }\r\n\r\n    handleGotoSignIn = () => {\r\n        this.props.gotoSignIn(\"signin\");\r\n        console.log(\"Goto signin pressed\");\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.SHOWFIELDS) {\r\n            return (\r\n                <div id=\"signup-div\">\r\n                    <h3>Sign Up</h3>\r\n                    <div>\r\n                        Email:\r\n                        <input id=\"signup-username\" value={this.state.username} onChange={this.handleUsernameChange} />\r\n                    </div>\r\n                    <div>\r\n                        Password:\r\n                        <input type=\"password\" id=\"signup-password\" value={this.state.password} onChange={this.handlePasswordChange} />\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"submit-signup-btn\" onClick={this.handleSubmit} > Sign up! </button>\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"goto-signin-btn\" onClick={this.handleGotoSignIn} > Sign in! </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    One Moment...\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nclass FeedChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id=\"Chart-Page\">\r\n                <iframe id=\"Food-Chart\" title=\"FoodChart\" src=\"https://docs.google.com/spreadsheets/d/e/2PACX-1vQiIvBEmBjgIFQ_5vSAZJrzVTepyDpyDYeNrOrfqWOuraA_MHZE_sRLyGkcARlIYR-INkuwq667Seqe/pubhtml?widget=true&amp;headers=false\">\r\n                </iframe>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedChart;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\n\r\nclass GrowConfig extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            temp_min: '',\r\n            temp_max: '',\r\n            temp_hyst: '',\r\n            fan_min: '',\r\n            fan_max: '',\r\n            humidity_min: '',\r\n            humidity_max: '',\r\n            humidity_hyst: '',\r\n            humidifier_min: '',\r\n            humidifier_max: ''\r\n        };\r\n\r\n        this.dbHelper = new DbHelper()\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n        this.watchConfig = this.watchGrowConfig(this.setFetchedConfig);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    saveConfig = () => {\r\n        this.dbHelper.setGrowConfig(\r\n            {\r\n                temp_min: this.state.temp_min,\r\n                temp_max: this.state.temp_max,\r\n                temp_hyst: this.state.temp_hyst,\r\n                fan_min: this.state.fan_min,\r\n                fan_max: this.state.fan_max,\r\n                humidity_min: this.state.humidity_min,\r\n                humidity_max: this.state.humidity_max,\r\n                humidity_hyst: this.state.humidity_hyst,\r\n                humidifier_min: this.state.humidifier_min,\r\n                humidifier_max: this.state.humidifier_max\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    saveConfig = () => {\r\n        this.dbHelper.setGrowConfig(\r\n            this.props.growID,\r\n            {\r\n                temp_min: this.state.temp_min,\r\n                temp_max: this.state.temp_max,\r\n                temp_hyst: this.state.temp_hyst,\r\n                fan_min: this.state.fan_min,\r\n                fan_max: this.state.fan_max,\r\n                humidity_min: this.state.humidity_min,\r\n                humidity_max: this.state.humidity_max,\r\n                humidity_hyst: this.state.humidity_hyst,\r\n                humidifier_min: this.state.humidifier_min,\r\n                humidifier_max: this.state.humidifier_max\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    watchGrowConfig = async (setData) => {\r\n        try {\r\n            await this.dbHelper.watchGrowConfig(this.props.growID, setData)\r\n        } catch(e) {\r\n            console.log(e); \r\n            return 'caught ' + e\r\n        }\r\n    }\r\n\r\n    setFetchedConfig = (configObj) => {\r\n        \r\n        this.setState({\r\n            temp_min: configObj.temp_min,\r\n            temp_max: configObj.temp_max,\r\n            temp_hyst: configObj.temp_hyst,\r\n            fan_min: configObj.fan_min,\r\n            fan_max: configObj.fan_max,\r\n            humidity_min: configObj.humidity_min,\r\n            humidity_max: configObj.humidity_max,\r\n            humidity_hyst: configObj.humidity_hyst,\r\n            humidifier_min: configObj.humidifier_min,\r\n            humidifier_max: configObj.humidifier_max\r\n        });\r\n\r\n    }\r\n\r\n    handleTempMinChange = (event) => {\r\n        this.setState({ temp_min: event.target.value });\r\n    }\r\n\r\n    handleTempMaxChange = (event) => {\r\n        this.setState({ temp_max: event.target.value });\r\n    }\r\n\r\n    handleTempHystChange = (event) => {\r\n        this.setState({ temp_hyst: event.target.value });\r\n    }\r\n\r\n    handleFanMinChange = (event) => {\r\n        this.setState({ fan_min: event.target.value });\r\n    }\r\n\r\n    handleFanMaxChange = (event) => {\r\n        this.setState({ fan_max: event.target.value });\r\n    }\r\n\r\n    handleHumidityMinChange = (event) => {\r\n        this.setState({ humidity_min: event.target.value });\r\n    }\r\n\r\n    handleHumidityMaxChange = (event) => {\r\n        this.setState({ humidity_max: event.target.value });\r\n    }\r\n\r\n    handleHumidityHystChange = (event) => {\r\n        this.setState({ humidity_hyst: event.target.value });\r\n    }\r\n\r\n    handleHumidifierMinChange = (event) => {\r\n        this.setState({ humidifier_min: event.target.value });\r\n    }\r\n\r\n    handleHumidifierMaxChange = (event) => {\r\n        this.setState({ humidifier_max: event.target.value });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id=\"Config-Page\">\r\n                <h1>Grow Config</h1>\r\n                <div id=\"Config-Temp-Field\">\r\n                    <h2>TEMPERATURE</h2>\r\n                    <div id=\"Config-Temp-Min-Max\">\r\n                        <div>\r\n                            Min:\r\n                            <input type=\"number\" className=\"Config-Input\" id=\"temp-min\" value={this.state.temp_min} onChange={this.handleTempMinChange} />°C\r\n                        </div>\r\n                        <div>\r\n                            Max:\r\n                            <input type=\"number\" className=\"Config-Input\" id=\"temp-max\" value={this.state.temp_max} onChange={this.handleTempMaxChange} />°C\r\n                        </div>\r\n                        <div>\r\n                            Hyst:\r\n                            <input type=\"number\" className=\"Config-Input\" id=\"temp-hyst\" value={this.state.temp_hyst} onChange={this.handleTempHystChange} />Δ°C\r\n                        </div>\r\n                    </div>\r\n                    <h3>FAN POWER</h3>\r\n                    <div id=\"Config-Fan-Min-Max\">\r\n                        <div>\r\n                            Min:\r\n                            <input type=\"number\" className=\"Config-Input\" id=\"fan-min\" value={this.state.fan_min} onChange={this.handleFanMinChange} />%\r\n                        </div>\r\n                        <div>\r\n                            Max:\r\n                            <input type=\"number\" className=\"Config-Input\" id=\"fan-max\" value={this.state.fan_max} onChange={this.handleFanMaxChange} />%\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div id=\"Config-Humidity-Field\">\r\n                    <h2>HUMIDITY</h2>\r\n                    <div id=\"Config-Humidity-Min-Max\">\r\n                        <div>\r\n                            Min:\r\n                            <input type=\"number\" className=\"Config-Input\" id=\"humidity-min\" value={this.state.humidity_min} onChange={this.handleHumidityMinChange} />% R.H.\r\n                        </div>\r\n                        <div>\r\n                            Max:\r\n                            <input type=\"number\" className=\"Config-Input\" id=\"humidity-max\" value={this.state.humidity_max} onChange={this.handleHumidityMaxChange} />% R.H.\r\n                        </div>\r\n                        <div>\r\n                            Hyst:\r\n                            <input type=\"number\" className=\"Config-Input\" id=\"humidity-hyst\" value={this.state.humidity_hyst} onChange={this.handleHumidityHystChange} />Δ % R.H.\r\n                        </div>\r\n                    </div>\r\n                    <h3>HUMIDIFIER POWER</h3>\r\n                    <div id=\"Config-Humidifier-Min-Max\">\r\n                        <div>\r\n                            Min:\r\n                            <input type=\"number\" className=\"Config-Input\" id=\"humidifier-min\" value={this.state.humidifier_min} onChange={this.handleHumidifierMinChange} />%\r\n                        </div>\r\n                        <div>\r\n                            Max:\r\n                            <input type=\"number\" className=\"Config-Input\" id=\"humidifier-max\" value={this.state.humidifier_max} onChange={this.handleHumidifierMaxChange} />%\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div id=\"SAVE-CONFIG-BTN\" onClick={this.saveConfig}>\r\n                    SAVE\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowConfig;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Dropzone from 'react-dropzone';\r\n\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\n\r\nclass JournalAddEditModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            content: '',\r\n            images: [],\r\n            addedImages: [],\r\n            journalID: this.props.journalID,\r\n            postDate: new Date(),\r\n            trueDate: new Date(),\r\n            growStage: 'veg', // pre, seedling, veg, flower, post\r\n            published: false,\r\n            entryID: ''\r\n        };\r\n\r\n        this.dbHelper = new DbHelper();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.editPost) {\r\n\r\n            var tempTrueDate = null\r\n            if (this.props.editPost.datetime_true) {\r\n                tempTrueDate = new Date(this.props.editPost.datetime_true)\r\n            } else {\r\n                tempTrueDate = this.state.trueDate\r\n            }\r\n\r\n            var tempPostDate = null\r\n            if (this.props.editPost.datetime_post) {\r\n                tempPostDate = new Date(this.props.editPost.datetime_post)\r\n            } else {\r\n                tempPostDate = this.state.postDate\r\n            }\r\n  \r\n\r\n            var tempContent = this.props.editPost.content\r\n            var tempTitle = this.props.editPost.title\r\n            var tempImages = this.props.editPost.images\r\n            if (tempImages === null || tempImages === undefined) {\r\n                tempImages = []\r\n            }\r\n            var tempGrowStage = null\r\n            if (this.props.editPost.grow_stage) {\r\n                tempGrowStage = this.props.editPost.grow_stage\r\n            } else {\r\n                tempGrowStage = this.state.growStage\r\n            }\r\n\r\n            var tempPostId = this.props.editPost.id\r\n\r\n            this.setState({\r\n                title: tempTitle,\r\n                content: tempContent,\r\n                trueDate: tempTrueDate,\r\n                postDate: tempPostDate,\r\n                growStage: tempGrowStage,\r\n                images: tempImages,\r\n                entryID: tempPostId,\r\n                published: true\r\n            });\r\n        }\r\n    }\r\n\r\n    handleTitleChange = (event) => {\r\n        this.setState({ title: event.target.value });\r\n    }\r\n\r\n    handleContentChange = (event) => {\r\n        this.setState({ content: event.target.value });\r\n    }\r\n\r\n    cancelModal = () => {\r\n\r\n        this.deleteAllAddedImages();\r\n\r\n        this.props.closeModal(this.state.entryID);\r\n    }\r\n\r\n    saveEntry = async () => {\r\n        if (this.state.content === '' && this.state.images.length === 0) {\r\n            alert(\"Needs content or images!\")\r\n            return;\r\n        }\r\n        this.setState({ published: true });\r\n\r\n        var title = null;\r\n        if (this.state.title === '' || !this.state.title) {\r\n            title = ''\r\n        } else {\r\n            title = this.state.title\r\n        }\r\n\r\n        var content = null;\r\n        if (this.state.content === '' || !this.state.content) {\r\n            content = ''\r\n        } else {\r\n            content = this.state.content\r\n        }\r\n\r\n        this.dbHelper.saveJournalEntry(\r\n            this.state.journalID,\r\n            this.state.entryID,\r\n            this.state.trueDate,\r\n            title,\r\n            content,\r\n            this.state.growStage,\r\n            this.state.postDate,\r\n            this.state.images,\r\n            this.closeModal\r\n        )\r\n    }\r\n\r\n    closeModal = (entryID) => {\r\n        this.props.closeModal(entryID);\r\n    }\r\n\r\n    onImageDrop(files) {\r\n\r\n        console.log(files);\r\n\r\n        files.forEach((file) => {\r\n            this.handleImageUpload(file);\r\n            console.log(\"upload \" + file);\r\n        })\r\n\r\n    }\r\n\r\n    displayFullImage = () => {\r\n\r\n        console.log(\"JournalAddEditModal todo\")\r\n    }\r\n\r\n\r\n    handleImageUpload = async (file) => {\r\n        try {\r\n            await this.dbHelper.handleImageUpload(file, this.setImages)\r\n        } catch (e) {\r\n            console.log(e);\r\n            return 'caught ' + e\r\n        }\r\n    }\r\n\r\n    setImages = (url, thumbURL) => {\r\n        var tempImages = this.state.images;\r\n        var tempAddedImages = this.state.addedImages;\r\n        tempImages.push({ 'url': url, 'thumb': thumbURL })\r\n        tempAddedImages.push({ 'url': url, 'thumb': thumbURL })\r\n        this.setState({\r\n            images: tempImages,\r\n            addedImages: tempAddedImages\r\n        });\r\n    }\r\n\r\n    deleteImage = (ev) => {\r\n        let val = ev.target.dataset.value;\r\n        console.log(val);\r\n        console.log(this.state.images);\r\n\r\n        let tempImages = []\r\n\r\n        this.state.images.forEach((img) => {\r\n            if (img.url.toString() === val) {\r\n                this.handleImageDelete(img.url);\r\n                this.handleImageDelete(img.thumb)\r\n            } else {\r\n                tempImages.push(img)\r\n            }\r\n        })\r\n\r\n        this.setState({ images: tempImages });\r\n\r\n    }\r\n\r\n    deleteAllAddedImages = () => {\r\n        let imagesToDelete = this.state.addedImages;\r\n        // this.setState({ images: [] });\r\n\r\n        imagesToDelete.forEach((img) => {\r\n            this.handleImageDelete(img.url);\r\n            this.handleImageDelete(img.thumb);\r\n        })\r\n    }\r\n\r\n    handleImageDelete = (url) => {\r\n        this.dbHelper.handleImageDelete(url);\r\n    }\r\n\r\n    handleDateChange = (dt) => {\r\n        this.setState({ trueDate: dt });\r\n    }\r\n\r\n    handleGrowStageChange = (event) => {\r\n        this.setState({ growStage: event.target.value });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        console.log(\"true DATE!!\")\r\n        console.log(this.state.trueDate)\r\n\r\n        if (this.state.images) {\r\n            var renderedThumbnails = this.state.images.map((image, i) => <div className=\"Temp-Image-Div\"><img key={i} alt=\"grow img\" data-value={image.url} src={image.url} className=\"Journal-Entry-Preview-Thumbnail\" onClick={this.displayFullImage} /><div data-value={image.url} onClick={this.deleteImage} className=\"Delete-Image-Btn\">X</div></div>)\r\n        }\r\n\r\n        return (\r\n            <div id=\"Journal-Modal-Space\">\r\n                <div id=\"Journal-Edit-Entry-Modal\">\r\n                    <div id=\"Journal-Edit-Topline\">\r\n                        {/* DATE PICKER  */}\r\n                        <DatePicker\r\n                            id=\"journal-edit-datepicker\"\r\n                            selected={this.state.trueDate}\r\n                            onChange={this.handleDateChange} />\r\n                        {/* STAGE PICKER  */}\r\n                        <select id=\"journal-edit-grow-stage\" onChange={this.handleGrowStageChange} value={this.state.growStage}>\r\n                            <option value=\"post\">Post</option>\r\n                            <option value=\"flower\">Flower</option>\r\n                            <option value=\"veg\">Veg</option>\r\n                            <option value=\"seedling\">Seedling</option>\r\n                            <option value=\"pre\">Pre</option>\r\n                        </select>\r\n                        {/* TITLE INPUT  */}\r\n                        <input className=\"journal-modal-edit-title\" placeholder=\"enter title...\" value={this.state.title} onChange={this.handleTitleChange} />\r\n                    </div>\r\n                    {/* BODY INPUT  */}\r\n                    <textarea className=\"journal-modal-edit-body\" placeholder=\"enter body content...\" value={this.state.content} onChange={this.handleContentChange} />\r\n                    {/* BODY INPUT  */}\r\n                    <div className=\"journal-add-images-area\">\r\n\r\n                        <Dropzone\r\n                            className=\"journal-add-images-dropzone\"\r\n                            onDrop={this.onImageDrop.bind(this)}\r\n                            accept=\"image/*\"\r\n                            multiple={true}>\r\n                            {({ getRootProps, getInputProps }) => {\r\n                                return (\r\n                                    <div {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n                                        {\r\n                                            <p id=\"Image-Drop-Text\">Try dropping some <br></br> images <span role=\"img\" aria-label=\"camera\">&#x1f4f7;</span> here, <br></br>or click to <br></br> select files.</p>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        </Dropzone>\r\n\r\n                        {(() => {\r\n                            if (renderedThumbnails) {\r\n                                return (\r\n                                    <div className=\"Journal-Edit-Post-Images\">\r\n                                        {renderedThumbnails}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                    </div>\r\n\r\n                    <div id=\"journal-cancel-save-btns\">\r\n                        <button className=\"journal-cancel-btn\" onClick={this.cancelModal}>Cancel</button>\r\n                        <button className=\"journal-save-entry-btn\" onClick={this.saveEntry}>Save Entry</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalAddEditModal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nclass FullImageModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageList: this.props.imageList,\r\n            currentImage: this.props.currentFullImage,\r\n            fullSizeList: []\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.imageList) {\r\n            var tempFullSizeList = []\r\n            this.props.imageList.forEach((image) => {\r\n                tempFullSizeList[tempFullSizeList.length] = image.url\r\n            });\r\n            this.setState({ fullSizeList: tempFullSizeList });\r\n        }\r\n\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.closeModal('');\r\n    }\r\n\r\n    nextImage = () => {\r\n\r\n        this.state.fullSizeList.forEach((imageUrl, i) => {\r\n            if (imageUrl === this.state.currentImage) {\r\n                if (i < this.state.fullSizeList.length - 1) {\r\n                    this.setState({ currentImage: this.state.fullSizeList[i + 1] });\r\n                }\r\n                return;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    previousImage = () => {\r\n\r\n        this.state.fullSizeList.forEach((imageUrl, i) => {\r\n            if (imageUrl === this.state.currentImage) {\r\n                if (i > 0) {\r\n                    this.setState({ currentImage: this.state.fullSizeList[i - 1] });\r\n                }\r\n                return;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"FULLIMAGE MODAL!\")\r\n        console.log(this.state.imageList)\r\n        console.log(this.state.currentImage)\r\n\r\n        return (\r\n            <div id=\"Full-Image-Modal-Space\">\r\n                <img id=\"Full-Image-Image\" alt=\"full size\" src={this.state.currentImage} />\r\n                <button onClick={this.closeModal} id=\"Full-Image-Close-Btn\">x</button>\r\n                <button onClick={this.previousImage} id=\"Full-Image-Last-Btn\">&#8804;</button>\r\n                <button onClick={this.nextImage} id=\"Full-Image-Next-Btn\">&#8805;</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FullImageModal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\n\r\nclass JournalCreateModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            journalName: '',\r\n            journalID: this.props.journalID\r\n        };\r\n\r\n\t\tthis.dbHelper = new DbHelper();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleJournalNameChange = (event) => {\r\n        this.setState({ journalName: event.target.value });\r\n    }\r\n\r\n    cancelModal = () => {\r\n        this.props.setJournalID(null);\r\n    }\r\n\r\n    createJournal = async () => {\r\n        if (this.state.journalName === '') {\r\n            alert(\"Journal needs a name!\")\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await this.dbHelper.createJournal(this.state.journalName, this.openJournal)\r\n        } catch (e) {\r\n            console.log(e);\r\n            return 'caught ' + e\r\n        }\r\n\r\n    }\r\n\r\n    openJournal = (journalID) => {\r\n        this.setState({ journalID: journalID });\r\n        this.props.setJournalID(journalID);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"Journal-Modal-Space\">\r\n                <div id=\"Journal-Create-Modal\">\r\n                    {/* TITLE INPUT  */}\r\n                    <input className=\"journal-modal-journal-name\" placeholder=\"enter journal name...\" value={this.state.journalName} onChange={this.handleJournalNameChange} />\r\n                    <div id=\"journal-create-btns\">\r\n                        <button className=\"journal-cancel-create-btn\" onClick={this.cancelModal}>Cancel</button>\r\n                        <button className=\"journal-create-journal-btn\" onClick={this.createJournal}>Create Journal</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalCreateModal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nclass JournalTimelineButton extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            journalName: '',\r\n            journalID: this.props.journalID,\r\n            monthDayDate: ''\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.entry) {\r\n            var timelineDate = new Date(this.props.entry.datetime_true)\r\n            var shortMonth = (timelineDate.getMonth() + 1) + \"-\"\r\n            if (shortMonth.length === 2) {\r\n                shortMonth = \"0\" + shortMonth;\r\n            }\r\n            var shortDateVar = shortMonth + timelineDate.getDate()\r\n            this.setState({ monthDayDate: shortDateVar });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setEntries = () => {\r\n        this.props.setEntries(this.props.entries);\r\n    }\r\n\r\n    render() {\r\n        var growStage = this.props.entry.grow_stage\r\n        var idVar = \"Timeline-Dot-\" + growStage.charAt(0).toUpperCase() + growStage.slice(1)\r\n\r\n        // Check if the button corresponds to the active entry\r\n        var isActiveEntry = false;\r\n        if (this.props.currentEntryID === this.props.entry.id) {\r\n            isActiveEntry = true;\r\n        }\r\n\r\n        var array = (this.props.entry.datetime_short).split(\"-\");\r\n        var datetimeShortMD = array[0] + \"-\" + array[1]\r\n\r\n        var dateString = new Date(this.props.entry.datetime_true).toDateString()\r\n\r\n        var previewImage = null;\r\n        if (this.props.entries[0].images) {\r\n            previewImage = this.props.entries[0].images[0].thumb;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {(() => {\r\n                    if (isActiveEntry) {\r\n                        return (\r\n                            <div className=\"Timeline-Dot-Connector\">\r\n                                <div className=\"Dot-Connector-Text-rotate-180\">\r\n\r\n                                    {datetimeShortMD}\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()}\r\n                <button data-value={this.props.entries} id={idVar} className=\"Timeline-Dot\" onClick={this.setEntries}>\r\n\r\n                    {(() => {\r\n                        if (!isActiveEntry) {\r\n                            return (\r\n                                <div className=\"Dot-Preview-rotate-180\">\r\n                                    <div className=\"Dot-Preview-Window\">\r\n                                        <div className=\"Dot-Preview-Date-String\">\r\n                                            {dateString}\r\n                                        </div>\r\n\r\n                                        {(() => {\r\n                                            if (previewImage) {\r\n                                                return <img alt=\"journal preview\" src={previewImage} className=\"Preview-Image-Thumbnail\" onClick={this.displayFullImage} />\r\n                                            }\r\n                                        })()}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n\r\n\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalTimelineButton;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nclass JournalBoxItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            journal: this.props.journal\r\n        };\r\n\r\n    }\r\n\r\n    openJournal = () => {\r\n        this.props.openJournal(this.props.journal)\r\n    }\r\n\r\n    render() {\r\n\r\n        var createdAt = new Date(this.props.journal.createdAt).toDateString()\r\n\r\n        // TODO... simplify below.\r\n        var updatedAtDate = new Date(this.props.journal.updatedAt)\r\n        var updatedAtHoursString = updatedAtDate.getHours().toString()\r\n        if (updatedAtHoursString.length === 1) {\r\n            updatedAtHoursString = \"0\" + updatedAtHoursString\r\n        }\r\n        var updatedAtMinutesString = updatedAtDate.getMinutes().toString()\r\n        if (updatedAtMinutesString.length === 1) {\r\n            updatedAtMinutesString = \"0\" + updatedAtMinutesString\r\n        }\r\n        var updatedAt = updatedAtDate.toDateString() + \" - \" + updatedAtHoursString + \":\" + updatedAtMinutesString\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"Journal-Box-Item\" data-value={this.props.journal.id} onClick={this.openJournal}>\r\n                <div className=\"Journal-Box-Item-Main\">\r\n                    <div className=\"Journal-Box-Item-Header\">\r\n                        <div>\r\n                            {this.props.journal.name}\r\n                        </div>\r\n                        <div className=\"Journal-Box-Created\">\r\n                            updated: <i><b>{updatedAt}</b></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"Journal-Box-Info\">\r\n                        created: <i><b>{createdAt}</b></i>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <img alt=\"preview\" src={this.props.journal.previewImage} className=\"Journal-Box-Preview-Image\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalBoxItem;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nclass JournalEntry extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.currentEntry) {\r\n            if (this.state.currentEntry.id === prevProps.currentEntry.id) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            currentEntry: prevProps.currentEntry\r\n        });\r\n\r\n    }\r\n\r\n    displayFullImage = (ev) => {\r\n        this.props.displayFullImage(this.props.currentEntry.images)\r\n        this.props.currentFullImage(ev.target.dataset.value)\r\n        // let val = ev.target.dataset.value;\r\n        // window.open(val);\r\n    }\r\n\r\n    editEntryByID = (ev) => {\r\n        this.props.editEntryByID(ev.target.dataset.value);\r\n    }\r\n\r\n    render() {\r\n\r\n        var renderedThumbnails = null;\r\n        if (this.props.currentEntry) {\r\n            if (this.props.currentEntry.images) {\r\n                renderedThumbnails = this.props.currentEntry.images.map((image, i) => <img key={i} alt=\"grow img\" data-value={image.url} src={image.thumb} className=\"Journal-Entry-Thumbnail\" onClick={this.displayFullImage} />)\r\n            }\r\n        }\r\n\r\n        var datetimeTrue = null;\r\n        if (this.props.currentEntry && (this.props.currentEntry !== '')) {\r\n            datetimeTrue = new Date(this.props.currentEntry.datetime_true)\r\n        }\r\n\r\n        return (\r\n            <div className=\"Journal-Post-View\">\r\n\r\n                <div className=\"Journal-Post-Header\">\r\n                    <div className=\"Journal-Post-Date\">\r\n                        {datetimeTrue.toDateString()}\r\n                    </div>\r\n\r\n                    <div className=\"Journal-Post-Title\">\r\n                        {this.props.currentEntry.title}\r\n                    </div>\r\n\r\n                    <button className=\"Journal-Edit-Post-Btn\" data-value={this.props.currentEntry.id} onClick={this.editEntryByID}>\r\n                        edit &#9998;\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"Journal-Post-Content\">\r\n                    {this.props.currentEntry.content}\r\n                </div>\r\n\r\n\r\n                {(() => {\r\n                    if (renderedThumbnails) {\r\n                        return (\r\n                            <div className=\"Journal-Post-Images-Wrapper\">\r\n                                <div className=\"Journal-Post-Images\">\r\n                                    {renderedThumbnails}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalEntry;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport JournalAddEditModal from './JournalAddEditModal'\r\nimport FullImageModal from './FullImageModal'\r\nimport JournalCreateModal from './JournalCreateModal'\r\nimport JournalTimelineButton from './JournalTimelineButton'\r\nimport JournalBoxItem from './JournalBoxItem'\r\nimport JournalEntry from './JournalEntry'\r\n\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\n\r\nclass GrowJournal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayContent: \"main\",\r\n            displayEntries: [], // list of entries at selected date\r\n            currentEntry: null,\r\n            currentEntryID: null,\r\n            testContent: '',\r\n            timelineEntries: [],\r\n            journalID: this.props.journalID,\r\n            fullImageModalImages: null,\r\n            currentFullImage: null\r\n        };\r\n\r\n        this.dbHelper = new DbHelper();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n\r\n        if (this.props.journalID) {\r\n            this.watchEntries(this.props.journalID)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    watchEntries = (journalID = this.props.journalID) => {\r\n        this.dbHelper.watchJournalEntries(journalID, this.setJournalEntries)\r\n    }\r\n\r\n    setJournalEntries = (entriesList, dotsList) => {\r\n        if (entriesList.length > 0) {\r\n            this.setState({\r\n                currentEntry: entriesList[entriesList.length - 1],\r\n                currentEntryID: entriesList[entriesList.length - 1].id,\r\n                timelineEntries: entriesList,\r\n                timelineDots: dotsList,\r\n                displayEntries: dotsList[dotsList.length - 1]\r\n            });\r\n        } else {\r\n            this.setState({\r\n                currentEntry: null,\r\n                currentEntryID: null,\r\n                timelineEntries: [],\r\n                timelineDots: [],\r\n                displayEntries: []\r\n            });\r\n        }\r\n\r\n        this.setEntries(dotsList[dotsList.length - 1]);\r\n    }\r\n\r\n    addTimelineEntry = () => {\r\n        this.setState({ displayContent: \"add\" });\r\n    }\r\n\r\n    editEntryByID = (entryID) => {\r\n        console.log(\"edit: \" + entryID)\r\n        console.log(entryID)\r\n\r\n        this.state.timelineEntries.forEach((timelineEntry) => {\r\n            if (timelineEntry.id === entryID) {\r\n                this.setState({\r\n                    currentEntry: timelineEntry,\r\n                    currentEntryID: timelineEntry.id,\r\n                    displayContent: \"edit\"\r\n                });\r\n                return;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    openFullImageModal = (images) => {\r\n\r\n        this.setState({\r\n            displayContent: \"full-image\",\r\n            fullImageModalImages: images\r\n        });\r\n    }\r\n\r\n    openFullImage = (imageUrl) => {\r\n\r\n        console.log(\"imageURL\")\r\n        console.log(imageUrl)\r\n\r\n        this.setState({\r\n            currentFullImage: imageUrl\r\n        });\r\n    }\r\n\r\n\r\n    closeModal = (key) => {\r\n\r\n        if (!key || key === '') {\r\n            this.setState({ displayContent: \"main\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ displayContent: \"main\" });\r\n        this.state.timelineEntries.forEach((timelineEntry) => {\r\n            if (timelineEntry.id === key) {\r\n                this.setState({\r\n                    currentEntry: timelineEntry,\r\n                    currentEntryID: timelineEntry.id\r\n                });\r\n                return;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    setJournalID = (id) => {\r\n        if (id === null) {\r\n            this.setState({\r\n                displayContent: \"main\",\r\n            });\r\n            this.props.setJournalID(null)\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            displayContent: \"main\",\r\n            journalID: id\r\n        });\r\n        this.props.setJournalID(id)\r\n        this.watchEntries(id)\r\n    }\r\n\r\n    setEntries = (entries) => {\r\n        if (!entries) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            currentEntry: entries[0],\r\n            currentEntryID: entries[0].id,\r\n            displayEntries: entries\r\n        });\r\n\r\n    }\r\n\r\n    handleJournalChange = (ev) => {\r\n        console.log(\"JOURNAL CHANGE!!!!\")\r\n        console.log(ev.target.value)\r\n        this.setState({\r\n            currentEntry: null,\r\n            currentEntryID: null,\r\n            displayEntries: []\r\n        });\r\n        this.props.setJournalID(ev.target.value)\r\n        this.watchEntries(ev.target.value)\r\n    }\r\n\r\n    openCreateJournalModal = () => {\r\n        this.setState({ displayContent: \"create-journal\" });\r\n    }\r\n\r\n    openJournal = (journal) => {\r\n        this.setState({\r\n            journalID: journal.id\r\n        });\r\n        this.props.setJournalID(journal.id);\r\n        this.watchEntries(journal.id);\r\n    }\r\n\r\n    render() {\r\n\r\n        var renderedJournalOptions = '';\r\n        if (this.props.userJournals.length > 0) {\r\n            renderedJournalOptions = this.props.userJournals.map((journal) => <option key={journal.id} value={journal.id}>{journal.name}</option>)\r\n        }\r\n\r\n        var renderedUserJournals = null;\r\n        if (this.props.userJournals) {\r\n            renderedUserJournals = this.props.userJournals.map((journal) =>\r\n                <div key={journal.id} className=\"Journal-Box-Item-Container\">\r\n                    <JournalBoxItem journal={journal} openJournal={this.openJournal} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        var renderedJournalEntries = null;\r\n        if (this.state.displayEntries) {\r\n            renderedJournalEntries = this.state.displayEntries.map((entry) =>\r\n                <JournalEntry key={entry.id} editEntryByID={this.editEntryByID} currentEntry={entry} currentFullImage={this.openFullImage} displayFullImage={this.openFullImageModal} />\r\n            )\r\n        }\r\n\r\n        var renderedTimelineDots = null;\r\n        if (this.state.timelineDots) {\r\n            renderedTimelineDots = this.state.timelineDots.map((dot) =>\r\n                <JournalTimelineButton key={dot[0].datetime_short} currentEntryID={this.state.currentEntryID} setEntries={this.setEntries} entry={dot[0]} entries={dot} />\r\n            )\r\n        }\r\n\r\n        return (\r\n\r\n\r\n            <div id=\"Journal-Page\">\r\n                <div id=\"Journal-Main\">\r\n                    <div id=\"Grow-Journal-Main-Area\">\r\n\r\n                        {(() => {\r\n                            if (renderedUserJournals && !this.props.journalID) {\r\n                                return (\r\n                                    <div id=\"Journal-Box-Area-Scroll\">\r\n\r\n\r\n                                        <div id=\"Grow-Journal-Header-Area\">\r\n                                            <div id=\"Grow-Journal-Header-Text\">Grow Journals</div>\r\n                                            <button className=\"New-Journal-Btn\" onClick={this.openCreateJournalModal}>\r\n                                                +\r\n                                            </button>\r\n                                        </div>\r\n\r\n\r\n                                        <div id=\"Journal-Box-Area\">\r\n                                            {renderedUserJournals}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            } else if (!this.props.journalID) {\r\n                                return (\r\n                                    <div id=\"Grow-Journal-Header-Area\">\r\n                                        <div id=\"Grow-Journal-Header-Text\">Grow Journals</div>\r\n                                        <button className=\"New-Journal-Btn\" onClick={this.openCreateJournalModal}>\r\n                                            +\r\n                                        </button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n\r\n                        {(() => {\r\n                            if (renderedJournalOptions && this.props.journalID) {\r\n                                return (\r\n                                    <div className=\"Grow-Journal-Title-Div\">\r\n                                        <select id=\"Grow-Journal-Title-Select\" onChange={this.handleJournalChange} value={this.props.journalID}>\r\n                                            {renderedJournalOptions}\r\n                                        </select>\r\n                                        <button className=\"New-Journal-Btn\" onClick={this.openCreateJournalModal}>\r\n                                            +\r\n                                        </button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                        {(() => {\r\n                            if (this.props.journalID) {\r\n                                return (\r\n                                    <div id=\"Journal-Posts-Container\">\r\n                                        {(() => {\r\n                                            if (renderedJournalEntries) {\r\n                                                return (\r\n                                                    <div>\r\n                                                        {renderedJournalEntries}\r\n                                                    </div>\r\n                                                )\r\n                                            } else {\r\n                                                return (\r\n                                                    <div className=\"Journal-Post-View\" >\r\n                                                        Let's get some journal entries...\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        })()}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    {(() => {\r\n                        if (this.props.journalID) {\r\n                            return (\r\n                                <div id=\"Timeline-Container\">\r\n\r\n                                    <div id=\"Timeline-Inner-Container\">\r\n                                        <div id=\"Timeline-Line\" />\r\n                                        \r\n                                        <div id=\"Timeline-Spots\">\r\n\r\n                                            {renderedTimelineDots}\r\n\r\n                                            <button id=\"Timeline-Add-Dot\" onClick={this.addTimelineEntry}>+</button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            )\r\n\r\n                        }\r\n                    })()}\r\n\r\n                </div>\r\n\r\n\r\n                {/* MODAL */}\r\n\r\n                {(() => {\r\n\r\n                    switch (this.state.displayContent) {\r\n                        case 'add':\r\n                            return <JournalAddEditModal journalID={this.props.journalID} closeModal={this.closeModal} editPost=\"new\" />;\r\n                        case 'edit':\r\n                            return <JournalAddEditModal journalID={this.props.journalID} closeModal={this.closeModal} editPost={this.state.currentEntry} />;\r\n                        case 'full-image':\r\n                            return <FullImageModal closeModal={this.closeModal} imageList={this.state.fullImageModalImages} currentFullImage={this.state.currentFullImage} />;\r\n                        case 'create-journal':\r\n                            return <JournalCreateModal journalID={this.props.journalID} setJournalID={this.setJournalID} />;\r\n                        case 'main':\r\n                            return <div />;\r\n                        default:\r\n                            return <div />;\r\n                    }\r\n\r\n                })()}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowJournal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nclass GrowDataDisplay extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            journalName: '',\r\n            journalID: this.props.journalID\r\n        };\r\n\r\n\r\n    }\r\n   \r\n    render() {\r\n\r\n        var cTemp = null;\r\n\t\tvar fanSpeed = null;\r\n\t\tvar humiPower = null;\r\n\t\tvar humidity = null;\r\n\t\t// var lastUpdate = null;\r\n\t\tif (this.props.liveData) {\r\n\t\t\tcTemp = this.props.liveData.cTemp\r\n\t\t\tcTemp = Math.round(cTemp * 10) / 10;\r\n\t\t\tfanSpeed = this.props.liveData.fanSpeed\r\n\t\t\thumiPower = this.props.liveData.humiPower\r\n\t\t\thumidity = this.props.liveData.humidity\r\n            humidity = Math.round(humidity * 10) / 10;\r\n        }\r\n\r\n        return (\r\n            <div id=\"Grow-Data-Display\">\r\n            {(() => {\r\n                if (cTemp) {\r\n                    var backgroundIndicator = null\r\n                    if (cTemp > 20 && cTemp < 27) {\r\n                        backgroundIndicator = \"Data-Optimal-Background\"\r\n                    } else if (cTemp <= 19 && cTemp > 28) {\r\n                        backgroundIndicator = \"Data-Danger-Background\"\r\n                    } else {\r\n                        backgroundIndicator = \"Data-Warning-Background\"\r\n                    }\r\n\r\n                    return (\r\n                        <div className=\"Grow-Box-Info-Section\">\r\n                            <div className=\"Grow-Box-Info-Type\">TEMP</div>\r\n                            <div className=\"Grow-Box-Dot-Lead\"><div className=\"Grow-Box-Dot-Lead-Dots\" /></div>\r\n                            <div className={backgroundIndicator}>\r\n                                <div className=\"Grow-Box-Info-Data\">\r\n                                    <div className=\"Grow-Box-Data-Raw\">{cTemp}</div >\r\n                                    <div className=\"Horizontal-20px-Gap\"></div>\r\n                                    <div className=\"Grow-Box-Data-Unit\">°C</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            })()}\r\n\r\n            {(() => {\r\n                if (fanSpeed) {\r\n                    return (\r\n                        <div className=\"Grow-Box-Info-Section\">\r\n                            <div className=\"Grow-Box-Info-Type\">FAN SPEED</div>\r\n                            <div className=\"Grow-Box-Dot-Lead\"><div className=\"Grow-Box-Dot-Lead-Dots\" /></div>\r\n                            <div className=\"Data-Neutral-Background\">\r\n                                <div className=\"Grow-Box-Info-Data\">\r\n                                    <div className=\"Grow-Box-Data-Raw\">{fanSpeed}</div >\r\n                                    <div className=\"Horizontal-20px-Gap\"></div>\r\n                                    <div className=\"Grow-Box-Data-Unit\">%</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            })()}\r\n\r\n            {(() => {\r\n                if (humidity) {\r\n                    var backgroundIndicator = null\r\n                    if (humidity > 30 && humidity < 43) {\r\n                        backgroundIndicator = \"Data-Optimal-Background\"\r\n                    } else if (humidity <= 27 && humidity > 45) {\r\n                        backgroundIndicator = \"Data-Danger-Background\"\r\n                    } else {\r\n                        backgroundIndicator = \"Data-Warning-Background\"\r\n                    }\r\n\r\n                    return (\r\n                        <div className=\"Grow-Box-Info-Section\">\r\n                            <div className=\"Grow-Box-Info-Type\">HUMIDITY</div>\r\n                            <div className=\"Grow-Box-Dot-Lead\"><div className=\"Grow-Box-Dot-Lead-Dots\" /></div>\r\n                            <div className={backgroundIndicator}>\r\n                                <div className=\"Grow-Box-Info-Data\">\r\n                                    <div className=\"Grow-Box-Data-Raw\">{humidity}</div >\r\n                                    <div className=\"Horizontal-20px-Gap\"></div>\r\n                                    <div className=\"Grow-Box-Data-Unit\">%RH</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            })()}\r\n\r\n            {(() => {\r\n                if (humiPower) {\r\n                    return (\r\n                        <div className=\"Grow-Box-Info-Section\">\r\n                            <div className=\"Grow-Box-Info-Type\">HUMIDIFIER</div>\r\n                            <div className=\"Grow-Box-Dot-Lead\"><div className=\"Grow-Box-Dot-Lead-Dots\" /></div>\r\n                            <div className=\"Data-Neutral-Background\">\r\n                                <div className=\"Grow-Box-Info-Data\">\r\n                                    <div className=\"Grow-Box-Info-Data\">\r\n                                        <div className=\"Grow-Box-Data-Raw\">{humiPower}</div >\r\n                                        <div className=\"Horizontal-20px-Gap\"></div>\r\n                                        <div className=\"Grow-Box-Data-Unit\">%</div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            })()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowDataDisplay;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip } from 'recharts';\r\n\r\nimport moment from 'moment'\r\n\r\n\r\nclass GraphSensorsBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n        if (this.props.growID && this._ismounted) {\r\n            if (this.props.growID !== this.growID) {\r\n                this.growID = this.props.growID;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n\r\n        this.getGraphData = null;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n        if (this.props.growID && this._ismounted) {\r\n            if (this.props.growID !== this.growID) {\r\n                this.growID = this.props.growID;\r\n            }\r\n        }\r\n\r\n        if (this.props.rawGrowData && this.props.growID) {\r\n\r\n            var gwID = this.props.growID\r\n            var rawData = this.props.rawGrowData\r\n\r\n            if (rawData[gwID]) {\r\n                var setData = rawData[gwID][rawData[gwID].length - 1]\r\n\r\n                if (this.data !== setData) {\r\n\r\n                    this.data = setData\r\n                    \r\n\r\n                    var processedData = []\r\n                    setData.forEach((dataPoint) => {\r\n                        var processedPoint = dataPoint\r\n\r\n                        if (new Date().getTime() - processedPoint.time < 7200000) {\r\n                            processedData[processedData.length] = processedPoint\r\n                        }\r\n                    })\r\n\r\n                    this.setState({\r\n                        processedData: processedData\r\n                    });\r\n               \r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    renderTooltip(props) {\r\n        var rawContent = props.payload\r\n        if (rawContent.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var readableTime = moment(props.payload[0].payload.time).fromNow()\r\n\r\n        var tempTemp = null;\r\n        var tempTempColor = \"#000\"\r\n        var tempFanPower = null;\r\n        var tempFanSpdColor = \"#000\"\r\n        var tempHumidity = null;\r\n        var tempHumidityColor = \"#000\"\r\n        var tempHumidifierPower = null;\r\n        var tempHumiPwrColor = \"#000\"\r\n\r\n        rawContent.forEach((line) => {\r\n            if (line.dataKey === \"cTemp\") {\r\n                tempTempColor = line.stroke\r\n                tempTemp = rawContent[0].payload.cTemp\r\n            }\r\n\r\n            if (line.dataKey === \"fanSpeed\") {\r\n                tempFanSpdColor = line.stroke\r\n                tempFanPower = rawContent[0].payload.fanSpeed\r\n            }\r\n\r\n            if (line.dataKey === \"humidity\") {\r\n                tempHumidityColor = line.stroke\r\n                tempHumidity = rawContent[0].payload.humidity\r\n            }\r\n\r\n            if (line.dataKey === \"humiPower\") {\r\n                tempHumiPwrColor = line.stroke\r\n                tempHumidifierPower = rawContent[0].payload.humiPower\r\n            }\r\n        })\r\n\r\n        return (\r\n            <div className=\"Grow-Details-Graph-Tooltip\">\r\n                <div>{readableTime}</div>\r\n\r\n                {(() => {\r\n                    if (tempTemp) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempTempColor }}>TEMP: {tempTemp}°C </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempFanPower) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempFanSpdColor }}>FAN-PWR: {tempFanPower}% </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempHumidity) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempHumidityColor }}>HUMID: {tempHumidity}% RH </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempHumidifierPower) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempHumiPwrColor }}>HUM-PWR: {tempHumidifierPower}% </div>\r\n                    }\r\n                })()}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        var renderDayGraph = null\r\n        if (this.state.processedData && this.state.processedData[0]) {\r\n            if (this.props.parentSize) {\r\n                var xSize = Math.floor(this.props.parentSize[0] * 1)\r\n                var ySize = Math.floor(this.props.parentSize[1] * 0.9)\r\n\r\n                renderDayGraph = (\r\n                    <LineChart width={xSize} height={ySize} data={this.state.processedData}>\r\n                        <Line yAxisId=\"left\"  type=\"monotone\" dataKey=\"cTemp\" stroke=\"#ca2014\" dot={false} />\r\n                        <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"fanSpeed\" stroke=\"#db5e24\" dot={false} />\r\n                        <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"humidity\" stroke=\"#387d14\" dot={false} />\r\n                        <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"humiPower\" stroke=\"#8884d8\" dot={false} />\r\n                        <XAxis\r\n                            dataKey=\"time\"\r\n                            type=\"number\"\r\n                            domain={[new Date(this.state.processedData[0].time).getTime(), new Date(this.state.processedData[this.state.processedData.length - 1].time).getTime()]}\r\n                            tickFormatter={(unixTime) => moment(unixTime).format('HH:mm - MMM Do')}\r\n                            hide={true} />\r\n                        <YAxis yAxisId=\"left\" orientation=\"left\"  domain={[21,30]} />\r\n                        <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n                        <Tooltip content={this.renderTooltip} />\r\n                    </LineChart>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n\r\n\r\n            <div className=\"Chart-Container\">\r\n                {renderDayGraph}\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GraphSensorsBox;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport GrowDataDisplay from './GrowDataDisplay'\r\n\r\nimport GraphSensorsBox from '../Graphs/GraphSensorsBox'\r\n\r\nimport moment from 'moment'\r\n\r\n\r\nclass GrowBoxItem extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tgrow: this.props.grow,\r\n\t\t\tactiveIndicatorStyle: 'Grow-Active-Indicator-Circle',\r\n\t\t\tcamURL: null,\r\n\t\t\tgraphElementSize: [150, 150],\r\n\t\t};\r\n\r\n\t\tthis.graphSizeUpdated = 0;\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tthis._ismounted = true;\r\n\r\n\t\tif (this.props.grow.urls.cam) {\r\n\r\n\t\t\tif (this._ismounted) {\r\n\t\t\t\tthis.setState({ camURL: this.props.grow.urls.cam });\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount = () => {\r\n\t\tthis._ismounted = false;\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tvar dateNow = new Date()\r\n\r\n\t\tif (((this.state.graphElementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]) && ((dateNow.getTime() - this.graphSizeUpdated) > 500))) {\r\n\r\n\t\t\t// tODO: remove, hacky\r\n\t\t\tif ((this.divRef.clientWidth - this.state.graphElementSize[0]) < 30) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar tempSize = [this.divRef.clientWidth, this.divRef.clientHeight]\r\n\r\n\t\t\tif (tempSize !== this.state.graphElementSize) {\r\n\t\t\t\tif (this._ismounted) {\r\n\t\t\t\t\tthis.setState({ graphElementSize: tempSize });\r\n\t\t\t\t}\r\n\t\t\t\tthis.graphSizeUpdated = dateNow.getTime();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// TODO: remove function\r\n\twatchPiCam = () => {\r\n\t\tvar tempURL = this.props.grow.urls.cam + 'cam_pic.php?time='\r\n\t\tvar i = 0\r\n\t\tsetInterval(() => {\r\n\t\t\ti++\r\n\t\t\tvar tempCamURL = tempURL + i.toString()\r\n\t\t\tif (this._ismounted) {\r\n\t\t\t\tthis.setState({ camURL: tempCamURL });\r\n\t\t\t}\r\n\t\t}, 5000);\r\n\t}\r\n\r\n\topenFullCam = (ev) => {\r\n\t\tthis.props.openFullCam(ev.target.dataset.value)\r\n\t}\r\n\r\n\topenGrow = () => {\r\n\t\tthis.props.openGrow(this.props.grow)\r\n\t}\r\n\r\n\topenMainPage = (ev) => {\r\n\t\tthis.props.openMainPage(ev.target.dataset.value, this.props.grow.id)\r\n\t}\r\n\r\n\tcheckActive = (lastUpdateTime) => {\r\n\r\n\t\tif (lastUpdateTime) {\r\n\t\t\tvar now = new Date().getTime();\r\n\r\n\t\t\tvar difference = now - lastUpdateTime\r\n\r\n\r\n\t\t\t// if (difference >= 3000000) {\r\n\t\t\t// \tthis.setState({\r\n\t\t\t// \t\tactiveIndicatorStyle: 'Grow-Active-Indicator-Circle Data-Neutral-Background'\r\n\t\t\t// \t});\r\n\t\t\t// }\r\n\r\n\t\t\tif (this._ismounted) {\r\n\r\n\r\n\t\t\t\tif (difference >= 120000 && difference < 24000) {\r\n\t\t\t\t\tif (this.activeIndicatorStyle !== 'Grow-Active-Indicator-Circle Data-Warning-Background') {\r\n\t\t\t\t\t\tthis.activeIndicatorStyle = 'Grow-Active-Indicator-Circle Data-Warning-Background'\r\n\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tactiveIndicatorStyle: 'Grow-Active-Indicator-Circle Data-Warning-Background'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (difference >= 240000) {\r\n\t\t\t\t\tif (this.activeIndicatorStyle !== 'Grow-Active-Indicator-Circle Data-Danger-Background') {\r\n\t\t\t\t\t\tthis.activeIndicatorStyle = 'Grow-Active-Indicator-Circle Data-Danger-Background'\r\n\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tactiveIndicatorStyle: 'Grow-Active-Indicator-Circle Data-Danger-Background'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (difference < 120000) {\r\n\t\t\t\t\tif (this.activeIndicatorStyle !== 'Grow-Active-Indicator-Circle Data-Optimal-Background') {\r\n\t\t\t\t\t\tthis.activeIndicatorStyle = 'Grow-Active-Indicator-Circle Data-Optimal-Background'\r\n\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tactiveIndicatorStyle: 'Grow-Active-Indicator-Circle Data-Optimal-Background'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tconsole.log(\"NO LAST UPDATE ERROR\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\t// console.log(\"LIVE DATA!\" + this.props.grow.id)\r\n\t\t// console.log(this.props.liveGrowData)\r\n\r\n\t\tvar lastUpdate = null;\r\n\t\tif (this.props.liveGrowData[this.props.grow.id]) {\r\n\t\t\t// console.log(this.props.liveGrowData[this.props.grow.id])\r\n\r\n\t\t\tvar updatedAtDate = new Date(this.props.liveGrowData[this.props.grow.id].time * 1000)\r\n\r\n\t\t\tif (updatedAtDate !== this.updatedAtDate) {\r\n\t\t\t\tthis.updatedAtDate = updatedAtDate\r\n\t\t\t\tthis.checkActive(updatedAtDate.getTime())\r\n\t\t\t}\r\n\r\n\t\t\tlastUpdate = moment(updatedAtDate).fromNow()\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Grow-Box-Item\">\r\n\r\n\t\t\t\t<div className=\"Grow-Box-Cam-Div\">\r\n\t\t\t\t\t<div className=\"Grow-Box-Cam-Full-Btn\" data-value={this.props.grow.urls.cam} onClick={this.openFullCam}>&#9974;</div>\r\n\t\t\t\t\t<img className=\"Grow-Box-Cam\" alt=\"cam\" src={this.state.camURL} style={{ objectFit: 'contain', cursor: 'pointer', width: '100%' }} onClick={this.openGrow} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"Grow-Box-Item-Main\">\r\n\t\t\t\t\t<div className=\"Grow-Box-Item-Header\">\r\n\r\n\t\t\t\t\t\t<div className=\"Grow-Box-Grow-Name\" onClick={this.openGrow}>\r\n\t\t\t\t\t\t\t{this.props.grow.name}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"Grow-Box-Updated\">\r\n\t\t\t\t\t\t\tupdate<i><b>: {lastUpdate}</b></i>\r\n\t\t\t\t\t\t\t<div className={this.state.activeIndicatorStyle} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"Grow-Box-Function-Btns\">\r\n\t\t\t\t\t\t<button className=\"Grow-Box-Function-Btn\" data-value={'graphs'} onClick={this.openMainPage} >DATA <span role=\"img\" aria-label=\"grow data icon\">&#128200;</span></button>\r\n\t\t\t\t\t\t{/* <button className=\"Grow-Box-Function-Btn\" data-value={'config'} onClick={this.openMainPage} >CONFIG <span role=\"img\" aria-label=\"grow config icon\">&#128187;</span></button> */}\r\n\t\t\t\t\t\t<button className=\"Grow-Box-Function-Btn-Feed\" data-value={'feed'} onClick={this.openMainPage} >FEED &#9619;&#9619;</button>\r\n\t\t\t\t\t\t<button className=\"Grow-Box-Function-Btn-Edit-Feed\" data-value={'edit-feed'} onClick={this.openMainPage} >&#9998;</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"Grow-Box-Info\">\r\n\t\t\t\t\t\t<div className=\"Grow-Box-Info-Text-Area\">\r\n\r\n\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\tif (this.props.liveGrowData) {\r\n\t\t\t\t\t\t\t\t\treturn <GrowDataDisplay liveData={this.props.liveGrowData[this.props.grow.id]} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})()}\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"Grow-Box-Info-Graph-Area\" ref={element => this.divRef = element}>\r\n\t\t\t\t\t\t\t<GraphSensorsBox parentSize={this.state.graphElementSize} growID={this.props.grow.id} rawGrowData={this.props.rawGrowData} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t{/* <img alt=\"preview\" src={this.props.grow.previewImage} className=\"Grow-Box-Preview-Image\" /> */}\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GrowBoxItem;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: \"100%\",\n  height: \"100%\",\n  fill: \"#DBE4EB\"\n});\n\nvar SvgArea = (_ref) => {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgArea, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/area.5f290f46.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: \"100%\",\n  height: \"100%\",\n  fill: \"#add8e6\"\n});\n\nvar SvgContainer = (_ref) => {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgContainer, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/container.41fa1b4f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport { ReactComponent as Area } from './SVGs/area.svg'\r\nimport { ReactComponent as Container } from './SVGs/container.svg'\r\n\r\n\r\n\r\nclass GrowVisualEditor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            baseDimensionsPixels: null\r\n        };\r\n\r\n        this.visualEditorSizeUpdate = 0;\r\n        this.baseDimensions = [0, 0]\r\n        this.editorDimensions = [0, 0]\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this._ismounted === false) {\r\n            return;\r\n        }\r\n\r\n        var dateNow = new Date()\r\n        if (((this.state.elementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]) && ((dateNow.getTime() - this.visualEditorSizeUpdate) > 500))) {\r\n            var tempSize = [this.divRef.clientWidth, this.divRef.clientHeight]\r\n\r\n            if (tempSize !== this.state.elementSize) {\r\n                this.setState({ editorDimensions: tempSize });\r\n                this.visualEditorSizeUpdate = dateNow.getTime();\r\n            }\r\n        }\r\n\r\n        if (this.props.baseDimensions && this.state.editorDimensions) {\r\n            if ((this.props.baseDimensions !== this.baseDimensions) || (this.props.editorDimensions !== this.editorDimensions)) {\r\n                this.baseDimensions = this.props.baseDimensions\r\n                this.editorDimensions = this.props.editorDimensions\r\n\r\n                var widthOverHeight = this.props.baseDimensions[0] / this.props.baseDimensions[1]\r\n\r\n                var baseWidth;\r\n                var baseHeight;\r\n                if (widthOverHeight <= 1) {\r\n                    baseWidth = (this.state.editorDimensions[1] * 0.9) * widthOverHeight\r\n                    baseHeight = this.state.editorDimensions[1] * 0.9\r\n                } else {\r\n                    baseWidth = this.state.editorDimensions[1] * 0.9\r\n                    baseHeight = (this.state.editorDimensions[1] * 0.9) / widthOverHeight\r\n                }\r\n\r\n\r\n                var setDimensions = [baseWidth, baseHeight]\r\n\r\n                this.setState({ baseDimensionsPixels: setDimensions })\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id=\"Grow-Visual-Editor\" style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <div style={{ backgroundColor: '#36454F', margin: '1%', padding: '1%', flex: '1' }} ref={element => this.divRef = element}>\r\n                    {(() => {\r\n                        if (this.state.baseDimensionsPixels) {\r\n                            return (\r\n                                <div style={{ position: 'relative', display: 'flex', justifyContent: 'center', margin: '0 auto', width: this.state.baseDimensionsPixels[0], height: this.state.baseDimensionsPixels[1] }}>\r\n                                    <Area style={{ position: 'absolute', width: '100%', height: '100%' }} />\r\n                                    <div style={{ position: 'absolute', width: '100%', height: '100%', display: 'flex', flexDirection: 'row' }}>\r\n                                        <Container style={{ flex: '1', padding: '1%' }} />\r\n                                        <Container style={{ flex: '1', padding: '1%' }} />\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n\r\n                </div>\r\n\r\n                {/* <Area /> */}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowVisualEditor;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport GrowVisualEditor from './GrowVisualEditor'\r\n\r\n\r\nclass GrowSetUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id=\"Grow-Set-Up-Page\">\r\n                <GrowVisualEditor baseDimensions={[300,300]}/>\r\n                <div id=\"Grow-Items-List\">\r\n                    list\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowSetUp;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport TimePicker from 'react-time-picker'\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\nimport GrowSetUp from '../GrowConfig/GrowSetUp'\r\n\r\n\r\n\r\nclass GrowDetailsConfig extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            temp_min: '',\r\n            temp_max: '',\r\n            temp_hyst: '',\r\n            fan_min: '',\r\n            fan_max: '',\r\n            humidity_min: '',\r\n            humidity_max: '',\r\n            humidity_hyst: '',\r\n            humidifier_min: '',\r\n            humidifier_max: '',\r\n\r\n            resetValue: false\r\n        };\r\n\r\n        this.dbHelper = new DbHelper()\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n        this.watchConfig = this.watchGrowConfig(this.setFetchedConfig);\r\n        this.getResetValue = this.getResetValue()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    saveConfig = () => {\r\n        this.dbHelper.setGrowConfig(\r\n            this.props.growID,\r\n            {\r\n                temp_min: this.state.temp_min,\r\n                temp_max: this.state.temp_max,\r\n                temp_hyst: this.state.temp_hyst,\r\n                fan_min: this.state.fan_min,\r\n                fan_max: this.state.fan_max,\r\n                humidity_min: this.state.humidity_min,\r\n                humidity_max: this.state.humidity_max,\r\n                humidity_hyst: this.state.humidity_hyst,\r\n                humidifier_min: this.state.humidifier_min,\r\n                humidifier_max: this.state.humidifier_max,\r\n                lights_on: this.state.lights_on,\r\n                lights_off: this.state.lights_off\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    watchGrowConfig = async (setData) => {\r\n        try {\r\n            await this.dbHelper.watchGrowConfig(this.props.growID, setData)\r\n        } catch (e) {\r\n            console.log(e);\r\n            return 'caught ' + e\r\n        }\r\n    }\r\n\r\n    setFetchedConfig = (configObj) => {\r\n\r\n        this.setState({\r\n            temp_min: configObj.temp_min,\r\n            temp_max: configObj.temp_max,\r\n            temp_hyst: configObj.temp_hyst,\r\n            fan_min: configObj.fan_min,\r\n            fan_max: configObj.fan_max,\r\n            humidity_min: configObj.humidity_min,\r\n            humidity_max: configObj.humidity_max,\r\n            humidity_hyst: configObj.humidity_hyst,\r\n            humidifier_min: configObj.humidifier_min,\r\n            humidifier_max: configObj.humidifier_max,\r\n            lights_on: configObj.lights_on,\r\n            lights_off: configObj.lights_off\r\n        });\r\n\r\n    }\r\n\r\n    handleTempMinChange = (event) => {\r\n        this.setState({ temp_min: event.target.value });\r\n    }\r\n\r\n    handleTempMaxChange = (event) => {\r\n        this.setState({ temp_max: event.target.value });\r\n    }\r\n\r\n    handleTempHystChange = (event) => {\r\n        this.setState({ temp_hyst: event.target.value });\r\n    }\r\n\r\n    handleFanMinChange = (event) => {\r\n        this.setState({ fan_min: event.target.value });\r\n    }\r\n\r\n    handleFanMaxChange = (event) => {\r\n        this.setState({ fan_max: event.target.value });\r\n    }\r\n\r\n    handleHumidityMinChange = (event) => {\r\n        this.setState({ humidity_min: event.target.value });\r\n    }\r\n\r\n    handleHumidityMaxChange = (event) => {\r\n        this.setState({ humidity_max: event.target.value });\r\n    }\r\n\r\n    handleHumidityHystChange = (event) => {\r\n        this.setState({ humidity_hyst: event.target.value });\r\n    }\r\n\r\n    handleHumidifierMinChange = (event) => {\r\n        this.setState({ humidifier_min: event.target.value });\r\n    }\r\n\r\n    handleHumidifierMaxChange = (event) => {\r\n        this.setState({ humidifier_max: event.target.value });\r\n    }\r\n\r\n    handleLightsOnChange = (value) => {\r\n        console.log('value...?')\r\n        console.log(value)\r\n        this.setState({ lights_on: value });\r\n    }\r\n\r\n    handleLightsOffChange = (value) => {\r\n        console.log('value...?')\r\n        console.log(value)\r\n        this.setState({ lights_off: value });\r\n    }\r\n\r\n    getResetValue = () => {\r\n        this.dbHelper.getResetValue(this.props.growID, this.setResetValue)\r\n    }\r\n\r\n    setResetValue = (value) => {\r\n        this.setState({ resetValue: value });\r\n    }\r\n\r\n    handleReset = () => {\r\n        if (this.state.resetValue === false) {\r\n            this.dbHelper.resetGrow(this.props.growID)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id=\"Grow-Details-Config-Page\">\r\n                <div id=\"Grow-Details-Config-Settings-Div\">\r\n                    <div id=\"Grow-Details-Config-Header-Text\">Grow Config</div>\r\n                    <div id=\"Grow-Details-Config-Scroll\" style={{ margin: '4px' }}>\r\n\r\n                        <div id=\"Config-Temp-Field\" style={{ backgroundColor: '#e8e81e' }}>\r\n                            <div className=\"Config-Item-Header-Text\">LIGHTS</div>\r\n                            <div id=\"Config-Temp-Min-Max\">\r\n                                <div>on <TimePicker\r\n                                    id=\"lights_on\"\r\n                                    value={this.state.lights_on}\r\n                                    onChange={this.handleLightsOnChange.bind(this)} /></div>\r\n                                <div>off <TimePicker\r\n                                    id=\"lights_off\"\r\n                                    value={this.state.lights_off}\r\n                                    onChange={this.handleLightsOffChange.bind(this)} /></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div id=\"Config-Temp-Field\">\r\n                            <div className=\"Config-Item-Header-Text\">TEMPERATURE <b>(°C)</b></div>\r\n                            <div id=\"Config-Temp-Min-Max\">\r\n                                <div> min <input type=\"number\" className=\"Config-Input\" id=\"temp-min\" value={this.state.temp_min} onChange={this.handleTempMinChange} /></div>\r\n                                <div>max <input type=\"number\" className=\"Config-Input\" id=\"temp-max\" value={this.state.temp_max} onChange={this.handleTempMaxChange} /></div>\r\n                                <div>hyst Δ <input type=\"number\" className=\"Config-Input\" id=\"temp-hyst\" value={this.state.temp_hyst} onChange={this.handleTempHystChange} /></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div id=\"Config-Temp-Field\" style={{ backgroundColor: '#cacac9' }}>\r\n                            <div className=\"Config-Item-Header-Text\">FAN POWER (%)</div>\r\n                            <div id=\"Config-Fan-Min-Max\">\r\n                                <div>min <input type=\"number\" className=\"Config-Input\" id=\"fan-min\" value={this.state.fan_min} onChange={this.handleFanMinChange} /></div>\r\n                                <div>max <input type=\"number\" className=\"Config-Input\" id=\"fan-max\" value={this.state.fan_max} onChange={this.handleFanMaxChange} /></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div id=\"Config-Humidity-Field\">\r\n                            <div className=\"Config-Item-Header-Text\">HUMIDITY (% r.h.)</div>\r\n                            <div id=\"Config-Humidity-Min-Max\">\r\n                                <div>min <input type=\"number\" className=\"Config-Input\" id=\"humidity-min\" value={this.state.humidity_min} onChange={this.handleHumidityMinChange} /></div>\r\n                                <div>max <input type=\"number\" className=\"Config-Input\" id=\"humidity-max\" value={this.state.humidity_max} onChange={this.handleHumidityMaxChange} /></div>\r\n                                <div>hyst Δ <input type=\"number\" className=\"Config-Input\" id=\"humidity-hyst\" value={this.state.humidity_hyst} onChange={this.handleHumidityHystChange} /></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div id=\"Config-Humidity-Field\" style={{ backgroundColor: '#6090c7' }}>\r\n                            <div className=\"Config-Item-Header-Text\">HUMIDIFIER POWER (%)</div>\r\n                            <div id=\"Config-Humidifier-Min-Max\">\r\n                                <div>min <input type=\"number\" className=\"Config-Input\" id=\"humidifier-min\" value={this.state.humidifier_min} onChange={this.handleHumidifierMinChange} /></div>\r\n                                <div>max <input type=\"number\" className=\"Config-Input\" id=\"humidifier-max\" value={this.state.humidifier_max} onChange={this.handleHumidifierMaxChange} /></div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginTop: '4px' }}>\r\n\r\n                            {(() => {\r\n                                if (!this.state.resetValue || this.state.resetValue === false) {\r\n                                    return (\r\n                                        <div id=\"GROW-DETAILS-RESET-BTN\" onClick={this.handleReset}>\r\n                                            RESET<br></br>\r\n                                            GROWLAB\r\n                                </div>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <div id=\"GROW-DETAILS-RESET-BTN\" style={{ userSelect: 'none', cursor: 'auto', backgroundColor: '#c77725' }}>\r\n                                            RESETTING<br></br>\r\n                                            GROWLAB...\r\n                                </div>\r\n                                    )\r\n                                }\r\n                            })()}\r\n\r\n                            <div id=\"GROW-DETAILS-SAVE-CONFIG-BTN\" onClick={this.saveConfig}>SAVE <br></br> CONFIG</div>\r\n\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div id=\"Grow-Details-Config-Layout-Div\">\r\n                    <GrowSetUp />\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowDetailsConfig;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\r\n\r\nimport moment from 'moment'\r\n\r\nimport { WiThermometer, WiHumidity, WiHurricane, WiSprinkle } from 'react-icons/wi';\r\n\r\n\r\n\r\nclass GraphSensors extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayWindow: 72, // 1/2, 3, 12, 24, 72\r\n\r\n            displayTemp: true,\r\n            displayFan: true,\r\n            displayHumidity: true,\r\n            displayHumidifier: true,\r\n\r\n            lightsOnArray: [],\r\n            lightsOffArray: [],\r\n            tickArray: [],\r\n            lightBackgrounds: ['#7344e750', '#fff93650']\r\n        };\r\n\r\n        this.displayTemp = true\r\n        this.displayFan = true\r\n        this.displayHumidity = true\r\n        this.displayHumidifier = true\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n        if (this.props.growConfig && this.growConfig !== this.props.growConfig) {\r\n            this.growConfig = this.props.growConfig\r\n            this.generateTickSourceArrays()\r\n        }\r\n\r\n        if (this.props.rawGrowData && this.props.growID) {\r\n\r\n            var gwID = this.props.growID\r\n            var rawData = this.props.rawGrowData\r\n\r\n            if (rawData[gwID] && ((!this.rawRef) || rawData[gwID][rawData[gwID].length - 1] !== this.rawRef)) {\r\n                this.rawRef = rawData[gwID][rawData[gwID].length - 1]\r\n\r\n                var concatData = []\r\n\r\n                rawData[gwID].forEach((list) => {\r\n                    concatData = concatData.concat(list)\r\n                })\r\n\r\n                if (this.dataLength !== concatData.length) {\r\n                    this.dataLength = concatData.length\r\n                    concatData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n                    // process data\r\n                    this.concatData = concatData\r\n                    this.processData()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    generateTickSourceArrays = () => {\r\n        var m = moment(new Date())\r\n        m.subtract(3, 'days')\r\n\r\n        var lightsOnArray = []\r\n        var lightsOffArray = []\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.growConfig.lights_on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.growConfig.lights_off)).format('x')\r\n\r\n        m.add(1, 'days')\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.growConfig.lights_on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.growConfig.lights_off)).format('x')\r\n\r\n        m.add(1, 'days')\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.growConfig.lights_on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.growConfig.lights_off)).format('x')\r\n\r\n        m.add(1, 'days')\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.growConfig.lights_on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.growConfig.lights_off)).format('x')\r\n\r\n\r\n        this.setState({\r\n            lightsOnArray: lightsOnArray,\r\n            lightsOffArray: lightsOffArray\r\n        })\r\n\r\n        this.lightsOnArray = lightsOnArray\r\n        this.lightsOffArray = lightsOffArray\r\n\r\n        this.createTickArray()\r\n\r\n    }\r\n\r\n    createTickArray = (processedData = this.state.processedData) => {\r\n        if (!processedData || !processedData[0]) {\r\n            return\r\n        }\r\n\r\n        var tickRange = [new Date(processedData[0].time).getTime(), new Date(processedData[processedData.length - 1].time).getTime()]\r\n\r\n        var ticks = []\r\n\r\n        var tempOnArray = this.lightsOnArray\r\n        var tempOffArray = this.lightsOffArray\r\n\r\n        if (!tempOffArray && !tempOnArray) {\r\n            return\r\n        }\r\n\r\n        var sourceArray = tempOnArray.concat(tempOffArray)\r\n\r\n        sourceArray.sort((a, b) => (a > b) ? 1 : -1)\r\n\r\n        sourceArray.forEach((tick) => {\r\n            if (tick > tickRange[0] && tick < tickRange[1]) {\r\n                ticks[ticks.length] = tick\r\n            }\r\n        })\r\n\r\n        //set backgrounds\r\n        if (tempOnArray.includes(ticks[0])) {\r\n            this.setState({ lightBackgrounds: ['#7344e750', '#fff93650'] })\r\n        } else {\r\n            this.setState({ lightBackgrounds: ['#fff93650', '#7344e750'] })\r\n\r\n        }\r\n\r\n        this.setState({ tickArray: ticks })\r\n\r\n    }\r\n\r\n    processData = (window = this.state.displayWindow) => {\r\n        var data = null\r\n        if (!this.concatData) {\r\n            return;\r\n        } else {\r\n            data = this.concatData\r\n        }\r\n\r\n        var processedData = []\r\n        var i = -1\r\n        var now = new Date().getTime()\r\n\r\n        switch (window) {\r\n            case 72:\r\n                data.forEach((dataPoint) => {\r\n                    i++;\r\n                    if (i === 0 || i % 10 === 0) {\r\n                        var processedPoint = dataPoint\r\n                        processedData[processedData.length] = processedPoint\r\n                    }\r\n                })\r\n\r\n                if (processedData.length >= data.length / 11) { //TODO: not sure why i've included this check, removed for other hours...\r\n                    this.setState({\r\n                        processedData: processedData\r\n                    });\r\n                }\r\n                break;\r\n            case 24:\r\n                data.forEach((dataPoint) => {\r\n                    if (now - dataPoint.time < 86400000) {\r\n                        i++;\r\n                        if (i === 0 || i % 4 === 0) {\r\n                            var processedPoint = dataPoint\r\n                            processedData[processedData.length] = processedPoint\r\n                        }\r\n                    }\r\n                })\r\n\r\n                this.setState({\r\n                    processedData: processedData\r\n                });\r\n                break;\r\n            case 12:\r\n                data.forEach((dataPoint) => {\r\n                    if (now - dataPoint.time < 43200000) {\r\n                        var processedPoint = dataPoint\r\n                        processedData[processedData.length] = processedPoint\r\n                    }\r\n                })\r\n\r\n                this.setState({\r\n                    processedData: processedData\r\n                });\r\n                break;\r\n            case 3:\r\n                data.forEach((dataPoint) => {\r\n                    if (now - dataPoint.time < 10800000) {\r\n                        var processedPoint = dataPoint\r\n                        processedData[processedData.length] = processedPoint\r\n                    }\r\n                })\r\n\r\n                this.setState({\r\n                    processedData: processedData\r\n                });\r\n                break;\r\n            case 1: // stupid naming for half hour... but if i'm using integers..\r\n                data.forEach((dataPoint) => {\r\n                    if (now - dataPoint.time < 1800000) {\r\n                        var processedPoint = dataPoint\r\n                        processedData[processedData.length] = processedPoint\r\n                    }\r\n                })\r\n\r\n                this.setState({\r\n                    processedData: processedData\r\n                });\r\n                break;\r\n            default: //72\r\n                data.forEach((dataPoint) => {\r\n                    i++;\r\n                    if (i === 0 || i % 10 === 0) {\r\n                        var processedPoint = dataPoint\r\n                        processedData[processedData.length] = processedPoint\r\n                    }\r\n                })\r\n\r\n                if (processedData.length >= data.length / 11) {\r\n                    this.setState({\r\n                        processedData: processedData\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n\r\n        this.createTickArray(processedData)\r\n\r\n    }\r\n\r\n    renderTooltip = (props) => {\r\n        var rawContent = props.payload\r\n        if (rawContent === null || rawContent.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var readableTime = moment(props.payload[0].payload.time).format('ddd - HH:mm')\r\n\r\n        var tempTemp = null;\r\n        var tempTempColor = \"#000\"\r\n        var tempHumidity = null;\r\n        var tempHumidityColor = \"#000\"\r\n        var tempTemp2 = null;\r\n        var tempTempColor2 = \"#000\"\r\n        var tempHumidity2 = null;\r\n        var tempHumidityColor2 = \"#000\"\r\n        var tempTemp3 = null;\r\n        var tempTempColor3 = \"#000\"\r\n        var tempHumidity3 = null;\r\n        var tempHumidityColor3 = \"#000\"\r\n\r\n        var tempFanPower = null;\r\n        var tempFanSpdColor = \"#000\"\r\n\r\n        var tempHumidifierPower = null;\r\n        var tempHumiPwrColor = \"#000\"\r\n\r\n\r\n        rawContent.forEach((line) => {\r\n            if (line.dataKey === \"cTemp\") {\r\n                tempTempColor = line.stroke\r\n                tempTemp = rawContent[0].payload.cTemp\r\n            }\r\n\r\n            if (line.dataKey === \"humidity\") {\r\n                tempHumidityColor = line.stroke\r\n                tempHumidity = rawContent[0].payload.humidity\r\n            }\r\n\r\n            if (line.dataKey === \"s2Temp\") {\r\n                tempTempColor2 = line.stroke\r\n                tempTemp2 = rawContent[0].payload.s2Temp\r\n            }\r\n\r\n            if (line.dataKey === \"s2Humi\") {\r\n                tempHumidityColor2 = line.stroke\r\n                tempHumidity2 = rawContent[0].payload.s2Humi\r\n            }\r\n\r\n            if (line.dataKey === \"s3Temp\") {\r\n                tempTempColor3 = line.stroke\r\n                tempTemp3 = rawContent[0].payload.s3Temp\r\n            }\r\n\r\n            if (line.dataKey === \"s3Humi\") {\r\n                tempHumidityColor3 = line.stroke\r\n                tempHumidity3 = rawContent[0].payload.s3Humi\r\n            }\r\n\r\n\r\n            if (line.dataKey === \"fanSpeed\") {\r\n                tempFanSpdColor = line.stroke\r\n                tempFanPower = rawContent[0].payload.fanSpeed\r\n            }\r\n\r\n\r\n\r\n            if (line.dataKey === \"humiPower\") {\r\n                tempHumiPwrColor = line.stroke\r\n                tempHumidifierPower = rawContent[0].payload.humiPower\r\n            }\r\n\r\n\r\n        })\r\n\r\n        return (\r\n            <div className=\"Grow-Details-Graph-Tooltip\">\r\n                <div>{readableTime}</div>\r\n\r\n                {(() => {\r\n                    if (tempTemp) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempTempColor }}>T1: {tempTemp}°C </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempHumidity) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempHumidityColor }}>H1: {tempHumidity}% RH </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempTemp2) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempTempColor2 }}>T2: {tempTemp2}°C </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempHumidity2) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempHumidityColor2 }}>H2: {tempHumidity2}% RH </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempTemp3) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempTempColor3 }}>T3: {tempTemp3}°C </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempHumidity3) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempHumidityColor3 }}>H3: {tempHumidity3}% RH </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempFanPower) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempFanSpdColor }}>FAN-PWR: {tempFanPower}% </div>\r\n                    }\r\n                })()}\r\n\r\n\r\n                {(() => {\r\n                    if (tempHumidifierPower) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempHumiPwrColor }}>HUM-PWR: {tempHumidifierPower}% </div>\r\n                    }\r\n                })()}\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    toggleTempLine = () => {\r\n        if (this.displayTemp === true) {\r\n            this.displayTemp = false\r\n            this.setState({ displayTemp: false })\r\n        } else {\r\n            this.displayTemp = true\r\n            this.setState({ displayTemp: true })\r\n        }\r\n    }\r\n\r\n    toggleFanLine = () => {\r\n        if (this.displayFan === true) {\r\n            this.displayFan = false\r\n            this.setState({ displayFan: false })\r\n        } else {\r\n            this.displayFan = true\r\n            this.setState({ displayFan: true })\r\n        }\r\n    }\r\n\r\n    toggleHumidityLine = () => {\r\n        if (this.displayHumidity === true) {\r\n            this.displayHumidity = false\r\n            this.setState({ displayHumidity: false })\r\n        } else {\r\n            this.displayHumidity = true\r\n            this.setState({ displayHumidity: true })\r\n        }\r\n    }\r\n\r\n\r\n    toggleHumidifierLine = () => {\r\n        if (this.displayHumidifier === true) {\r\n            this.displayHumidifier = false\r\n            this.setState({ displayHumidifier: false })\r\n        } else {\r\n            this.displayHumidifier = true\r\n            this.setState({ displayHumidifier: true })\r\n        }\r\n    }\r\n\r\n    toggle1 = () => {\r\n        this.setState({ displayWindow: 1 })\r\n        this.processData(1)\r\n    }\r\n\r\n    toggle3 = () => {\r\n        this.setState({ displayWindow: 3 })\r\n        this.processData(3)\r\n    }\r\n\r\n    toggle12 = () => {\r\n        this.setState({ displayWindow: 12 })\r\n        this.processData(12)\r\n    }\r\n\r\n    toggle24 = () => {\r\n        this.setState({ displayWindow: 24 })\r\n        this.processData(24)\r\n    }\r\n\r\n    toggle72 = () => {\r\n        this.setState({ displayWindow: 72 })\r\n        this.processData(72)\r\n    }\r\n\r\n    render() {\r\n\r\n        var renderDayGraph = null\r\n        if (this.state.processedData && this.state.processedData[0]) {\r\n            if (this.props.parentSize) {\r\n                var xSize = Math.floor(this.props.parentSize[0] * 0.95)\r\n                var ySize = Math.floor(this.props.parentSize[1] * 0.9)\r\n\r\n                renderDayGraph = (\r\n                    <LineChart width={xSize} height={ySize} data={this.state.processedData}>\r\n                        {(() => {\r\n                            if (this.state.displayTemp) {\r\n                                return <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"cTemp\" stroke=\"#FF0000\" strokeWidth=\"2\" dot={false} />\r\n                            } else {\r\n                                return <Line yAxisId=\"left\" type=\"monotone\" dataKey=\" \" stroke=\"#FF0000\" dot={false} />\r\n\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayTemp) {\r\n                                return <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"s2Temp\" stroke=\"#E42CEC\" strokeWidth=\"2\" dot={false} />\r\n                            } else {\r\n                                return <Line yAxisId=\"left\" type=\"monotone\" dataKey=\" \" stroke=\"#FF0000\" dot={false} />\r\n\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayTemp) {\r\n                                return <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"s3Temp\" stroke=\"#ECA92C\" strokeWidth=\"2\" dot={false} />\r\n                            } else {\r\n                                return <Line yAxisId=\"left\" type=\"monotone\" dataKey=\" \" stroke=\"#FF0000\" dot={false} />\r\n\r\n                            }\r\n                        })()}\r\n\r\n\r\n                        {(() => {\r\n                            if (this.state.displayHumidity) {\r\n                                return <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"humidity\" stroke=\"#FF0000\" strokeWidth=\"0.5\" dot={false} />\r\n                            } else {\r\n                                return <Line yAxisId=\"right\" type=\"monotone\" dataKey=\" \" stroke=\"#FF0000\" dot={false} />\r\n\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayHumidity) {\r\n                                return <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"s2Humi\" stroke=\"#E42CEC\" strokeWidth=\"0.5\" dot={false} />\r\n                            } else {\r\n                                return <Line yAxisId=\"right\" type=\"monotone\" dataKey=\" \" stroke=\"#FF0000\" dot={false} />\r\n\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayHumidity) {\r\n                                return <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"s3Humi\" stroke=\"#ECA92C\" strokeWidth=\"0.5\" dot={false} />\r\n                            } else {\r\n                                return <Line yAxisId=\"right\" type=\"monotone\" dataKey=\" \" stroke=\"#FF0000\" dot={false} />\r\n\r\n                            }\r\n                        })()}\r\n\r\n\r\n\r\n                        {(() => {\r\n                            if (this.state.displayFan) {\r\n                                return <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"fanSpeed\" stroke=\"#4c4c4c\" dot={false} />\r\n                            } else {\r\n                                return <Line yAxisId=\"right\" type=\"monotone\" dataKey=\" \" stroke=\"#4c4c4c\" dot={false} />\r\n\r\n                            }\r\n                        })()}\r\n\r\n                        {(() => {\r\n                            if (this.state.displayHumidifier) {\r\n                                return <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"humiPower\" stroke=\"#8884d8\" dot={false} />\r\n                            } else {\r\n\r\n                                return <Line yAxisId=\"right\" type=\"monotone\" dataKey=\" \" stroke=\"#8884d8\" dot={false} />\r\n                            }\r\n                        })()}\r\n\r\n\r\n\r\n                        <CartesianGrid vertical horizontal={false} verticalFill={[this.state.lightBackgrounds[0], this.state.lightBackgrounds[1]]} fillOpacity={0.2} />\r\n\r\n                        <XAxis\r\n                            dataKey=\"time\"\r\n                            type=\"number\"\r\n                            domain={[new Date(this.state.processedData[0].time).getTime(), new Date(this.state.processedData[this.state.processedData.length - 1].time).getTime()]}\r\n                            ticks={this.state.tickArray}\r\n                            tickFormatter={(tick) => moment(tick * 1).format('ddd - HH:mm')}\r\n                        />\r\n                        <YAxis yAxisId=\"left\" orientation=\"left\" domain={[21, 30]} />\r\n                        <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n                        <Tooltip content={this.renderTooltip} />\r\n                    </LineChart>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"Chart-Container\">\r\n\r\n                {renderDayGraph}\r\n                <div style={{ width: '30px', display: 'flex', flexDirection: 'column', position: 'absolute', marginLeft: '10x' }}>\r\n\r\n                    <div>\r\n                        {(() => {\r\n                            if (this.state.displayWindow === 1) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '10px', padding: '0', color: '#FFF', backgroundColor: '#0b2e11' }} onClick={this.toggle1}>1/2hr</button>\r\n                            } else {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '10px', padding: '0' }} onClick={this.toggle1}>1/2hr</button>\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayWindow === 3) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '10px', padding: '0', color: '#FFF', backgroundColor: '#0b2e11' }} onClick={this.toggle3}>3hr</button>\r\n                            } else {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '10px', padding: '0' }} onClick={this.toggle3}>3hr</button>\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayWindow === 12) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '10px', padding: '0', color: '#FFF', backgroundColor: '#0b2e11' }} onClick={this.toggle12}>12hr</button>\r\n                            } else {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '10px', padding: '0' }} onClick={this.toggle12}>12hr</button>\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayWindow === 24) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '10px', padding: '0', color: '#FFF', backgroundColor: '#0b2e11' }} onClick={this.toggle24}>24hr</button>\r\n                            } else {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '10px', padding: '0' }} onClick={this.toggle24}>24hr</button>\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayWindow === 72) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '10px', padding: '0', color: '#FFF', backgroundColor: '#0b2e11' }} onClick={this.toggle72}>72hr</button>\r\n                            } else {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '10px', padding: '0' }} onClick={this.toggle72}>72hr</button>\r\n                            }\r\n                        })()}\r\n                    </div>\r\n\r\n                    <div style={{ height: '20px' }}></div>\r\n                    <div>\r\n                        {(() => {\r\n                            if (this.state.displayTemp && this.state.processedData && this.state.processedData[0] && this.state.processedData[0].cTemp) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '28px', color: '#FFF', padding: '0px', backgroundColor: '#ca2014' }} onClick={this.toggleTempLine}><WiThermometer /></button>\r\n                            } else if (this.state.processedData && this.state.processedData[0] && this.state.processedData[0].cTemp) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '28px', padding: '0px' }} onClick={this.toggleTempLine}><WiThermometer /></button>\r\n\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayHumidity && this.state.processedData && this.state.processedData[0] && this.state.processedData[0].humidity) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '28px', color: '#FFF', padding: '0px', backgroundColor: '#387d14' }} onClick={this.toggleHumidityLine}><WiHumidity /></button>\r\n                            } else if (this.state.processedData && this.state.processedData[0] && this.state.processedData[0].humidity) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '28px', padding: '0px' }} onClick={this.toggleHumidityLine}><WiHumidity /></button>\r\n\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayFan && this.state.processedData && this.state.processedData[0] && this.state.processedData[0].fanSpeed) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '28px', color: '#FFF', padding: '0px', backgroundColor: '#db5e24' }} onClick={this.toggleFanLine}><WiHurricane /></button>\r\n                            } else if (this.state.processedData && this.state.processedData[0] && this.state.processedData[0].fanSpeed) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '28px', padding: '0px' }} onClick={this.toggleFanLine}><WiHurricane /></button>\r\n\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayHumidifier && this.state.processedData && this.state.processedData[0] && this.state.processedData[0].humiPower) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '28px', color: '#FFF', padding: '0px', backgroundColor: '#8884d8' }} onClick={this.toggleHumidifierLine}><WiSprinkle /></button>\r\n                            } else if (this.state.processedData && this.state.processedData[0] && this.state.processedData[0].humiPower) {\r\n                                return <button style={{ width: '30px', height: '30px', fontSize: '28px', padding: '0px' }} onClick={this.toggleHumidifierLine}><WiSprinkle /></button>\r\n\r\n                            }\r\n                        })()}\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GraphSensors;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport GraphSensors from '../Graphs/GraphSensors.js'\r\n\r\n\r\nclass GrowDetailsGraphs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            elementSize: [],\r\n        };\r\n\r\n        this.graphSizeUpdated = 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this._ismounted === false) {\r\n            return;\r\n        }\r\n\r\n        var dateNow = new Date()\r\n        if (((this.state.elementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]) && ((dateNow.getTime() - this.graphSizeUpdated) > 500))) {\r\n            var tempSize = [this.divRef.clientWidth, this.divRef.clientHeight]\r\n\r\n            if (tempSize !== this.state.elementSize) {\r\n                this.setState({ elementSize: tempSize });\r\n                this.graphSizeUpdated = dateNow.getTime();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id=\"Grow-Details-Graphs-Page\" ref={element => this.divRef = element}>\r\n                <GraphSensors parentSize={this.state.elementSize} growID={this.props.growID} rawGrowData={this.props.rawGrowData} growConfig={this.props.growConfig} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowDetailsGraphs;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nimport GrowDetailsConfig from './GrowDetailsConfig'\r\nimport GrowDetailsGraphs from './GrowDetailsGraphs'\r\n\r\nimport JournalBoxItem from '../GrowJournal/JournalBoxItem'\r\n\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\nimport moment from 'moment'\r\n\r\nimport { WiThermometer, WiHumidity, WiHurricane, WiSprinkle } from 'react-icons/wi';\r\n\r\n\r\n\r\nclass GrowDetailsPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayBottom: 'data', // data, config, feed, edit-feed, journals\r\n            activeIndicatorStyle: 'Grow-Active-Indicator-Circle',\r\n            linkedJournals: [],\r\n            camURL: null,\r\n            growConfig: null,\r\n\r\n            SENSOR_PIDS: [],\r\n            SENSOR_NAMES: [],\r\n            SENSOR_TYPES: [],\r\n            SENSOR_LINE_COLORS: [],\r\n            SENSOR_LINE_THICKNESSES: [],\r\n\r\n            DAILY_HIGHS: [],\r\n            DAILY_HIGHS_TIMES: [],\r\n            DAILY_LOWS: [],\r\n            DAILY_LOWS_TIMES: [],\r\n            DAILY_AVGS: [],\r\n            YEST_AVGS: []\r\n        };\r\n\r\n        this.dbHelper = new DbHelper(); // Need for linked journals\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n\r\n        if (this.props.grow.id) {\r\n            this.getConfig()\r\n        }\r\n\r\n        if (this.props.grow.urls.cam) {\r\n            if (this._ismounted) {\r\n                this.setState({ camURL: this.props.grow.urls.cam });\r\n            }\r\n        }\r\n\r\n        if (this.props.rawGrowData) {\r\n            if (!this.props.rawGrowData[this.props.grow.id]) {\r\n                return;\r\n            }\r\n\r\n            var dataLengthRef = this.props.rawGrowData[this.props.grow.id][this.props.rawGrowData[this.props.grow.id].length - 1].length\r\n\r\n            if (this.dataLengthRef !== dataLengthRef) {\r\n                this.dataLengthRef = dataLengthRef\r\n                this.processGrowData(this.props.rawGrowData)\r\n            }\r\n        }\r\n\r\n        this.getLinkedJournals(this.props.grow.journals, this.setLinkedJournals)\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.rawGrowData) {\r\n            if (!this.props.rawGrowData[this.props.grow.id]) {\r\n                return;\r\n            }\r\n\r\n            var dataLengthRef = this.props.rawGrowData[this.props.grow.id][this.props.rawGrowData[this.props.grow.id].length - 1].length\r\n\r\n            if (this.dataLengthRef !== dataLengthRef) {\r\n                this.dataLengthRef = dataLengthRef\r\n                this.processGrowData(this.props.rawGrowData)\r\n            }\r\n        }\r\n    }\r\n\r\n    processGrowData = (growData) => {\r\n\r\n        var concatData = []\r\n        growData[this.props.grow.id].forEach((list) => {\r\n            concatData = concatData.concat(list)\r\n        })\r\n\r\n        concatData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n\r\n        this.setState({\r\n            liveData: concatData[concatData.length - 1],\r\n            lastLiveData: concatData[concatData.length - 2],\r\n        })\r\n\r\n        var now = new Date().getTime()\r\n\r\n        var SENSOR_PIDS = []\r\n        var SENSOR_NAMES = []\r\n        var SENSOR_TYPES = []\r\n        var SENSOR_LINE_COLORS = []\r\n        var SENSOR_LINE_THICKNESSES = []\r\n\r\n        var DAILY_HIGHS = []\r\n        var DAILY_HIGHS_TIMES = []\r\n        var DAILY_LOWS = []\r\n        var DAILY_LOWS_TIMES = []\r\n        var DAILY_AVGS = []\r\n        var YEST_AVGS = []\r\n\r\n        var DAILY_POINT_COUNT = 0\r\n        var YEST_POINT_COUNT = 0\r\n\r\n        var lastDayData = []\r\n        var yesterdayData = []\r\n\r\n        // DEFINING SENSOR INFO\r\n        if (this.props.grow.config.SENSORS) {\r\n            this.props.grow.config.SENSORS.forEach((sensor, key) => {\r\n                console.log(\"key: \" + key + \", sensor: \" + sensor.name);\r\n\r\n                if (SENSOR_PIDS[key] !== sensor.PID) {\r\n                    SENSOR_PIDS[key] = sensor.PID\r\n                    SENSOR_NAMES[key] = sensor.name\r\n                    SENSOR_TYPES[key] = sensor.type\r\n                    SENSOR_LINE_COLORS[key] = sensor.color\r\n                    SENSOR_LINE_THICKNESSES[key] = sensor.thickness\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        concatData.forEach((dataPoint) => {\r\n            if (now - dataPoint.time < 86400000) {\r\n                DAILY_POINT_COUNT += 1\r\n\r\n                lastDayData[lastDayData.length] = dataPoint\r\n\r\n                // DATA and CALCS for avgs/lows/highs\r\n                for (const pid in dataPoint) {\r\n\r\n                    if (SENSOR_PIDS.includes(pid)) {\r\n                        var tIndex = SENSOR_PIDS.indexOf(pid)\r\n\r\n                        // HIGHS\r\n                        if (!DAILY_HIGHS[tIndex] || parseFloat(dataPoint[pid]) >= DAILY_HIGHS[tIndex]) {\r\n                            DAILY_HIGHS[tIndex] = dataPoint[pid]\r\n                            DAILY_HIGHS_TIMES[tIndex] = dataPoint.time\r\n                        }\r\n                        // LOWS\r\n                        if (!DAILY_LOWS[tIndex] || parseFloat(dataPoint[pid]) <= DAILY_LOWS[tIndex]) {\r\n                            DAILY_LOWS[tIndex] = dataPoint[pid]\r\n                            DAILY_LOWS_TIMES[tIndex] = dataPoint.time\r\n                        }\r\n                        //AVERAGES\r\n                        DAILY_AVGS[tIndex] += parseFloat(dataPoint[pid])\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // YESTERDAY AVERAGES\r\n            if ((now - dataPoint.time < (86400000 * 2)) && (now - dataPoint.time > 86400000)) {\r\n                YEST_POINT_COUNT += 1\r\n\r\n                yesterdayData[yesterdayData.length] = dataPoint\r\n\r\n                // DATA and CALCS for avgs/lows/highs\r\n                for (const pid in dataPoint) {\r\n\r\n                    if (SENSOR_PIDS.includes(pid)) {\r\n                        var tIndex = SENSOR_PIDS.indexOf(pid)\r\n\r\n                        //AVERAGES\r\n                        YEST_AVGS[tIndex] += parseFloat(dataPoint[pid])\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        })\r\n        // ACTUALLY AVERAGE THEM...\r\n        console.log(\"DAILY!\")\r\n        console.log(DAILY_AVGS)\r\n        console.log(\"YEST!\")\r\n        console.log(YEST_AVGS)\r\n\r\n        this.setState({\r\n            SENSOR_PIDS: SENSOR_PIDS,\r\n            SENSOR_NAMES: SENSOR_NAMES,\r\n            SENSOR_TYPES: SENSOR_TYPES,\r\n            SENSOR_LINE_COLORS: SENSOR_LINE_COLORS,\r\n            SENSOR_LINE_THICKNESSES: SENSOR_LINE_THICKNESSES,\r\n\r\n            DAILY_HIGHS: DAILY_HIGHS,\r\n            DAILY_HIGHS_TIMES: DAILY_HIGHS_TIMES,\r\n            DAILY_LOWS: DAILY_LOWS,\r\n            DAILY_LOWS_TIMES: DAILY_LOWS_TIMES,\r\n            DAILY_AVGS: DAILY_AVGS,\r\n            YEST_AVGS: YEST_AVGS\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // TODO: remove function\r\n    watchPiCam = () => {\r\n        var tempURL = this.props.grow.urls.cam + 'cam_pic.php?time='\r\n\r\n        var i = 0\r\n        setInterval(() => {\r\n            i++\r\n            var tempCamURL = tempURL + i.toString()\r\n            if (this._ismounted) {\r\n                this.setState({\r\n                    camURL: tempCamURL\r\n                });\r\n            }\r\n        }, 5000);\r\n    }\r\n\r\n\r\n    getLinkedJournals = (key, journals, setData) => {\r\n        this.dbHelper.getLinkedJournals(key, journals, setData)\r\n    }\r\n\r\n\r\n    setLinkedJournals = (data) => {\r\n        if (this._ismounted) {\r\n            this.setState({\r\n                linkedJournals: data\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    checkActive = (lastUpdateTime) => {\r\n\r\n        if (lastUpdateTime) {\r\n            var now = new Date();\r\n            var difference = now - (new Date(lastUpdateTime).getTime())\r\n\r\n            if (this._ismounted) {\r\n\r\n                if (difference >= 120000) {\r\n                    this.setState({\r\n                        activeIndicatorStyle: 'Grow-Active-Indicator-Circle Data-Warning-Background'\r\n                    });\r\n                }\r\n\r\n                if (difference >= 240000) {\r\n                    this.setState({\r\n                        activeIndicatorStyle: 'Grow-Active-Indicator-Circle Data-Danger-Background'\r\n                    });\r\n                }\r\n\r\n                if (difference < 120000) {\r\n                    this.setState({\r\n                        activeIndicatorStyle: 'Grow-Active-Indicator-Circle Data-Optimal-Background'\r\n                    });\r\n                }\r\n            }\r\n\r\n        } else {\r\n            console.log(\"NO LAST UPDATE ERROR\")\r\n        }\r\n\r\n    }\r\n\r\n    openJournals = () => {\r\n        console.log(\"GROWDETAILS OPEN JOURNALS!\")\r\n        if (this._ismounted) {\r\n            this.setState({\r\n                displayBottom: 'journals'\r\n            });\r\n        }\r\n    }\r\n    openData = () => {\r\n        console.log(\"GROWDETAILS OPEN DATA\")\r\n        if (this._ismounted) {\r\n            this.setState({\r\n                displayBottom: 'data'\r\n            });\r\n        }\r\n    }\r\n    openConfig = () => {\r\n        console.log(\"GROWDETAILS OPEN CONFIG\")\r\n        if (this._ismounted) {\r\n            this.setState({\r\n                displayBottom: 'config'\r\n            });\r\n        }\r\n    }\r\n    openFeed = () => {\r\n        if (this._ismounted) {\r\n            console.log(\"GROWDETAILS OPEN FEED\")\r\n            this.setState({\r\n                displayBottom: 'feed'\r\n            });\r\n        }\r\n\r\n    }\r\n    openEditFeed = () => {\r\n        if (this._ismounted) {\r\n            console.log(\"GROWDETAILS OPEN EDIT FEED\")\r\n            this.setState({\r\n                displayBottom: 'edit-feed'\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    openFullCam = (ev) => {\r\n        this.props.openFullCam(ev.target.dataset.value)\r\n    }\r\n\r\n    openJournal = (journal) => {\r\n        console.log(\"TODO: GrowDetailsPage open journal\")\r\n        console.log(journal)\r\n        this.props.setJournalID(journal.id);\r\n    }\r\n\r\n    getConfig = () => {\r\n        this.dbHelper.watchGrowConfig(this.props.grow.id, this.setConfig)\r\n    }\r\n\r\n    setConfig = (config) => {\r\n        this.setState({ growConfig: config })\r\n    }\r\n\r\n\r\n    render() {\r\n        //TODO: below in less code... or not using zIndex.\r\n        var zIndexOne = { zIndex: '1', position: 'absolute' }\r\n        var zIndexZero = { zIndex: '0', position: 'absolute' }\r\n\r\n        var journalsStyle = zIndexOne\r\n        var graphsStyle = zIndexZero\r\n        var feedStyle = zIndexZero\r\n        var editFeedStyle = zIndexZero\r\n        var configStyle = zIndexZero\r\n\r\n        if (this.state.displayBottom) {\r\n            switch (this.state.displayBottom) {\r\n                case 'journals':\r\n                    journalsStyle = zIndexOne\r\n                    graphsStyle = zIndexZero\r\n                    feedStyle = zIndexZero\r\n                    editFeedStyle = zIndexZero\r\n                    configStyle = zIndexZero\r\n                    break;\r\n                case 'data':\r\n                    journalsStyle = zIndexZero\r\n                    graphsStyle = zIndexOne\r\n                    feedStyle = zIndexZero\r\n                    editFeedStyle = zIndexZero\r\n                    configStyle = zIndexZero\r\n                    break;\r\n                case 'feed':\r\n                    journalsStyle = zIndexZero\r\n                    graphsStyle = zIndexZero\r\n                    feedStyle = zIndexOne\r\n                    editFeedStyle = zIndexZero\r\n                    configStyle = zIndexZero\r\n                    break;\r\n                case 'edit-feed':\r\n                    journalsStyle = zIndexZero\r\n                    graphsStyle = zIndexZero\r\n                    feedStyle = zIndexZero\r\n                    editFeedStyle = zIndexOne\r\n                    configStyle = zIndexZero\r\n                    break;\r\n                case 'config':\r\n                    journalsStyle = zIndexZero\r\n                    graphsStyle = zIndexZero\r\n                    feedStyle = zIndexZero\r\n                    editFeedStyle = zIndexZero\r\n                    configStyle = zIndexOne\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        var renderedLinkedJournals = null;\r\n        if (this.state.linkedJournals.length !== 0) {\r\n            renderedLinkedJournals = this.state.linkedJournals.map((journal) =>\r\n                <div key={journal.id} className=\"Journal-Box-Item-Container\">\r\n                    <JournalBoxItem journal={journal} openJournal={this.openJournal} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const listItems = this.state.SENSOR_PIDS.map((pid) =>\r\n            <div className=\"Grow-Details-Main-Data-Display-Row\">\r\n\r\n                {(() => {\r\n                    var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n\r\n                    if (this.props.grow.config.SENSORS[tIndex].type === \"airTemp\") {\r\n                        return (<div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                            {this.props.grow.config.SENSORS[tIndex].name} <WiThermometer style={{ color: '#FFF', fontSize: '30px' }} />\r\n                        </div>)\r\n                    } else if (this.props.grow.config.SENSORS[tIndex].type === \"humidity\") {\r\n                        return (<div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                            {this.props.grow.config.SENSORS[tIndex].name}  <WiHumidity style={{ color: '#FFF', fontSize: '30px' }} />\r\n                        </div>)\r\n                    } else if (this.props.grow.config.SENSORS[tIndex].type === \"fan\") {\r\n                        return (<div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                            {this.props.grow.config.SENSORS[tIndex].name}  <WiHurricane style={{ color: '#FFF', fontSize: '30px' }} />\r\n                        </div>)\r\n                    } else if (this.props.grow.config.SENSORS[tIndex].type === \"humidifier\") {\r\n                        return (<div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                            {this.props.grow.config.SENSORS[tIndex].name}  <WiSprinkle style={{ color: '#FFF', fontSize: '30px' }} />\r\n                        </div>)\r\n                    } else {\r\n                        return (<div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                            {this.props.grow.config.SENSORS[tIndex].name}\r\n                        </div>)\r\n                    }\r\n                })()}\r\n\r\n                <div className=\"Grow-Details-Main-Data-Current-Data\">\r\n                    {(() => {\r\n                        if (this.state.liveData.sA1_Temp > this.state.lastLiveData.sA1_Temp) {\r\n                            return <div style={{ fontSize: '14px', color: '#a02525' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                        } else if (this.state.liveData.sA1_Temp < this.state.lastLiveData.sA1_Temp) {\r\n                            return <div style={{ fontSize: '14px', color: '#242490' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                        } else {\r\n                            return <div style={{ fontSize: '14px', visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                        }\r\n                    })()}\r\n                    {Math.round(this.state.liveData[pid] * 10) / 10}°C\r\n                </div>\r\n\r\n\r\n                <div className=\"Grow-Details-Main-Data-Data\" style={{ marginBottom: '1px' }}>\r\n                    <div className=\"Grow-Details-Main-Yest-Data\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                        {(() => {\r\n                            if (this.state.yestTempAVG) {\r\n                                return Math.round(this.state.yestTempAVG * 10) / 10 + '°C'\r\n                            }\r\n                        })()}\r\n\r\n\r\n                        {(() => {\r\n                            if (this.state.tempAVG && this.state.yestTempAVG) {\r\n                                if (this.state.tempAVG > this.state.yestTempAVG) {\r\n                                    return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                } else if (this.state.tempAVG < this.state.yestTempAVG) {\r\n                                    return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                } else {\r\n                                    return <div style={{ visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                }\r\n                            }\r\n                        })()}\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if (this.state.tempAVG) {\r\n                            return Math.round(this.state.tempAVG * 10) / 10 + '°C'\r\n                        }\r\n                    })()}\r\n                </div>\r\n\r\n\r\n                <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#c77725', marginBottom: '1px' }}>\r\n                    <div className=\"Grow-Details-Main-Data-Time\">\r\n                        {(() => {\r\n                            if (this.state.highTemp) {\r\n                                var m = moment(this.state.highTemp[1])\r\n                                return m.format('HH:mm')\r\n                            }\r\n                        })()}\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if (this.state.highTemp) {\r\n                            return Math.round(this.state.highTemp[0] * 10) / 10 + '°C'\r\n                        }\r\n                    })()}\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#2584c7', marginBottom: '1px' }}>\r\n                    <div className=\"Grow-Details-Main-Data-Time\">\r\n                        {(() => {\r\n                            if (this.state.lowTemp) {\r\n                                var m = moment(this.state.lowTemp[1])\r\n                                return m.format('HH:mm')\r\n                            }\r\n                        })()}\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if (this.state.lowTemp) {\r\n                            return Math.round(this.state.lowTemp[0] * 10) / 10 + '°C'\r\n                        }\r\n                    })()}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n\r\n        // MAIN RENDER RETURN\r\n        return (\r\n            <div className=\"Grow-Details-Page\">\r\n\r\n                <div className=\"Grow-Details-Page-Content\">\r\n\r\n                    <div className=\"Grow-Details-Bottom-Btns\">\r\n                        <button className=\"Grow-Box-Function-Btn\" data-value={'data'} onClick={this.openData} >DATA <span role=\"img\" aria-label=\"grow data icon\">&#128200;</span></button>\r\n                        <button className=\"Grow-Box-Function-Btn\" data-value={'journals'} onClick={this.openJournals} >JRNLS <span role=\"img\" aria-label=\"journal\">&#128214;</span></button>\r\n                        <button className=\"Grow-Box-Function-Btn\" data-value={'config'} onClick={this.openConfig} >CNFG <span role=\"img\" aria-label=\"grow config icon\">&#128187;</span></button>\r\n                        <button className=\"Grow-Box-Function-Btn-Feed\" data-value={'feed'} onClick={this.openFeed} >FEED &#9619;&#9619;</button>\r\n                        <button className=\"Grow-Box-Function-Btn-Edit-Feed\" data-value={'edit-feed'} onClick={this.openEditFeed} >&#9998;</button>\r\n                    </div>\r\n\r\n                    <div className=\"Grow-Details-Content-Bottom\">\r\n\r\n                        <div className=\"Grow-Details-Bottom-Item\" style={journalsStyle} >\r\n                            <div className=\"Grow-Details-Journals\">\r\n\r\n                                <div className=\"Grow-Details-Journals-Header\">Connected Journals</div>\r\n                                <div style={{ overflowY: 'auto', display: 'flex', flexDirection: 'column', maxHeight: '100%' }}>\r\n                                    {renderedLinkedJournals}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"Grow-Details-Bottom-Item\" style={graphsStyle} >\r\n                            <GrowDetailsGraphs growID={this.props.grow.id} rawGrowData={this.props.rawGrowData} growConfig={this.state.growConfig} />\r\n                        </div>\r\n\r\n                        <div className=\"Grow-Details-Bottom-Item\" style={feedStyle} >\r\n                            <iframe id=\"Food-Chart\" title=\"FoodChart\" src={this.props.grow.urls.feed_chart} />\r\n                        </div>\r\n\r\n                        <div className=\"Grow-Details-Bottom-Item\" style={editFeedStyle} >\r\n                            <object id=\"Edit-Food-Chart\" type=\"text/html\" data={this.props.grow.urls.feed_edit} width=\"100%\" height=\"100%\" aria-label=\"edit food chart\" />\r\n                        </div>\r\n\r\n                        <div className=\"Grow-Details-Bottom-Item\" style={configStyle} >\r\n                            <GrowDetailsConfig growID={this.props.grow.id} />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"Grow-Details-Page-Panel\">\r\n                        <div className=\"Grow-Details-Header\">\r\n                            <div className={this.state.activeIndicatorStyle} />\r\n                            <div id=\"Grow-Header-Text\">{this.props.grow.name}</div>\r\n                        </div>\r\n\r\n\r\n                        <div id=\"Grow-Details-Data-Display\">\r\n                            {(() => {\r\n                                if (this.state.liveData) {\r\n                                    return (\r\n                                        <div id=\"Grow-Details-Main-Data-Display\">\r\n                                            <div className=\"Grow-Details-Headers-Display-Row\">\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ color: '#FFF', width: '100px', maxWidth: '100px' }}></div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '86px', maxWidth: '86px' }}></div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '60px', maxWidth: '60px' }}>24h~</div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '60px', maxWidth: '60px' }}>24h&#8593;</div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '60px', maxWidth: '60px' }}>24h&#8595;</div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {listItems}\r\n\r\n\r\n                                            {/* {(() => {\r\n                                                if (this.state.liveData.sA1_Temp) {\r\n                                                    return (\r\n                                                        <div className=\"Grow-Details-Main-Data-Display-Row\">\r\n                                                            <div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                                                                Temp 1 <WiThermometer style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                                            </div>\r\n                                                            <div className=\"Grow-Details-Main-Data-Current-Data\">\r\n                                                                {(() => {\r\n                                                                    if (this.state.liveData.sA1_Temp > this.state.lastLiveData.sA1_Temp) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#a02525' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                    } else if (this.state.liveData.sA1_Temp < this.state.lastLiveData.sA1_Temp) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#242490' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    } else {\r\n                                                                        return <div style={{ fontSize: '14px', visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    }\r\n                                                                })()}\r\n                                                                {Math.round(this.state.liveData.sA1_Temp * 10) / 10}°C\r\n                                                        </div>\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Yest-Data\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                                                                    {(() => {\r\n                                                                        if (this.state.yestTempAVG) {\r\n                                                                            return Math.round(this.state.yestTempAVG * 10) / 10 + '°C'\r\n                                                                        }\r\n                                                                    })()}\r\n\r\n\r\n                                                                    {(() => {\r\n                                                                        if (this.state.tempAVG && this.state.yestTempAVG) {\r\n                                                                            if (this.state.tempAVG > this.state.yestTempAVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                            } else if (this.state.tempAVG < this.state.yestTempAVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            } else {\r\n                                                                                return <div style={{ visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.tempAVG) {\r\n                                                                        return Math.round(this.state.tempAVG * 10) / 10 + '°C'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#c77725', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\">\r\n                                                                    {(() => {\r\n                                                                        if (this.state.highTemp) {\r\n                                                                            var m = moment(this.state.highTemp[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.highTemp) {\r\n                                                                        return Math.round(this.state.highTemp[0] * 10) / 10 + '°C'\r\n                                                                    }\r\n                                                                })()}\r\n\r\n\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#2584c7', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\">\r\n                                                                    {(() => {\r\n                                                                        if (this.state.lowTemp) {\r\n                                                                            var m = moment(this.state.lowTemp[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.lowTemp) {\r\n                                                                        return Math.round(this.state.lowTemp[0] * 10) / 10 + '°C'\r\n                                                                    }\r\n                                                                })()}\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    )\r\n                                                }\r\n                                            })()} */}\r\n\r\n\r\n                                            {/* {(() => {\r\n                                                if (this.state.liveData.humidity) {\r\n                                                    return (\r\n\r\n\r\n                                                        <div className=\"Grow-Details-Main-Data-Display-Row\">\r\n\r\n                                                            <div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                                                                Humi 1 <WiHumidity style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                                            </div>\r\n                                                            <div className=\"Grow-Details-Main-Data-Current-Data\">\r\n                                                                {(() => {\r\n                                                                    if (this.state.liveData.humidity > this.state.lastLiveData.humidity) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#a02525' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                    } else if (this.state.liveData.humidity < this.state.lastLiveData.humidity) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#242490' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    } else {\r\n                                                                        return <div style={{ fontSize: '14px', visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    }\r\n                                                                })()}\r\n                                                                {Math.round(this.state.liveData.humidity * 10) / 10}%\r\n                                                        </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Yest-Data\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                                                                    {(() => {\r\n                                                                        if (this.state.yestHumidityAVG) {\r\n                                                                            return Math.round(this.state.yestHumidityAVG * 10) / 10 + '%'\r\n                                                                        }\r\n                                                                    })()}\r\n\r\n                                                                    {(() => {\r\n                                                                        if (this.state.humidityAVG && this.state.yestHumidityAVG) {\r\n                                                                            if (this.state.humidityAVG > this.state.yestHumidityAVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                            } else if (this.state.humidityAVG < this.state.yestHumidityAVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            } else {\r\n                                                                                return <div style={{ visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.humidityAVG) {\r\n                                                                        return Math.round(this.state.humidityAVG * 10) / 10 + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#c77725', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\" >\r\n                                                                    {(() => {\r\n                                                                        if (this.state.highHumidity) {\r\n                                                                            var m = moment(this.state.highHumidity[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.highHumidity) {\r\n                                                                        return Math.round(this.state.highHumidity[0] * 10) / 10 + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#2584c7', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\">\r\n                                                                    {(() => {\r\n                                                                        if (this.state.lowHumidity) {\r\n                                                                            var m = moment(this.state.lowHumidity[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.lowHumidity) {\r\n                                                                        return Math.round(this.state.lowHumidity[0] * 10) / 10 + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    )\r\n                                                }\r\n                                            })()}\r\n\r\n                                            {(() => {\r\n                                                if (this.state.liveData.s2Temp) {\r\n                                                    return (\r\n                                                        <div className=\"Grow-Details-Main-Data-Display-Row\">\r\n                                                            <div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                                                                Temp 2 <WiThermometer style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                                            </div>\r\n                                                            <div className=\"Grow-Details-Main-Data-Current-Data\">\r\n                                                                {(() => {\r\n                                                                    if (this.state.liveData.s2Temp > this.state.lastLiveData.s2Temp) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#a02525' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                    } else if (this.state.liveData.s2Temp < this.state.lastLiveData.s2Temp) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#242490' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    } else {\r\n                                                                        return <div style={{ fontSize: '14px', visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    }\r\n                                                                })()}\r\n                                                                {Math.round(this.state.liveData.s2Temp * 10) / 10}°C\r\n                                                        </div>\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Yest-Data\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                                                                    {(() => {\r\n                                                                        if (this.state.yestTemp2AVG) {\r\n                                                                            return Math.round(this.state.yestTemp2AVG * 10) / 10 + '°C'\r\n                                                                        }\r\n                                                                    })()}\r\n\r\n\r\n                                                                    {(() => {\r\n                                                                        if (this.state.temp2AVG && this.state.yestTemp2AVG) {\r\n                                                                            if (this.state.temp2AVG > this.state.yestTemp2AVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                            } else if (this.state.tempAVG < this.state.yestTemp2AVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            } else {\r\n                                                                                return <div style={{ visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.temp2AVG) {\r\n                                                                        return Math.round(this.state.temp2AVG * 10) / 10 + '°C'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#c77725', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\">\r\n                                                                    {(() => {\r\n                                                                        if (this.state.highTemp2) {\r\n                                                                            var m = moment(this.state.highTemp2[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.highTemp2) {\r\n                                                                        return Math.round(this.state.highTemp2[0] * 10) / 10 + '°C'\r\n                                                                    }\r\n                                                                })()}\r\n\r\n\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#2584c7', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\">\r\n                                                                    {(() => {\r\n                                                                        if (this.state.lowTemp2) {\r\n                                                                            var m = moment(this.state.lowTemp2[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.lowTemp2) {\r\n                                                                        return Math.round(this.state.lowTemp2[0] * 10) / 10 + '°C'\r\n                                                                    }\r\n                                                                })()}\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    )\r\n                                                }\r\n                                            })()}\r\n\r\n                                            {(() => {\r\n                                                if (this.state.liveData.s2Humi) {\r\n                                                    return (\r\n\r\n\r\n                                                        <div className=\"Grow-Details-Main-Data-Display-Row\">\r\n                                                            <div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                                                                Humi 2 <WiHumidity style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                                            </div>\r\n                                                            <div className=\"Grow-Details-Main-Data-Current-Data\">\r\n                                                                {(() => {\r\n                                                                    if (this.state.liveData.s2Humi > this.state.lastLiveData.s2Humi) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#a02525' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                    } else if (this.state.liveData.s2Humi < this.state.lastLiveData.s2Humi) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#242490' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    } else {\r\n                                                                        return <div style={{ fontSize: '14px', visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    }\r\n                                                                })()}\r\n                                                                {Math.round(this.state.liveData.s2Humi * 10) / 10}%\r\n                                                        </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Yest-Data\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                                                                    {(() => {\r\n                                                                        if (this.state.yestHumidity2AVG) {\r\n                                                                            return Math.round(this.state.yestHumidity2AVG * 10) / 10 + '%'\r\n                                                                        }\r\n                                                                    })()}\r\n\r\n                                                                    {(() => {\r\n                                                                        if (this.state.humidity2AVG && this.state.yestHumidity2AVG) {\r\n                                                                            if (this.state.humidity2AVG > this.state.yestHumidity2AVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                            } else if (this.state.humidity2AVG < this.state.yestHumidity2AVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            } else {\r\n                                                                                return <div style={{ visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.humidity2AVG) {\r\n                                                                        return Math.round(this.state.humidity2AVG * 10) / 10 + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#c77725', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\" >\r\n                                                                    {(() => {\r\n                                                                        if (this.state.highHumi2) {\r\n                                                                            var m = moment(this.state.highHumi2[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.highHumi2) {\r\n                                                                        return Math.round(this.state.highHumi2[0] * 10) / 10 + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#2584c7', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\">\r\n                                                                    {(() => {\r\n                                                                        if (this.state.lowHumi2) {\r\n                                                                            var m = moment(this.state.lowHumi2[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.lowHumi2) {\r\n                                                                        return Math.round(this.state.lowHumi2[0] * 10) / 10 + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    )\r\n                                                }\r\n                                            })()}\r\n\r\n                                            {(() => {\r\n                                                if (this.state.liveData.s3Temp) {\r\n                                                    return (\r\n                                                        <div className=\"Grow-Details-Main-Data-Display-Row\">\r\n                                                            <div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                                                                Temp 3 <WiThermometer style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                                            </div>\r\n                                                            <div className=\"Grow-Details-Main-Data-Current-Data\">\r\n                                                                {(() => {\r\n                                                                    if (this.state.liveData.s3Temp > this.state.lastLiveData.s3Temp) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#a02525' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                    } else if (this.state.liveData.s3Temp < this.state.lastLiveData.s3Temp) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#242490' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    } else {\r\n                                                                        return <div style={{ fontSize: '14px', visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    }\r\n                                                                })()}\r\n                                                                {Math.round(this.state.liveData.s3Temp * 10) / 10}°C\r\n                                                        </div>\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Yest-Data\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                                                                    {(() => {\r\n                                                                        if (this.state.yestTemp3AVG) {\r\n                                                                            return Math.round(this.state.yestTemp3AVG * 10) / 10 + '°C'\r\n                                                                        }\r\n                                                                    })()}\r\n\r\n\r\n                                                                    {(() => {\r\n                                                                        if (this.state.temp3AVG && this.state.yestTemp3AVG) {\r\n                                                                            if (this.state.temp3AVG > this.state.yestTemp3AVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                            } else if (this.state.temp3AVG < this.state.yestTemp3AVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            } else {\r\n                                                                                return <div style={{ visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.temp3AVG) {\r\n                                                                        return Math.round(this.state.temp3AVG * 10) / 10 + '°C'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#c77725', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\">\r\n                                                                    {(() => {\r\n                                                                        if (this.state.highTemp3) {\r\n                                                                            var m = moment(this.state.highTemp3[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.highTemp3) {\r\n                                                                        return Math.round(this.state.highTemp3[0] * 10) / 10 + '°C'\r\n                                                                    }\r\n                                                                })()}\r\n\r\n\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#2584c7', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\">\r\n                                                                    {(() => {\r\n                                                                        if (this.state.lowTemp3) {\r\n                                                                            var m = moment(this.state.lowTemp3[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.lowTemp3) {\r\n                                                                        return Math.round(this.state.lowTemp3[0] * 10) / 10 + '°C'\r\n                                                                    }\r\n                                                                })()}\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    )\r\n                                                }\r\n                                            })()}\r\n\r\n                                            {(() => {\r\n                                                if (this.state.liveData.s3Humi) {\r\n                                                    return (\r\n\r\n\r\n                                                        <div className=\"Grow-Details-Main-Data-Display-Row\">\r\n                                                            <div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                                                                Humi 3 <WiHumidity style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                                            </div>\r\n                                                            <div className=\"Grow-Details-Main-Data-Current-Data\">\r\n                                                                {(() => {\r\n                                                                    if (this.state.liveData.s3Humi > this.state.lastLiveData.s3Humi) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#a02525' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                    } else if (this.state.liveData.s3Humi < this.state.lastLiveData.s3Humi) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#242490' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    } else {\r\n                                                                        return <div style={{ fontSize: '14px', visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    }\r\n                                                                })()}\r\n                                                                {Math.round(this.state.liveData.s3Humi * 10) / 10}%\r\n                                                        </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Yest-Data\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                                                                    {(() => {\r\n                                                                        if (this.state.yestHumidity3AVG) {\r\n                                                                            return Math.round(this.state.yestHumidity3AVG * 10) / 10 + '%'\r\n                                                                        }\r\n                                                                    })()}\r\n\r\n                                                                    {(() => {\r\n                                                                        if (this.state.humidity3AVG && this.state.yestHumidity3AVG) {\r\n                                                                            if (this.state.humidity3AVG > this.state.yestHumidity3AVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                            } else if (this.state.humidity3AVG < this.state.yestHumidity3AVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            } else {\r\n                                                                                return <div style={{ visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.humidity3AVG) {\r\n                                                                        return Math.round(this.state.humidity3AVG * 10) / 10 + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#c77725', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\" >\r\n                                                                    {(() => {\r\n                                                                        if (this.state.highHumi3) {\r\n                                                                            var m = moment(this.state.highHumi3[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.highHumi3) {\r\n                                                                        return Math.round(this.state.highHumi3[0] * 10) / 10 + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#2584c7', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\">\r\n                                                                    {(() => {\r\n                                                                        if (this.state.lowHumi3) {\r\n                                                                            var m = moment(this.state.lowHumi3[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.lowHumi3) {\r\n                                                                        return Math.round(this.state.lowHumi3[0] * 10) / 10 + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    )\r\n                                                }\r\n                                            })()}\r\n\r\n                                            {(() => {\r\n                                                if (this.state.liveData.fanSpeed) {\r\n                                                    return (\r\n\r\n\r\n                                                        <div className=\"Grow-Details-Main-Data-Display-Row\">\r\n\r\n                                                            <div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                                                                Fan <WiHurricane style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                                            </div>\r\n                                                            <div className=\"Grow-Details-Main-Data-Current-Data\">\r\n                                                                {(() => {\r\n                                                                    if (this.state.liveData.fanSpeed > this.state.lastLiveData.fanSpeed) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#a02525' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                    } else if (this.state.liveData.fanSpeed < this.state.lastLiveData.fanSpeed) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#242490' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    } else {\r\n                                                                        return <div style={{ fontSize: '14px', visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    }\r\n                                                                })()}\r\n                                                                {this.state.liveData.fanSpeed}%\r\n                                                        </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Yest-Data\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                                                                    {(() => {\r\n                                                                        if (this.state.yestFanAVG) {\r\n                                                                            return Math.round(this.state.yestFanAVG * 10) / 10 + '%'\r\n                                                                        }\r\n                                                                    })()}\r\n\r\n                                                                    {(() => {\r\n                                                                        if (this.state.fanAVG && this.state.yestFanAVG) {\r\n                                                                            if (this.state.fanAVG > this.state.yestFanAVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                            } else if (this.state.fanAVG < this.state.yestFanAVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            } else {\r\n                                                                                return <div style={{ visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.fanAVG) {\r\n                                                                        return Math.round(this.state.fanAVG * 10) / 10 + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#c77725', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\" >\r\n                                                                    {(() => {\r\n                                                                        if (this.state.highFan) {\r\n                                                                            var m = moment(this.state.highFan[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.highFan) {\r\n                                                                        return this.state.highFan[0] + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#2584c7', marginBottom: '1px' }}>\r\n\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\">\r\n                                                                    {(() => {\r\n                                                                        if (this.state.lowFan) {\r\n                                                                            var m = moment(this.state.lowFan[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.lowFan) {\r\n                                                                        return this.state.lowFan[0] + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    )\r\n                                                }\r\n                                            })()}\r\n\r\n                                            {(() => {\r\n                                                if (this.state.liveData.humiPower) {\r\n                                                    return (\r\n                                                        <div className=\"Grow-Details-Main-Data-Display-Row\">\r\n\r\n                                                            <div style={{ width: '100px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                                                                Hmdfr <WiSprinkle style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                                            </div>\r\n                                                            <div className=\"Grow-Details-Main-Data-Current-Data\">\r\n                                                                {(() => {\r\n                                                                    if (this.state.liveData.humiPower > this.state.lastLiveData.humiPower) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#a02525' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                    } else if (this.state.liveData.humiPower < this.state.lastLiveData.humiPower) {\r\n                                                                        return <div style={{ fontSize: '14px', color: '#242490' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    } else {\r\n                                                                        return <div style={{ fontSize: '14px', visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                    }\r\n                                                                })()}\r\n                                                                {this.state.liveData.humiPower}%\r\n                                                        </div>\r\n\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Yest-Data\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                                                                    {(() => {\r\n                                                                        if (this.state.yestHumidifierAVG) {\r\n                                                                            return Math.round(this.state.yestHumidifierAVG * 10) / 10 + '%'\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                    {(() => {\r\n                                                                        if (this.state.humidifierAVG && this.state.yestHumidifierAVG) {\r\n                                                                            if (this.state.humidifierAVG > this.state.yestHumidifierAVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                                                            } else if (this.state.humidifierAVG < this.state.yestHumidifierAVG) {\r\n                                                                                return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            } else {\r\n                                                                                return <div style={{ visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.humidifierAVG) {\r\n                                                                        return Math.round(this.state.humidifierAVG * 10) / 10 + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#c77725', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\">\r\n                                                                    {(() => {\r\n                                                                        if (this.state.highHumidifier) {\r\n                                                                            var m = moment(this.state.highHumidifier[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.highHumidifier) {\r\n                                                                        return this.state.highHumidifier[0] + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n                                                            <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#2584c7', marginBottom: '1px' }}>\r\n                                                                <div className=\"Grow-Details-Main-Data-Time\" >\r\n                                                                    {(() => {\r\n                                                                        if (this.state.lowHumidifier) {\r\n                                                                            var m = moment(this.state.lowHumidifier[1])\r\n                                                                            return m.format('HH:mm')\r\n                                                                        }\r\n                                                                    })()}\r\n                                                                </div>\r\n\r\n                                                                {(() => {\r\n                                                                    if (this.state.lowHumidifier) {\r\n                                                                        return this.state.lowHumidifier[0] + '%'\r\n                                                                    }\r\n                                                                })()}\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    )\r\n                                                }\r\n                                            })()} */}\r\n\r\n\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            })()}\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowDetailsPage;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\n\r\nclass GrowCamFull extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n    }\r\n\r\n    closeCam = () => {\r\n        this.props.closeFullCam()\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.camURL) {\r\n            console.log(\"GrowCamFull Cam URL\")\r\n            console.log(this.props.camURL)\r\n        }\r\n\r\n        return (\r\n            <div id=\"Grow-Cam-Full\">\r\n                <div className=\"Grow-Cam-Full-Exit-Btn\" onClick={this.closeCam}>X</div>\r\n                {/* TODO: Remove condition */}\r\n                {(() => {\r\n                    if (this.props.camURL === 'http://96.52.249.69:300/html/') {\r\n                        return <object type=\"text/html\" data={'http://96.52.249.69:300/html/'} width=\"100%\" height=\"100%\" aria-label=\"live cam\" />\r\n                    } else if (this.props.camURL === 'http://growlab-ag/cam/')  {\r\n                        return <object type=\"text/html\" data={'http://growlab-ag/cam/'} width=\"100%\" height=\"100%\" aria-label=\"live cam\" />\r\n                    } else {\r\n                        return <img alt=\"cam\" style={{ objectFit: 'contain' }} src={this.props.camURL} width=\"100%\" height=\"100%\" />\r\n                    }\r\n                })()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowCamFull;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport GrowBoxItem from './GrowBoxItem'\r\nimport GrowDetailsPage from './GrowDetailsPage'\r\nimport GrowCamFull from './GrowCamFull'\r\n\r\n\r\nclass GrowPage extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdisplayContent: \"main\", // main, full-cam\r\n\t\t\tgrow: this.props.grow,\r\n\t\t\tcamURL: null\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._ismounted = true;\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis._ismounted = false;\r\n\t}\r\n\r\n\tcomponentDidUpdate = () => {\r\n\t\tif (!this._ismounted) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tcloseModal = (key) => {\r\n\t\tif (!key || key === '') {\r\n\t\t\tthis.setState({ displayContent: \"main\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({ displayContent: \"main\" });\r\n\t}\r\n\r\n\topenMainPage = (page, id) => {\r\n\t\tthis.props.openMainPage(page, id)\r\n\t}\r\n\r\n\topenCreateGrowModal = () => {\r\n\t\talert(\"GrowPage.js openCreateGrowModal() TODO\")\r\n\t}\r\n\r\n\topenGrow = (grow) => {\r\n\t\tif (!grow) {\r\n\t\t\tthis.props.setGrow(null)\r\n\t\t}\r\n\r\n\t\tthis.props.setGrow(grow)\r\n\t}\r\n\r\n\topenFullCam = (url) => {\r\n\t\tthis.setState({\r\n\t\t\tdisplayContent: \"full-cam\",\r\n\t\t\tcamURL: url\r\n\t\t});\r\n\t}\r\n\r\n\tcloseFullCam = () => {\r\n\t\tthis.setState({\r\n\t\t\tdisplayContent: \"main\",\r\n\t\t\tcamURL: null\r\n\t\t});\r\n\t}\r\n\r\n\tsetJournalID = (journalID) => {\r\n\t\tconsole.log(\"GROW PAGE!\")\r\n\t\tconsole.log(journalID)\r\n\t\tthis.props.setJournalID(journalID)\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tif (this.props.growID) {\r\n\t\t\tthis.props.userGrows.forEach((grow) => {\r\n\t\t\t\tif (grow.id === this.props.growID) {\r\n\t\t\t\t\tthis.props.setGrow(grow)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tvar renderedGrowBoxes = null;\r\n\t\tif (this.props.grow === null && this.props.userGrows) {\r\n\t\t\trenderedGrowBoxes = this.props.userGrows.map((grow) =>\r\n\t\t\t\t<div key={grow.id} className=\"Grow-Box-Item-Container\">\r\n\t\t\t\t\t<GrowBoxItem grow={grow} openGrow={this.openGrow} openFullCam={this.openFullCam} openMainPage={this.openMainPage} liveGrowData={this.props.liveGrowData} rawGrowData={this.props.rawGrowData} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div id=\"Grow-Page\">\r\n\t\t\t\t<div id=\"Grow-Main\">\r\n\t\t\t\t\t<div id=\"Grow-Main-Area\">\r\n\r\n\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\tif (this.props.grow === null) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div id=\"Grow-List-Main-Area\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (renderedGrowBoxes) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Box-Area-Scroll\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Header-Area\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Header-Text\">Grows</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"New-Grow-Btn\" onClick={this.openCreateGrowModal}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Box-Area\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{renderedGrowBoxes}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Header-Area\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Header-Text\">Grows</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"New-Grow-Btn\" onClick={this.openCreateGrowModal}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})()}\r\n\r\n\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\tif (this.props.grow) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<GrowDetailsPage grow={this.props.grow} openFullCam={this.openFullCam} openMainPage={this.openMainPage} setJournalID={this.setJournalID}  rawGrowData={this.props.rawGrowData} />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})()}\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t{(() => {\r\n\t\t\t\t\tif (this.state.displayContent === 'full-cam') {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<GrowCamFull closeFullCam={this.closeFullCam} camURL={this.state.camURL} />\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t})()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GrowPage;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip } from 'recharts';\r\n\r\nimport moment from 'moment'\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\nclass GraphSensorsTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n        };\r\n\r\n        this.dbHelper = new DbHelper()\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this._ismounted = true;\r\n\r\n        if (this.props.growDeprecate) {\r\n            if (this.props.growDeprecate !== this.growDeprecate) {\r\n                this.growDeprecate = this.props.growDeprecate;\r\n                this.getData()\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n        if (this.props.growDeprecate) {\r\n            if (this.props.growDeprecate !== this.growDeprecate) {\r\n                this.growDeprecate = this.props.growDeprecate;\r\n                this.getData()\r\n            }\r\n        }\r\n    }\r\n\r\n    getData = async () => {\r\n        try {\r\n            await this.dbHelper.getThreeDays(this.props.growDeprecate, this.setData)\r\n        } catch(e) {\r\n            console.log(e); \r\n            return 'caught ' + e\r\n        }\r\n    }\r\n\r\n    setData = (data) => {\r\n        if (this._ismounted) {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        }\r\n    }\r\n\r\n    renderTooltip = (props) => {\r\n        var rawContent = props.payload\r\n        if (rawContent.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var readableTime = moment(props.payload[0].payload.time).format('ddd - HH:mm')\r\n\r\n        var tempTemp = null;\r\n        var tempTempColor = \"#000\"\r\n        var tempFanPower = null;\r\n        var tempFanSpdColor = \"#000\"\r\n        var tempHumidity = null;\r\n        var tempHumidityColor = \"#000\"\r\n        var tempHumidifierPower = null;\r\n        var tempHumiPwrColor = \"#000\"\r\n\r\n        rawContent.forEach((line) => {\r\n            if (line.dataKey === \"cTemp\") {\r\n                tempTempColor = line.stroke\r\n                tempTemp = rawContent[0].payload.cTemp\r\n            }\r\n\r\n            if (line.dataKey === \"fanSpeed\") {\r\n                tempFanSpdColor = line.stroke\r\n                tempFanPower = rawContent[0].payload.fanSpeed\r\n            }\r\n\r\n            if (line.dataKey === \"humidity\") {\r\n                tempHumidityColor = line.stroke\r\n                tempHumidity = rawContent[0].payload.humidity\r\n            }\r\n\r\n            if (line.dataKey === \"humiPower\") {\r\n                tempHumiPwrColor = line.stroke\r\n                tempHumidifierPower = rawContent[0].payload.humiPower\r\n            }\r\n        })\r\n\r\n        return (\r\n            <div className=\"Grow-Details-Graph-Tooltip\">\r\n                <div>{readableTime}</div>\r\n\r\n                {(() => {\r\n                    if (tempTemp) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempTempColor }}>TEMP: {tempTemp}°C </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempFanPower) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempFanSpdColor }}>FAN-PWR: {tempFanPower}% </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempHumidity) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempHumidityColor }}>HUMID: {tempHumidity}% RH </div>\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (tempHumidifierPower) {\r\n                        return <div className=\"Grow-Details-Graph-Tooltip-Data\" style={{ color: tempHumiPwrColor }}>HUM-PWR: {tempHumidifierPower}% </div>\r\n                    }\r\n                })()}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var renderDayGraph = null\r\n        if (this.state.data && this.state.data[0]) {\r\n            if (this.props.parentSize) {\r\n                var xSize = Math.floor(this.props.parentSize[0] * 0.95)\r\n                var ySize = Math.floor(this.props.parentSize[1] * 0.9)\r\n\r\n                console.log(\"WOW GraphSensorsTest graph size:\")\r\n                console.log(xSize + \", \" + ySize)\r\n                console.log(\"WOW GraphSensorsTest datalength at render:\")\r\n                console.log(this.state.data.length)\r\n\r\n                renderDayGraph = (\r\n                    <LineChart width={xSize} height={ySize} data={this.state.data}>\r\n                        <Line type=\"monotone\" dataKey=\"cTemp\" stroke=\"#ca2014\" dot={false} />\r\n                        <Line type=\"monotone\" dataKey=\"fanSpeed\" stroke=\"#db5e24\" dot={false} />\r\n                        <Line type=\"monotone\" dataKey=\"humidity\" stroke=\"#387d14\" dot={false} />\r\n                        <Line type=\"monotone\" dataKey=\"humiPower\" stroke=\"#8884d8\" dot={false} />\r\n                        <XAxis\r\n                            dataKey=\"time\"\r\n                            type=\"number\"\r\n                            domain={[new Date(this.state.data[0].time).getTime(), new Date(this.state.data[this.state.data.length - 1].time).getTime()]}\r\n                            tickFormatter={(unixTime) => moment(unixTime).format('HH:mm - MMM Do')} />\r\n                        <YAxis />\r\n                        <Tooltip content={this.renderTooltip} />\r\n                    </LineChart>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n\r\n\r\n            <div className=\"Chart-Container\">\r\n                {renderDayGraph}\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GraphSensorsTest;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\n\r\nimport GraphSensorsTest from '../main-content/Graphs/GraphSensorsTest.js'\r\n\r\n\r\nclass GrowGraphsTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            elementSize: [800, 400],\r\n            growDeprecate: null\r\n        };\r\n\r\n        this.graphSizeUpdated = 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this._ismounted === false) {\r\n            return;\r\n        }\r\n\r\n        var dateNow = new Date()\r\n        if (((this.state.elementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]) && ((dateNow.getTime() - this.graphSizeUpdated) > 500))) {\r\n            var tempSize = [this.divRef.clientWidth, this.divRef.clientHeight]\r\n\r\n            if (tempSize !== this.state.elementSize) {\r\n                this.setState({ elementSize: tempSize });\r\n                this.graphSizeUpdated = dateNow.getTime();\r\n            }\r\n        }\r\n\r\n        if (this.props.growDeprecate) {\r\n            if (this.state.growDeprecate !== this.props.growDeprecate) {\r\n                this.setState({ growDeprecate: this.props.growDeprecate });\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id=\"Grow-Details-Graphs-Page\" ref={element => this.divRef = element}>\r\n                <GraphSensorsTest parentSize={this.state.elementSize} growDeprecate={this.props.growDeprecate} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowGraphsTest;\r\n","import React, { Component } from 'react';\r\n\r\nimport '../../styles/App.css';\r\n\r\n\r\nclass AppBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    openJournals = () => {\r\n        this.props.setMainContent('journals')\r\n    }\r\n\r\n    openGrows = () => {\r\n        this.props.setMainContent('grows')\r\n    }\r\n\r\n    // Replace with a setGrow \r\n    openGanjaGrove = () => {\r\n        this.props.openGanjaGrove()\r\n    }\r\n    openVegger = () => {\r\n        this.props.openVegger()\r\n    }\r\n\r\n    setGrow = (ev) => {\r\n        this.props.setGrowByID(ev.target.dataset.value)\r\n    }\r\n\r\n    //TODO: why is this here (also in App.js)?\r\n    handleSignOut = () => {\r\n        this.firebase.auth.signOut().then(function () {\r\n            // Sign-out successful.\r\n            console.log(`signed out`)\r\n            window.location.reload();\r\n        }).catch(function (error) {\r\n            // An error happened.\r\n            console.log(`Error signing out: ${error}`)\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        var renderedLiveGrowButtons = null;\r\n        if (this.props.userGrows !== null) {\r\n            renderedLiveGrowButtons = this.props.userGrows.map((grow) => {\r\n\r\n                var liveButtonData = null\r\n                if (this.props.liveGrowData[grow.id]) {\r\n                    liveButtonData = this.props.liveGrowData[grow.id]\r\n                }\r\n\r\n                var brokenName = grow.name.split(\" \")\r\n                var acroName = \"\"\r\n                brokenName.forEach((piece) => {\r\n                    acroName += piece.charAt(0)\r\n                })\r\n\r\n                return (\r\n                    <div className=\"App-Bar-Button-Grow\" key={grow.id} onClick={this.setGrow} data-value={grow.id}>\r\n                        <div className=\"App-Bar-Button-Grow-Name\" data-value={grow.id}>\r\n                            {acroName}\r\n                        </div>\r\n                        {(() => {\r\n                            if (liveButtonData) {\r\n                                return (\r\n                                    <div ref={this.flowerTempRef} className=\"App-Bar-Button-Grow-Temp\" data-value={grow.id}>\r\n                                        {Math.round(liveButtonData.cTemp * 10) / 10}°C\r\n                                </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n\r\n                        {(() => {\r\n                            if (liveButtonData) {\r\n                                return (\r\n                                    <div ref={this.flowerHumidityRef} className=\"App-Bar-Button-Grow-Humidity\" data-value={grow.id}>\r\n                                        {Math.round(liveButtonData.humidity * 10) / 10}%\r\n                                </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n\r\n        return (\r\n\r\n            <div id=\"App-Bar\" >\r\n                <div id=\"App-Bar-Logo\" onClick={this.openGrows}>\r\n                    grovv\r\n                </div>\r\n\r\n                {renderedLiveGrowButtons}\r\n\r\n                <div className=\"App-Bar-Button\" onClick={this.openJournals}>\r\n                    JRNLS\r\n                </div>\r\n\r\n                <div className=\"App-Bar-Filler-Div\"></div>\r\n                <div className=\"App-Bar-Logout-Button\" onClick={this.handleSignOut}>\r\n                    &#10162;\r\n                </div>\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppBar;\r\n","import React, { Component } from 'react';\r\nimport '../styles/App.css';\r\n\r\n\r\nimport Firebase from '../config/firebaseConfig.js'\r\n\r\nimport DbHelper from './_utils/DbHelper.js'\r\n\r\n\r\n// Auth\r\nimport SignIn from './auth/SignIn.js'\r\nimport SignUp from './auth/SignUp.js'\r\n\r\n// Main Content\r\nimport FeedChart from './main-content/FeedChart/FeedChart.js'\r\nimport GrowConfig from './main-content/GrowConfig/GrowConfig.js'\r\nimport GrowJournal from './main-content/GrowJournal/GrowJournal.js'\r\nimport GrowPage from './main-content/GrowPage/GrowPage.js'\r\n//import GraphSensors from './main-content/Graphs/GraphSensors.js'\r\nimport GrowGraphsTest from './graphs/GrowGraphsTest.js'\r\n\r\n\r\n// Top Bar\r\nimport AppBar from './app-bar/AppBar.js'\r\n\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmainContent: 'signin', // signin, signup, main, chart, config, journal, grows, graphs, etc.\r\n\t\t\tUID: null,\r\n\t\t\tusername: '',\r\n\t\t\tURL_livecam: null,\r\n\t\t\tURL_vegger_livecam: null,\r\n\t\t\tjournalID: null,\r\n\t\t\tcurrentGrow: null,\r\n\t\t\tgrowID: null, //todo: remove, use currentGrow\r\n\r\n\t\t\tuserGrows: [],\r\n\t\t\tuserJournals: [],\r\n\t\t\tliveGrowData: [],\r\n\r\n\t\t\tthreeDayData: []\r\n\t\t};\r\n\r\n\t\tthis.dbHelper = new DbHelper();\r\n\r\n\t\tthis.firebase = new Firebase();\r\n\r\n\t\tthis.firebase.auth.onAuthStateChanged((user) => {\r\n\t\t\tif (user) {\r\n\t\t\t\tthis.setState({ UID: user.uid });\r\n\t\t\t\tthis.getUsername();\r\n\r\n\t\t\t\tthis.dbHelper.getUserGrows(this.setUserGrows)\r\n\t\t\t\tthis.dbHelper.getUserJournals(this.setUserJournals)\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tsetUserGrows = (userGrows) => {\r\n\t\tconsole.log(\"USER GROWS!\")\r\n\t\tconsole.log(userGrows)\r\n\r\n\t\tuserGrows.forEach((grow) => {\r\n\t\t\tthis.dbHelper.getThreeDayData(grow.id, this.setThreeDayData)\r\n\t\t})\r\n\r\n\t\tthis.setState({ userGrows: userGrows });\r\n\r\n\t\tthis.dbHelper.getLiveGrowData(userGrows, this.setLiveGrowData)\r\n\t}\r\n\r\n\tsetUserJournals = (userJournals) => {\r\n\t\tthis.setState({ userJournals: userJournals });\r\n\t}\r\n\r\n\tsetLiveGrowData = (dataID, newGrowData) => {\r\n\t\tif (newGrowData === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar currentData = this.state.liveGrowData\r\n\t\tcurrentData[dataID.toString()] = newGrowData\r\n\r\n\t\tthis.setState({ liveGrowData: currentData });\r\n\t}\r\n\r\n\tsetThreeDayData = (growDeprecate, day, data) => {\r\n\t\tvar previousData = this.state.threeDayData\r\n\r\n\t\tvar tempThreeDayData = []\r\n\r\n\t\tday = parseInt(day)\r\n\r\n\t\tif (previousData[growDeprecate]) {\r\n\t\t\ttempThreeDayData = previousData[growDeprecate]\r\n\t\t}\r\n\r\n\t\tif (tempThreeDayData[day]) {\r\n\t\t\ttempThreeDayData[day] = null\r\n\t\t}\r\n\r\n\t\ttempThreeDayData[day] = data\r\n\r\n\t\tpreviousData[growDeprecate] = tempThreeDayData\r\n\r\n\t\t// console.log(\"Set3Day ########################### length: \" + data.length)\r\n\t\t// console.log(previousData)\r\n\r\n\t\tthis.setState({ threeDayData: previousData });\r\n\t}\r\n\r\n\r\n\tgetUsername = () => {\r\n\t\t// Users location in tree\r\n\t\tvar ref = this.firebase.db.ref().child('users').child(this.state.UID)\r\n\r\n\t\tref.on(\"value\", (snapshot) => {\r\n\t\t\tthis.setState({ username: snapshot.val().username });\r\n\t\t}, function (errorObject) {\r\n\t\t\tconsole.log(\"The username read failed: \" + errorObject.code);\r\n\t\t});\r\n\r\n\t}\r\n\r\n\thandleSignOut = () => {\r\n\t\tthis.setState({\r\n\t\t\tUID: null,\r\n\t\t\tURL_livecam: null,\r\n\t\t});\r\n\t\tthis.firebase.auth.signOut().then(function () {\r\n\t\t\t// Sign-out successful.\r\n\t\t\tconsole.log(`signed out`)\r\n\t\t}).catch(function (error) {\r\n\t\t\t// An error happened.\r\n\t\t\tconsole.log(`Error signing out: ${error}`)\r\n\t\t});\r\n\t}\r\n\r\n\tsetMainContent = (setValue, id) => {\r\n\t\tthis.setState({\r\n\t\t\tmainContent: setValue,\r\n\t\t\tcurrentGrow: null,\r\n\t\t\tgrowID: id,\r\n\t\t\tjournalID: null\r\n\t\t});\r\n\t}\r\n\r\n\tsetGrowByID = (growID) => {\r\n\t\t// TODO: Send actual grow\r\n\t\tthis.setState({\r\n\t\t\tmainContent: 'grows',\r\n\t\t\tcurrentGrow: null,\r\n\t\t\tgrowID: growID\r\n\t\t});\r\n\r\n\t}\r\n\r\n\topenChart = () => {\r\n\t\tif (this.state.mainContent !== 'chart') {\r\n\t\t\tthis.setState({ mainContent: 'chart' });\r\n\t\t}\r\n\t}\r\n\r\n\teditChart = () => {\r\n\t\twindow.open('https://docs.google.com/spreadsheets/d/1i7EDfBIwj4eYU2LxyS02YwDDeNROcdgXjROKfzCtp60/edit?usp=sharing', 'sharer', 'toolbar=0,status=0,width=548,height=325');\r\n\t}\r\n\r\n\topenConfig = () => {\r\n\t\tif (this.state.mainContent !== 'config') {\r\n\t\t\tthis.setState({ mainContent: 'config' });\r\n\t\t}\r\n\t}\r\n\r\n\topenJournals = () => {\r\n\t\tif (this.state.mainContent !== 'journals') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmainContent: 'journals',\r\n\t\t\t\tjournalID: null\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tjournalID: null\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\topenGrows = () => {\r\n\t\tif (this.state.mainContent !== 'grows') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmainContent: 'grows',\r\n\t\t\t\tcurrentGrow: null\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentGrow: null\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tsetGrow = (grow) => {\r\n\t\tconsole.log(\"APP Setgrow\")\r\n\t\tconsole.log(grow)\r\n\t\tthis.setState({\r\n\t\t\tgrowID: null,\r\n\t\t\tcurrentGrow: grow\r\n\t\t});\r\n\t}\r\n\r\n\tsetJournalID = (journalID) => {\r\n\t\tconsole.log(\"APP SetJournalID\")\r\n\t\tconsole.log(journalID)\r\n\t\tthis.setState({\r\n\t\t\tmainContent: 'journals',\r\n\t\t\tjournalID: journalID\r\n\t\t});\r\n\t}\r\n\r\n\r\n\topenMainPageFromExternal = (page, id) => {\r\n\t\tconsole.log(\"todo: get rid of this system...\")\r\n\t\tconsole.log(page)\r\n\t\tswitch (page) {\r\n\t\t\tcase 'config':\r\n\t\t\t\tthis.configGrowID = id;\r\n\t\t\t\tthis.openConfig()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'feed':\r\n\t\t\t\tthis.openChart()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'edit-feed':\r\n\t\t\t\tthis.editChart()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'graphs':\r\n\t\t\t\tthis.openGraphs()\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.openGraphs()\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\topenGraphs = () => {\r\n\t\tthis.setState({\r\n\t\t\tmainContent: 'graphs',\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<header className=\"App-body\">\r\n\r\n\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\tif (this.state.UID) {\r\n\t\t\t\t\t\t\treturn <AppBar mainContent={this.state.mainContent} setGrowByID={this.setGrowByID} setMainContent={this.setMainContent} liveGrowData={this.state.liveGrowData} userGrows={this.state.userGrows} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})()}\r\n\r\n\t\t\t\t\t<div id=\"App-Inner-Body\">\r\n\r\n\r\n\t\t\t\t\t\t<div id=\"App-Body-Content\">\r\n\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\tif (this.state.UID) {\r\n\t\t\t\t\t\t\t\t\tswitch (this.state.mainContent) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'journals':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <GrowJournal setJournalID={this.setJournalID} journalID={this.state.journalID} userJournals={this.state.userJournals} />\r\n\t\t\t\t\t\t\t\t\t\tcase 'grows':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <GrowPage openMainPage={this.openMainPageFromExternal} setJournalID={this.setJournalID} setGrow={this.setGrow} grow={this.state.currentGrow} growID={this.state.growID} userGrows={this.state.userGrows} liveGrowData={this.state.liveGrowData} rawGrowData={this.state.threeDayData} />\r\n\t\t\t\t\t\t\t\t\t\tcase 'chart':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <FeedChart />\r\n\t\t\t\t\t\t\t\t\t\tcase 'config':\r\n\t\t\t\t\t\t\t\t\t\t\t// tODO: FIX\r\n\t\t\t\t\t\t\t\t\t\t\treturn <GrowConfig growID={this.configGrowID} />\r\n\t\t\t\t\t\t\t\t\t\tcase 'graphs':\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"Chart-Page\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* TODO REMOVE */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tflower 3 day\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<GrowGraphsTest growDeprecate={'-LdtfBTlG6Fgg-ADD8-b'} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvegger 3 day\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<GrowGraphsTest growDeprecate={'-LdtkOvSXRrm1zIZ6EOx'} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\treturn <GrowPage openMainPage={this.openMainPageFromExternal} setJournalID={this.setJournalID} setGrow={this.setGrow} grow={this.state.currentGrow} growID={this.state.growID} userGrows={this.state.userGrows} liveGrowData={this.state.liveGrowData} rawGrowData={this.state.threeDayData}/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tswitch (this.state.mainContent) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'signin':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <SignIn gotoSignUp={this.setMainContent} />;\r\n\t\t\t\t\t\t\t\t\t\tcase 'signup':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <SignUp gotoSignIn={this.setMainContent} />;\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\treturn <SignIn gotoSignUp={this.setMainContent} />;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})()}\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</header>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './js/serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}