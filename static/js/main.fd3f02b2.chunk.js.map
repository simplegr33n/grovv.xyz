{"version":3,"sources":["assets/corner-logo.png","config/firebaseConfig.js","App/_utils/DbHelper.js","App/auth/SignIn.js","App/auth/SignUp.js","App/main-content/GrowJournal/JournalAddEditModal.js","App/main-content/GrowJournal/FullImageModal.js","App/main-content/GrowJournal/JournalCreateModal.js","App/main-content/GrowJournal/JournalTimelineButton.js","App/main-content/GrowJournal/JournalBoxItem.js","App/main-content/GrowJournal/JournalEntry.js","App/main-content/GrowJournal/GrowJournal.js","App/main-content/GrowPage/GrowDataDisplay.js","App/main-content/Graphs/GraphSensorsBox.js","App/main-content/GrowPage/GrowBoxItem.js","App/main-content/Graphs/GraphSensors.js","App/main-content/GrowPage/GrowDetailsGraphs.js","App/main-content/GrowPage/GrowSettings.js","App/main-content/GrowPage/GrowDetailsPage.js","App/main-content/GrowPage.js","App/main-content/Graphs/AllGraph.js","App/main-content/AllGraphs.js","App/app-bar/AppBar.js","App/App.js","js/serviceWorker.js","index.js","assets/co2svg.svg","assets/tvoc-svg.svg"],"names":["module","exports","__webpack_require__","p","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","Object","classCallCheck","this","firebase","apps","length","initializeApp","db","database","auth","storage","DbHelper","userID","UID","setData","ref","child","on","snapshot","val","errorObject","console","log","code","u","uid","set","userGrows","forEach","grow","_this","id","growID","date","Date","year","getFullYear","toString","month","getMonth","days","tempDay","dy","getDate","i","staticTwoDayData","getTwoDaysAddedDays","day","includes","gChild","dataPoint","dataTime","time","getTime","tempCurrentData","sort","a","b","fullData","concat","dayData","update","_this2","userGrowIDs","sensors_live","key","setUserGrows","once","createdAt","journals","journalsList","keys","push","updatedAt","setUserJournals","journalID","setJournalEntries","tempEntriesList","datetime_true","tempDotsList","entry","datetime_short","tempDeepDotsList","dotDate","dotValue","journalName","openJournal","userRef","nowDate","name","previewImage","entryID","trueDate","title","content","growStage","postDate","images","closeModal","editDate","temptTrueDate","shortMonth","shortDateVar","published","grow_stage","datetime_post","datetime_edit","journal_id","jRef","file","setImages","storageRef","dateNow","metadata","contentType","type","put","then","getDownloadURL","url","urlSplit","split","thumbURL","refFromURL","delete","catch","error","SignIn","props","possibleConstructorReturn","getPrototypeOf","call","handleUsernameChange","event","setState","username","target","value","handlePasswordChange","password","handleSubmit","state","validateEmail","hideSigninFields","signInWithEmailAndPassword","errorCode","errorMessage","message","alert","SHOWFIELDS","showSigninFields","onAuthStateChanged","user","testEmail","test","String","toLowerCase","testPswd","react_default","createElement","onChange","onKeyPress","ev","enterSubmit","onClick","Component","SignUp","hideSignupFields","showSignupFields","validatePassword","createUserWithEmailAndPassword","handleGotoSignIn","gotoSignIn","postUserToFirebase","email","timestamp","userData","updates","JournalAddEditModal","handleTitleChange","handleContentChange","cancelModal","deleteAllAddedImages","saveEntry","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","dbHelper","saveJournalEntry","stop","displayFullImage","handleImageUpload","_ref2","_callee2","_context2","t0","_x","apply","arguments","tempImages","tempAddedImages","addedImages","thumb","deleteImage","dataset","img","handleImageDelete","handleDateChange","dt","handleGrowStageChange","editPost","tempTrueDate","tempPostDate","tempContent","tempTitle","undefined","tempGrowStage","tempPostId","files","_this3","renderedThumbnails","map","image","className","alt","data-value","src","react_datepicker_min_default","selected","placeholder","es","onDrop","onImageDrop","bind","accept","multiple","_ref3","getRootProps","getInputProps","role","aria-label","FullImageModal","nextImage","fullSizeList","imageUrl","currentImage","previousImage","imageList","currentFullImage","tempFullSizeList","JournalCreateModal","handleJournalNameChange","setJournalID","createJournal","JournalTimelineButton","setEntries","entries","monthDayDate","timelineDate","idVar","charAt","toUpperCase","slice","isActiveEntry","currentEntryID","array","datetimeShortMD","dateString","toDateString","JournalBoxItem","journal","updatedAtDate","updatedAtHoursString","getHours","updatedAtMinutesString","getMinutes","JournalEntry","currentEntry","editEntryByID","prevProps","prevState","datetimeTrue","GrowJournal","watchEntries","watchJournalEntries","entriesList","dotsList","timelineEntries","timelineDots","displayEntries","addTimelineEntry","displayContent","timelineEntry","openFullImageModal","fullImageModalImages","openFullImage","handleJournalChange","openCreateJournalModal","testContent","_ismounted","renderedJournalOptions","userJournals","renderedUserJournals","GrowJournal_JournalBoxItem","renderedJournalEntries","GrowJournal_JournalEntry","renderedTimelineDots","dot","GrowJournal_JournalTimelineButton","GrowJournal_JournalAddEditModal","GrowJournal_FullImageModal","GrowJournal_JournalCreateModal","GrowDataDisplay","cTemp","humidity","liveData","sA1_Temp","Math","round","sA1_Humi","backgroundIndicator","GraphSensorsBox","componentDidUpdate","rawGrowData","gwID","rawData","data","processedData","processedPoint","renderTooltip","rawContent","payload","readableTime","moment","fromNow","tooltipItems","l","tIndex","indexOf","SENSORS","PID","style","color","stroke","dataKey","unit","getGraphData","renderDayGraph","parentSize","xSize","floor","ySize","es6","width","height","yAxisId","domain","tickFormatter","unixTime","format","hide","orientation","GrowBoxItem","componentDidMount","initGraphDimensions","componentWillUnmount","openGrow","checkActive","lastUpdateTime","difference","activeIndicatorStyle","graphElementSize","graphSizeUpdated","calcGraphDimensions","divRef","clientWidth","clientHeight","tempSize","lastUpdate","liveGrowData","GrowPage_GrowDataDisplay","element","Graphs_GraphSensorsBox","GraphSensors","growConfig","generateTickSourceArrays","rawRef","concatData","list","dataLength","processData","LIGHTS","m","subtract","lightsOnArray","lightsOffArray","off","add","createTickArray","tickRange","ticks","tempOnArray","tempOffArray","sourceArray","tick","lightBackgrounds","tickArray","window","displayWindow","now","listItems","activeLines","curSensor","paddingLeft","paddingRight","display","flexDirection","justifyContent","fontWeight","background","toggle1","toggle3","toggle12","toggle24","toggle72","displayTemp","displayFan","displayHumidity","displayHumidifier","lineItems","strokeWidth","thickness","vertical","horizontal","verticalFill","fillOpacity","fill","position","marginLeft","marginTop","fontSize","padding","backgroundColor","GrowDetailsGraphs","elementSize","Graphs_GraphSensors","GrowSettings","getConfig","_ref","getGrowConfig","setFetchedConfig","configObj","postConfig","setGrowConfig","refreshGrows","close","sensorMeanChange","e","tempConfig","sensor","_mean","parseFloat","sensorDeviationChange","_deviation","sensorWeightChange","sensorColorChange","sensorTypeChange","sensorNameChange","handleLightsOnChange","handleLightsOffChange","watchConfig","sensorSettingRows","userSelect","fontsize","maxHeight","wi_index_esm","co2svg","tvocSvg","defaultValue","maxLength","maxWidth","justifyItems","alignContent","zIndex","margin","border","cursor","overflowY","entry_default","clearIcon","GrowDetailsPage","dataLengthRef","processGrowData","TABLE_INIT","growData","lastLiveData","DAILY_HIGHS","DAILY_HIGHS_TIMES","DAILY_LOWS","DAILY_LOWS_TIMES","DAILY_AVGS","YEST_AVGS","DAILY_POINT_COUNT","YEST_POINT_COUNT","lastDayData","yesterdayData","SENSOR_PIDS","SENSORS_INIT","ACTIVE_INIT","ACTIVE_LINES","pid","yIndex","avg","toggleLine","currentTarget","getAttribute","tActiveLines","forceUpdate","openCloseSettings","SHOW_SETTINGS","sensorInfoRows","setOpacity","setPaddingTop","opacity","paddingTop","setIndicatorColor","visibility","marginBottom","flex","bs_index_esm","GrowPage_GrowDetailsGraphs","GrowPage_GrowSettings","GrowPage","openMainPage","page","openCreateGrowModal","setGrow","renderedGrowBoxes","GrowPage_GrowBoxItem","GrowPage_GrowDetailsPage","AllGraph","growIDs","newArrayLengths","valChanged","DataLengthChecks","subConcatData","superData","combinedProcessedData","subProcessedData","subCombined","reducerValue","_i","_Object$entries","slicedToArray","toggleWindow","tID","tPID","PREFS","GRAPHS","showSensors","g","s","firstPointTime","lastPointTime","timeWindow","defaultWindow","dataBlob","lineKey","connectNulls","AllGraphs","growActiveLines","tempIdentifier","groupedSensors","tempUser","setUserPrefs","tWindow","setFirebaseUser","dataVal","Graphs_AllGraph","threeDayData","AppBar","openJournals","setMainContent","openGraphs","openGrows","handleSignOut","renderedLiveGrowButtons","liveButtonData","brokenName","acroName","piece","flowerTempRef","flowerHumidityRef","cornerLogo","ai_index_esm","App","setUser","setFirebaseUserPrefs","newGrowConfig","tempGrow","currentGrow","getThreeDayData","setThreeDayData","getLiveGrowData","setLiveGrowData","dataID","newGrowData","currentData","growDeprecate","previousData","tempThreeDayData","parseInt","getUsername","signOut","location","reload","setValue","mainContent","getUser","getUserGrows","getUserJournals","app_bar_AppBar","main_content_GrowJournal_GrowJournal","main_content_AllGraphs","main_content_GrowPage","auth_SignIn","gotoSignUp","auth_SignUp","Boolean","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd3f02b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corner-logo.5ece3763.png\";","import firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport 'firebase/auth' \r\nimport 'firebase/storage' \r\n\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyBJuUseKfGN_MjNEWg722WY1FsO2xZ1AuE\",\r\n    authDomain: \"grovv-22cbd.firebaseapp.com\",\r\n    databaseURL: \"https://grovv-22cbd.firebaseio.com\",\r\n    projectId: \"grovv-22cbd\",\r\n    storageBucket: \"grovv-22cbd.appspot.com\",\r\n    messagingSenderId: \"30272449560\"\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config);\r\n        }\r\n\r\n        this.db = firebase.database();\r\n        this.auth = firebase.auth();\r\n        this.storage = firebase.storage();\r\n    }\r\n}\r\n\r\nexport default Firebase;\r\n","import Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass DbHelper {\r\n\r\n    constructor() {\r\n\r\n        this.firebase = new Firebase();\r\n\r\n        this.userID = 'wR4QKyZ77mho1fL0FQWSMBQ170S2' // Hardcoded to bradyn's for now\r\n\r\n    }\r\n\r\n    // ............ //\r\n    //    USER      //\r\n    // ............ //\r\n    // Get Reset Value\r\n    getUser(UID, setData) {\r\n\r\n        // Config data isResetting in firebase \r\n        var ref = this.firebase.db.ref().child('users').child(UID)\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            if (snapshot.val() === null) {\r\n                setData(false);\r\n                return;\r\n            }\r\n\r\n            setData(snapshot.val())\r\n\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"get user failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n\r\n    // Set Grow Config in firebase\r\n    setUser(u) {\r\n        var ref = this.firebase.db.ref().child('users').child(u.uid)\r\n        console.log(\"DBU\", u)\r\n        ref.set(u)\r\n    }\r\n\r\n\r\n\r\n    // .......... //\r\n    // LIVE DATA  //\r\n    // .......... //\r\n    // Get live data from firebase\r\n    // TODO: FIx when database is changed\r\n    async getLiveGrowData(userGrows, setData) {\r\n\r\n        userGrows.forEach((grow) => {\r\n            // Grow Live Data in firebase\r\n            var ref = this.firebase.db.ref().child('grow_data').child(this.userID).child(grow.id).child('live_data')\r\n\r\n            console.log(\"GROW GET DATA \" + grow.id)\r\n\r\n            ref.on('value', (snapshot) => {\r\n\r\n                console.log(grow.id + \" LIVE: \", snapshot.val())\r\n\r\n                setData(grow.id, snapshot.val())\r\n            }, function (errorObject) {\r\n                console.log(\"follow \" + grow + \" live failed: \" + errorObject.code);\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // ....... //\r\n    // GRAPHS  //\r\n    // ....... //\r\n\r\n    // Get 3 day data window from firebase\r\n    async getThreeDays(growID, setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('grow_data').child(this.userID).child(growID).child('sensor_data')\r\n\r\n\r\n        var date = new Date();\r\n        var year = date.getFullYear().toString()\r\n        var month = (date.getMonth() + 1).toString()\r\n        if (month.length < 2) {\r\n            month = '0' + month\r\n        }\r\n\r\n        var days = []\r\n        var tempDay = null\r\n        var dy = date.getDate()\r\n        if ((dy - 2) >= 1) {\r\n            tempDay = dy - 2\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if ((dy - 1) >= 1) {\r\n            tempDay = dy - 1\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if (dy.toString().length < 2) {\r\n            dy = '0' + dy\r\n        }\r\n        days[days.length] = dy\r\n\r\n        var i = 0;\r\n\r\n        var staticTwoDayData = []\r\n        var getTwoDaysAddedDays = []\r\n\r\n        days.forEach((day) => {\r\n            if (day.toString() === dy.toString()) {\r\n                return;\r\n            }\r\n\r\n            ref.child(year).child(month).child(day).on(\"value\", (snapshot) => {\r\n                if (!getTwoDaysAddedDays.includes(day)) {\r\n                    getTwoDaysAddedDays[getTwoDaysAddedDays.length] = day\r\n                } else {\r\n                    return;\r\n                }\r\n                snapshot.forEach((child) => {\r\n                    child.forEach((gChild) => {\r\n                        i++;\r\n                        if (i % 10 === 0 || i === 0) {\r\n                            var dataPoint = gChild.val()\r\n                            var dataTime = new Date(dataPoint.time).getTime()\r\n                            dataPoint.time = dataTime\r\n                            staticTwoDayData[staticTwoDayData.length] = dataPoint;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                if ((getTwoDaysAddedDays.length === days.length - 1)) {\r\n\r\n\r\n                    ref.child(year).child(month).child(dy).on(\"value\", (snapshot) => {\r\n\r\n                        var tempCurrentData = [];\r\n\r\n\r\n                        snapshot.forEach((child) => {\r\n                            child.forEach((gChild) => {\r\n                                i++;\r\n                                if (i % 10 === 0 || i === 0) {\r\n                                    var dataPoint = gChild.val()\r\n                                    var dataTime = new Date(dataPoint.time).getTime()\r\n                                    dataPoint.time = dataTime\r\n                                    tempCurrentData[tempCurrentData.length] = dataPoint;\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        tempCurrentData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n                        console.log(\"DBHELPER Test 3-day Datapoints to return... grow:\" + growID)\r\n                        console.log(tempCurrentData.length);\r\n                        console.log(tempCurrentData[0]);\r\n                        console.log(tempCurrentData[tempCurrentData.length - 1]);\r\n\r\n                        var fullData = staticTwoDayData.concat(tempCurrentData);\r\n\r\n                        fullData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n\r\n                        setData(fullData);\r\n\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Get 3 day data window from firebase\r\n    getThreeDayData(growID, setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('grow_data').child(this.userID).child(growID).child('sensor_data')\r\n\r\n\r\n        var date = new Date();\r\n        var year = date.getFullYear().toString()\r\n        var month = (date.getMonth() + 1).toString()\r\n        if (month.length < 2) {\r\n            month = '0' + month\r\n        }\r\n\r\n        var days = []\r\n        var tempDay = null\r\n        var dy = date.getDate()\r\n        if ((dy - 2) >= 1) {\r\n            tempDay = dy - 2\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if ((dy - 1) >= 1) {\r\n            tempDay = dy - 1\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if (dy.toString().length < 2) {\r\n            dy = '0' + dy\r\n        }\r\n        days[days.length] = dy\r\n\r\n        days.forEach((day) => {\r\n\r\n            ref.child(year).child(month).child(day).on(\"value\", (snapshot) => {\r\n\r\n                // TODO: on child added listener instead, this this var stored outside the \"on()\" event\r\n                var dayData = []\r\n\r\n                snapshot.forEach((child) => {\r\n                    child.forEach((gChild) => {\r\n                        var dataPoint = gChild.val()\r\n\r\n                        dataPoint.time = dataPoint.time * 1000\r\n\r\n                        dayData[dayData.length] = dataPoint;\r\n                    });\r\n                });\r\n\r\n                dayData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n                setData(growID, day, dayData);\r\n            });\r\n        });\r\n    }\r\n\r\n    // ............ //\r\n    // GROW CONFIG  //\r\n    // ............ //\r\n    // Get Reset Value\r\n    getGrowConfig(growID, setData) {\r\n\r\n        // Config data isResetting in firebase \r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            if (snapshot.val() === null) {\r\n                setData(false);\r\n                return;\r\n            }\r\n\r\n            setData(snapshot.val())\r\n\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch isResetting failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n\r\n    // Set Grow Config in firebase\r\n    setGrowConfig(growID, config) {\r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config')\r\n        ref.update(config)\r\n    }\r\n\r\n\r\n    // .................. //\r\n    // GROW CONFIG RESET  //\r\n    // .................. //\r\n\r\n    // Get Reset Value\r\n    getResetValue(growID, setData) {\r\n\r\n        // Config data isResetting in firebase \r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config').child('isResetting')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            if (snapshot.val() === null) {\r\n                setData(false);\r\n                return;\r\n            }\r\n\r\n            setData(snapshot.val())\r\n\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch isResetting failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // Get Reset Value\r\n    resetGrow(growID) {\r\n        // Config data isResetting in firebase \r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config').child('isResetting')\r\n\r\n        ref.set(true)\r\n    }\r\n\r\n\r\n\r\n    // ........... //\r\n    // GROW PAGE   //\r\n    // ........... //\r\n\r\n    // Get live data from firebase\r\n    getUserGrows(setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('users').child(this.userID).child('grows')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var userGrowIDs = [];\r\n\r\n            snapshot.forEach((child) => {\r\n                if (!child.val().sensors_live) {\r\n                    userGrowIDs[userGrowIDs.length] = child.key\r\n                }\r\n            });\r\n\r\n            var setUserGrows = []\r\n\r\n            userGrowIDs.forEach((key) => {\r\n                var growRef = this.firebase.db.ref().child('grows').child(this.userID).child(key)\r\n\r\n                growRef.once('value', (snapshot) => {\r\n\r\n                    if (!setUserGrows.includes(snapshot.val())) {\r\n                        setUserGrows[setUserGrows.length] = snapshot.val()\r\n                    }\r\n\r\n                    setUserGrows.sort((a, b) => (a.createdAt > b.createdAt) ? 1 : -1)\r\n\r\n                    setData(setUserGrows)\r\n\r\n                }, function (errorObject) {\r\n                    console.log(\"watch user grows grow failed: \" + errorObject.code);\r\n                });\r\n            })\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch user grows failed: \" + errorObject.code);\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    // ............ //\r\n    // GROW JRNLS  //\r\n    // ............ //\r\n\r\n    // Get live data from firebase\r\n    getLinkedJournals(journals, setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('users').child(this.userID).child('journals')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var journalsList = [];\r\n\r\n            snapshot.forEach((child) => {\r\n                if (journals) {\r\n                    Object.keys(journals).forEach(function (key) {\r\n                        if (child.val().id === key) {\r\n                            journalsList.push(child.val())\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            journalsList.sort((a, b) => (a.updatedAt < b.updatedAt) ? 1 : -1)\r\n\r\n            setData(journalsList)\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"GrowDetails watch user journals failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // ............ //\r\n    // WATCH JRNLS  //\r\n    // ............ //\r\n\r\n    // Watch Journals\r\n    getUserJournals(setUserJournals) {\r\n        var ref = this.firebase.db.ref().child('users').child(this.userID).child('journals')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var journalsList = [];\r\n\r\n            snapshot.forEach((child) => {\r\n                journalsList.push(child.val())\r\n            });\r\n\r\n            console.log(\"Journals List: \", journalsList)\r\n\r\n            journalsList.sort((a, b) => (a.updatedAt < b.updatedAt) ? 1 : -1)\r\n\r\n            setUserJournals(journalsList)\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch user journals failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // Watch Entries\r\n    watchJournalEntries(journalID, setJournalEntries) {\r\n\r\n        var ref = this.firebase.db.ref().child('journals').child(this.userID).child(journalID).child('entries')\r\n\r\n        console.log('watchin... ' + journalID)\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var tempEntriesList = []\r\n            snapshot.forEach((child) => {\r\n                tempEntriesList.push(child.val())\r\n            });\r\n\r\n            tempEntriesList.sort((a, b) => (a.datetime_true > b.datetime_true) ? 1 : -1)\r\n\r\n            var tempDotsList = [];\r\n            tempEntriesList.forEach((entry) => {\r\n                if (!tempDotsList.includes(entry.datetime_short)) {\r\n                    tempDotsList[tempDotsList.length] = entry.datetime_short;\r\n                }\r\n            });\r\n\r\n            var tempDeepDotsList = [];\r\n            tempDotsList.forEach((dotDate) => {\r\n                var dotValue = []\r\n                tempEntriesList.forEach((entry) => {\r\n                    if (dotDate === entry.datetime_short) {\r\n                        dotValue[dotValue.length] = entry;\r\n                    }\r\n                });\r\n\r\n                tempDeepDotsList[tempDeepDotsList.length] = dotValue;\r\n            });\r\n\r\n            setJournalEntries(tempEntriesList, tempDeepDotsList)\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"follow journal failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // ............ //\r\n    // JRNL CREATE  //\r\n    // ............ //\r\n\r\n    // Get live data from firebase\r\n    async createJournal(journalName, openJournal) {\r\n        // ref for actual journal\r\n        var ref = this.firebase.db.ref().child('journals').child(this.userID).push()\r\n        // user object ref to journal key\r\n        var userRef = this.firebase.db.ref().child('users').child(this.userID).child('journals').child(ref.key)\r\n\r\n        var journalID = ref.key\r\n        var nowDate = new Date()\r\n\r\n        ref.update({ 'id': journalID, 'name': journalName, 'updatedAt': nowDate.getTime(), 'createdAt': nowDate.getTime(), 'previewImage': 'https://via.placeholder.com/160x120?text=NO+PREVIEW' })\r\n        userRef.update({ 'id': journalID, 'name': journalName, 'updatedAt': nowDate.getTime(), 'createdAt': nowDate.getTime(), 'previewImage': 'https://via.placeholder.com/160x120?text=NO+PREVIEW' })\r\n\r\n        openJournal(journalID)\r\n    }\r\n\r\n\r\n    // ................ //\r\n    // SAVE JRNL ENTRY  //\r\n    // ................ //\r\n\r\n    // Get live data from firebase\r\n    saveJournalEntry(journalID, entryID, trueDate, title, content, growStage, postDate, images, closeModal) {\r\n        // Journal data in firebase // TODO scalable.\r\n        var ref = this.firebase.db.ref().child('journals').child(this.userID).child(journalID).child('entries')\r\n\r\n        var editDate = new Date().getTime()\r\n\r\n        var temptTrueDate = trueDate\r\n        var shortMonth = (temptTrueDate.getMonth() + 1) + \"-\"\r\n        if (shortMonth.length === 2) {\r\n            shortMonth = \"0\" + shortMonth;\r\n        }\r\n        var shortDateVar = shortMonth + temptTrueDate.getDate() + \"-\" + temptTrueDate.getFullYear()\r\n\r\n        if (!entryID) {\r\n            // ref for actual journal\r\n            var refPush = ref.push()\r\n            entryID = refPush.key\r\n        }\r\n\r\n        if (!postDate) {\r\n            postDate = new Date()\r\n        }\r\n\r\n        if (!trueDate) {\r\n            trueDate = new Date()\r\n        }\r\n\r\n\r\n        ref.child(entryID).update({\r\n            'id': entryID,\r\n            'title': title,\r\n            'published': true,\r\n            'content': content,\r\n            'grow_stage': growStage,\r\n            'datetime_post': postDate.getTime(),\r\n            'datetime_edit': editDate,\r\n            'datetime_true': trueDate.getTime(),\r\n            'datetime_short': shortDateVar,\r\n            'journal_id': journalID,\r\n            'images': images\r\n        })\r\n\r\n        console.log('set journal entry ' + entryID)\r\n\r\n        // update updatedAt\r\n        var jRef = this.firebase.db.ref().child('journals').child(this.userID).child(journalID)\r\n        var userRef = this.firebase.db.ref().child('users').child(this.userID).child('journals').child(journalID)\r\n        var nowDate = new Date()\r\n        jRef.child('updatedAt').set(nowDate.getTime())\r\n        userRef.child('updatedAt').set(nowDate.getTime())\r\n\r\n\r\n        closeModal(entryID);\r\n    }\r\n\r\n    // .................. //\r\n    // JRNL ENTRY IMAGES  //\r\n    // .................. //\r\n\r\n    // Upload Image\r\n    async handleImageUpload(file, setImages) {\r\n        // Get storage reference and push file blob \r\n        var storageRef = this.firebase.storage.ref().child('journals').child(this.userID);\r\n\r\n        console.log(\"filename:\" + file.name)\r\n\r\n        var dateNow = new Date()\r\n\r\n        const metadata = { contentType: file.type };\r\n        const storageTask = storageRef.child(dateNow.getTime() + file.name).put(file, metadata);\r\n        storageTask\r\n            .then(snapshot => snapshot.ref.getDownloadURL())\r\n            .then(url => {\r\n                // Create thumb url from url (thumbs automatically created via cloud function on upload)\r\n                var urlSplit = url.split(\"%2F\")\r\n                var thumbURL = urlSplit[0] + \"%2F\" + urlSplit[1] + \"%2Fthumb_\" + urlSplit[2]\r\n\r\n                // URL AND THUMBURL\r\n                setImages(url, thumbURL)\r\n\r\n            })\r\n    }\r\n\r\n    // Delete Image\r\n    handleImageDelete(url) {\r\n        // Create a reference to the file to delete\r\n        var desertRef = this.firebase.storage.refFromURL(url)\r\n\r\n        // Delete the file\r\n        desertRef.delete().then(function () {\r\n            // File deleted successfully\r\n            console.log(\"deleted \" + url + \"successfully :)\")\r\n        }).catch(function (error) {\r\n            // Uh-oh, an error occurred!\r\n            console.log(\"delete \" + url + \"error :(\")\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default DbHelper;","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            SHOWFIELDS: false\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n\r\n        this.firebase.auth.onAuthStateChanged((user) => {\r\n            if (!user) {\r\n                this.showSigninFields();\r\n            }\r\n        });\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    validateEmail(testEmail) {\r\n        var emailRegex = /^\\S+@\\S+$/;\r\n        return emailRegex.test(String(testEmail).toLowerCase());\r\n    }\r\n\r\n    validatePassword(testPswd) {\r\n        var paswdRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;\r\n        return paswdRegex.test(String(testPswd));\r\n    }\r\n\r\n    enterSubmit() {\r\n        console.log(\"SignIn submit enter pressed\");\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        console.log(`SignUp submit enter pressed - username ${username}`);\r\n        if (!this.validateEmail(username)) {\r\n            alert('Bad email me thinks :(')\r\n            return;\r\n        }\r\n        // if (!this.validatePassword(password)) {\r\n        //     alert('Bad password. Must be 7-15 characters with at least 1 numeric digit and a special character.')\r\n        //     return;\r\n        // }\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.hideSigninFields();\r\n\r\n        this.firebase.auth.signInWithEmailAndPassword(username, password).catch(function (error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(`${errorCode}: ${errorMessage}`)\r\n            alert(`${errorCode}: ${errorMessage}`)\r\n            this.setState({ SHOWFIELDS: true });\r\n            return;\r\n            // ...\r\n        });\r\n\r\n        console.log(`username ${username} - logged in`)\r\n        // this.props.signIn();\r\n        return;\r\n\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        console.log(\"SignIn submit pressed\");\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        console.log(`SignUp submit pressed - username ${username}`);\r\n        if (!this.validateEmail(username)) {\r\n            alert('Bad email me thinks :(')\r\n            return;\r\n        }\r\n        // if (!this.validatePassword(password)) {\r\n        //     alert('Bad password. Must be 7-15 characters with at least 1 numeric digit and a special character.')\r\n        //     return;\r\n        // }\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.hideSigninFields();\r\n\r\n        this.firebase.auth.signInWithEmailAndPassword(username, password).catch(function (error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(`${errorCode}: ${errorMessage}`)\r\n            alert(`${errorCode}: ${errorMessage}`)\r\n            this.setState({ SHOWFIELDS: true });\r\n            return;\r\n            // ...\r\n        });\r\n\r\n        console.log(`username ${username} - logged in`)\r\n        // this.props.signIn();\r\n        return;\r\n\r\n    }\r\n\r\n    hideSigninFields = () => {\r\n        this.setState({ SHOWFIELDS: false });\r\n    }\r\n\r\n    showSigninFields = () => {\r\n        this.setState({ SHOWFIELDS: true });\r\n    }\r\n\r\n    // handleGotoSignUp = () => {\r\n    //     this.props.gotoSignUp(\"signup\");\r\n    //     console.log(\"Goto signup pressed\");\r\n    // }\r\n\r\n    render() {\r\n\r\n        if (this.state.SHOWFIELDS) {\r\n            return (\r\n                <div id=\"signin-div\">\r\n                    <h3>Sign In</h3>\r\n                    <div>\r\n                        Email:\r\n                        <input id=\"signin-username\" value={this.state.username} onChange={this.handleUsernameChange} />\r\n                    </div>\r\n                    <div>\r\n                        Password:\r\n                        <input type=\"password\" id=\"signin-password\" value={this.state.password} \r\n                        onChange={this.handlePasswordChange}\r\n                        onKeyPress={(ev) => {\r\n                            console.log(`Pressed keyCode ${ev.key}`);\r\n                            if (ev.key === 'Enter' || ev.key === '13') {\r\n                              // Do code here\r\n                              this.enterSubmit()\r\n                            }\r\n                          }} />\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"submit-signin-btn\" onClick={this.handleSubmit} > Sign in! </button>\r\n                    </div>\r\n                    {/* <div>\r\n                        <button id=\"goto-signup-btn\" onClick={this.handleGotoSignUp} > Sign up! </button>\r\n                    </div> */}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    One Moment...\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default SignIn;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            SHOWFIELDS: false\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n\r\n        this.firebase.auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                this.postUserToFirebase(user.uid, user.email);\r\n            } else {\r\n                this.showSignupFields();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    postUserToFirebase(uid, username) {\r\n        let date = new Date()\r\n        let timestamp = date.getTime()\r\n\r\n        // A user entry.\r\n        var userData = {\r\n            uid: uid,\r\n            username: username,\r\n            createdAt: timestamp,\r\n            updatedAt: timestamp,\r\n        };\r\n\r\n        // Write the new post's data simultaneously in the posts list and the user's post list.\r\n        var updates = {};\r\n        updates['/users/' + uid] = userData;\r\n\r\n        return this.firebase.db.ref().update(updates);\r\n    }\r\n\r\n    validateEmail(testEmail) {\r\n        var emailRegex = /^\\S+@\\S+$/;\r\n        return emailRegex.test(String(testEmail).toLowerCase());\r\n    }\r\n\r\n    validatePassword(testPswd) {\r\n        var paswdRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;\r\n        return paswdRegex.test(String(testPswd));\r\n    }\r\n\r\n    hideSignupFields = () => {\r\n        this.setState({ SHOWFIELDS: false });\r\n    }\r\n\r\n    showSignupFields = () => {\r\n        this.setState({ SHOWFIELDS: true });\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        console.log(`SignUp submit pressed - username ${username}`);\r\n        if (!this.validateEmail(username)) {\r\n            alert('Bad email me thinks :(')\r\n            this.setState({\r\n                username: ''\r\n            });\r\n            return;\r\n        }\r\n        if (!this.validatePassword(password)) {\r\n            alert('Bad password. Must be 7-15 characters with at least 1 numeric digit and a special character.')\r\n            this.setState({\r\n                password: ''\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.firebase.auth.createUserWithEmailAndPassword(username, password).catch(function (error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(`${errorCode}: ${errorMessage}`)\r\n            return;\r\n            // ...\r\n        });\r\n        \r\n        return;\r\n    }\r\n\r\n    handleGotoSignIn = () => {\r\n        this.props.gotoSignIn(\"signin\");\r\n        console.log(\"Goto signin pressed\");\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.SHOWFIELDS) {\r\n            return (\r\n                <div id=\"signup-div\">\r\n                    <h3>Sign Up</h3>\r\n                    <div>\r\n                        Email:\r\n                        <input id=\"signup-username\" value={this.state.username} onChange={this.handleUsernameChange} />\r\n                    </div>\r\n                    <div>\r\n                        Password:\r\n                        <input type=\"password\" id=\"signup-password\" value={this.state.password} onChange={this.handlePasswordChange} />\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"submit-signup-btn\" onClick={this.handleSubmit} > Sign up! </button>\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"goto-signin-btn\" onClick={this.handleGotoSignIn} > Sign in! </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    One Moment...\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Dropzone from 'react-dropzone';\r\n\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\n\r\nclass JournalAddEditModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            content: '',\r\n            images: [],\r\n            addedImages: [],\r\n            journalID: this.props.journalID,\r\n            postDate: new Date(),\r\n            trueDate: new Date(),\r\n            growStage: 'veg', // pre, seedling, veg, flower, post\r\n            published: false,\r\n            entryID: ''\r\n        };\r\n\r\n        this.dbHelper = new DbHelper();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.editPost) {\r\n\r\n            var tempTrueDate = null\r\n            if (this.props.editPost.datetime_true) {\r\n                tempTrueDate = new Date(this.props.editPost.datetime_true)\r\n            } else {\r\n                tempTrueDate = this.state.trueDate\r\n            }\r\n\r\n            var tempPostDate = null\r\n            if (this.props.editPost.datetime_post) {\r\n                tempPostDate = new Date(this.props.editPost.datetime_post)\r\n            } else {\r\n                tempPostDate = this.state.postDate\r\n            }\r\n  \r\n\r\n            var tempContent = this.props.editPost.content\r\n            var tempTitle = this.props.editPost.title\r\n            var tempImages = this.props.editPost.images\r\n            if (tempImages === null || tempImages === undefined) {\r\n                tempImages = []\r\n            }\r\n            var tempGrowStage = null\r\n            if (this.props.editPost.grow_stage) {\r\n                tempGrowStage = this.props.editPost.grow_stage\r\n            } else {\r\n                tempGrowStage = this.state.growStage\r\n            }\r\n\r\n            var tempPostId = this.props.editPost.id\r\n\r\n            this.setState({\r\n                title: tempTitle,\r\n                content: tempContent,\r\n                trueDate: tempTrueDate,\r\n                postDate: tempPostDate,\r\n                growStage: tempGrowStage,\r\n                images: tempImages,\r\n                entryID: tempPostId,\r\n                published: true\r\n            });\r\n        }\r\n    }\r\n\r\n    handleTitleChange = (event) => {\r\n        this.setState({ title: event.target.value });\r\n    }\r\n\r\n    handleContentChange = (event) => {\r\n        this.setState({ content: event.target.value });\r\n    }\r\n\r\n    cancelModal = () => {\r\n\r\n        this.deleteAllAddedImages();\r\n\r\n        this.props.closeModal(this.state.entryID);\r\n    }\r\n\r\n    saveEntry = async () => {\r\n        if (this.state.content === '' && this.state.images.length === 0) {\r\n            alert(\"Needs content or images!\")\r\n            return;\r\n        }\r\n        this.setState({ published: true });\r\n\r\n        var title = null;\r\n        if (this.state.title === '' || !this.state.title) {\r\n            title = ''\r\n        } else {\r\n            title = this.state.title\r\n        }\r\n\r\n        var content = null;\r\n        if (this.state.content === '' || !this.state.content) {\r\n            content = ''\r\n        } else {\r\n            content = this.state.content\r\n        }\r\n\r\n        this.dbHelper.saveJournalEntry(\r\n            this.state.journalID,\r\n            this.state.entryID,\r\n            this.state.trueDate,\r\n            title,\r\n            content,\r\n            this.state.growStage,\r\n            this.state.postDate,\r\n            this.state.images,\r\n            this.closeModal\r\n        )\r\n    }\r\n\r\n    closeModal = (entryID) => {\r\n        this.props.closeModal(entryID);\r\n    }\r\n\r\n    onImageDrop(files) {\r\n\r\n        console.log(files);\r\n\r\n        files.forEach((file) => {\r\n            this.handleImageUpload(file);\r\n            console.log(\"upload \" + file);\r\n        })\r\n\r\n    }\r\n\r\n    displayFullImage = () => {\r\n\r\n        console.log(\"JournalAddEditModal todo\")\r\n    }\r\n\r\n\r\n    handleImageUpload = async (file) => {\r\n        try {\r\n            await this.dbHelper.handleImageUpload(file, this.setImages)\r\n        } catch (e) {\r\n            console.log(e);\r\n            return 'caught ' + e\r\n        }\r\n    }\r\n\r\n    setImages = (url, thumbURL) => {\r\n        var tempImages = this.state.images;\r\n        var tempAddedImages = this.state.addedImages;\r\n        tempImages.push({ 'url': url, 'thumb': thumbURL })\r\n        tempAddedImages.push({ 'url': url, 'thumb': thumbURL })\r\n        this.setState({\r\n            images: tempImages,\r\n            addedImages: tempAddedImages\r\n        });\r\n    }\r\n\r\n    deleteImage = (ev) => {\r\n        let val = ev.target.dataset.value;\r\n        console.log(val);\r\n        console.log(this.state.images);\r\n\r\n        let tempImages = []\r\n\r\n        this.state.images.forEach((img) => {\r\n            if (img.url.toString() === val) {\r\n                this.handleImageDelete(img.url);\r\n                this.handleImageDelete(img.thumb)\r\n            } else {\r\n                tempImages.push(img)\r\n            }\r\n        })\r\n\r\n        this.setState({ images: tempImages });\r\n\r\n    }\r\n\r\n    deleteAllAddedImages = () => {\r\n        let imagesToDelete = this.state.addedImages;\r\n        // this.setState({ images: [] });\r\n\r\n        imagesToDelete.forEach((img) => {\r\n            this.handleImageDelete(img.url);\r\n            this.handleImageDelete(img.thumb);\r\n        })\r\n    }\r\n\r\n    handleImageDelete = (url) => {\r\n        this.dbHelper.handleImageDelete(url);\r\n    }\r\n\r\n    handleDateChange = (dt) => {\r\n        this.setState({ trueDate: dt });\r\n    }\r\n\r\n    handleGrowStageChange = (event) => {\r\n        this.setState({ growStage: event.target.value });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        console.log(\"true DATE!!\")\r\n        console.log(this.state.trueDate)\r\n\r\n        if (this.state.images) {\r\n            var renderedThumbnails = this.state.images.map((image, i) => <div className=\"Temp-Image-Div\"><img key={i} alt=\"grow img\" data-value={image.url} src={image.url} className=\"Journal-Entry-Preview-Thumbnail\" onClick={this.displayFullImage} /><div data-value={image.url} onClick={this.deleteImage} className=\"Delete-Image-Btn\">X</div></div>)\r\n        }\r\n\r\n        return (\r\n            <div id=\"Journal-Modal-Space\">\r\n                <div id=\"Journal-Edit-Entry-Modal\">\r\n                    <div id=\"Journal-Edit-Topline\">\r\n                        {/* DATE PICKER  */}\r\n                        <DatePicker\r\n                            id=\"journal-edit-datepicker\"\r\n                            selected={this.state.trueDate}\r\n                            onChange={this.handleDateChange} />\r\n                        {/* STAGE PICKER  */}\r\n                        <select id=\"journal-edit-grow-stage\" onChange={this.handleGrowStageChange} value={this.state.growStage}>\r\n                            <option value=\"post\">Post</option>\r\n                            <option value=\"flower\">Flower</option>\r\n                            <option value=\"veg\">Veg</option>\r\n                            <option value=\"seedling\">Seedling</option>\r\n                            <option value=\"pre\">Pre</option>\r\n                        </select>\r\n                        {/* TITLE INPUT  */}\r\n                        <input className=\"journal-modal-edit-title\" placeholder=\"enter title...\" value={this.state.title} onChange={this.handleTitleChange} />\r\n                    </div>\r\n                    {/* BODY INPUT  */}\r\n                    <textarea className=\"journal-modal-edit-body\" placeholder=\"enter body content...\" value={this.state.content} onChange={this.handleContentChange} />\r\n                    {/* BODY INPUT  */}\r\n                    <div className=\"journal-add-images-area\">\r\n\r\n                        <Dropzone\r\n                            className=\"journal-add-images-dropzone\"\r\n                            onDrop={this.onImageDrop.bind(this)}\r\n                            accept=\"image/*\"\r\n                            multiple={true}>\r\n                            {({ getRootProps, getInputProps }) => {\r\n                                return (\r\n                                    <div {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n                                        {\r\n                                            <p id=\"Image-Drop-Text\">Try dropping some <br></br> images <span role=\"img\" aria-label=\"camera\">&#x1f4f7;</span> here, <br></br>or click to <br></br> select files.</p>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        </Dropzone>\r\n\r\n                        {(() => {\r\n                            if (renderedThumbnails) {\r\n                                return (\r\n                                    <div className=\"Journal-Edit-Post-Images\">\r\n                                        {renderedThumbnails}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                    </div>\r\n\r\n                    <div id=\"journal-cancel-save-btns\">\r\n                        <button className=\"journal-cancel-btn\" onClick={this.cancelModal}>Cancel</button>\r\n                        <button className=\"journal-save-entry-btn\" onClick={this.saveEntry}>Save Entry</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalAddEditModal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nclass FullImageModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageList: this.props.imageList,\r\n            currentImage: this.props.currentFullImage,\r\n            fullSizeList: []\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.imageList) {\r\n            var tempFullSizeList = []\r\n            this.props.imageList.forEach((image) => {\r\n                tempFullSizeList[tempFullSizeList.length] = image.url\r\n            });\r\n            this.setState({ fullSizeList: tempFullSizeList });\r\n        }\r\n\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.closeModal('');\r\n    }\r\n\r\n    nextImage = () => {\r\n\r\n        this.state.fullSizeList.forEach((imageUrl, i) => {\r\n            if (imageUrl === this.state.currentImage) {\r\n                if (i < this.state.fullSizeList.length - 1) {\r\n                    this.setState({ currentImage: this.state.fullSizeList[i + 1] });\r\n                }\r\n                return;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    previousImage = () => {\r\n\r\n        this.state.fullSizeList.forEach((imageUrl, i) => {\r\n            if (imageUrl === this.state.currentImage) {\r\n                if (i > 0) {\r\n                    this.setState({ currentImage: this.state.fullSizeList[i - 1] });\r\n                }\r\n                return;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"FULLIMAGE MODAL!\")\r\n        console.log(this.state.imageList)\r\n        console.log(this.state.currentImage)\r\n\r\n        return (\r\n            <div id=\"Full-Image-Modal-Space\">\r\n                <img id=\"Full-Image-Image\" alt=\"full size\" src={this.state.currentImage} />\r\n                <button onClick={this.closeModal} id=\"Full-Image-Close-Btn\">x</button>\r\n                <button onClick={this.previousImage} id=\"Full-Image-Last-Btn\">&#8804;</button>\r\n                <button onClick={this.nextImage} id=\"Full-Image-Next-Btn\">&#8805;</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FullImageModal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\n\r\nclass JournalCreateModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            journalName: '',\r\n            journalID: this.props.journalID\r\n        };\r\n\r\n\t\tthis.dbHelper = new DbHelper();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleJournalNameChange = (event) => {\r\n        this.setState({ journalName: event.target.value });\r\n    }\r\n\r\n    cancelModal = () => {\r\n        this.props.setJournalID(null);\r\n    }\r\n\r\n    createJournal = async () => {\r\n        if (this.state.journalName === '') {\r\n            alert(\"Journal needs a name!\")\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await this.dbHelper.createJournal(this.state.journalName, this.openJournal)\r\n        } catch (e) {\r\n            console.log(e);\r\n            return 'caught ' + e\r\n        }\r\n\r\n    }\r\n\r\n    openJournal = (journalID) => {\r\n        this.setState({ journalID: journalID });\r\n        this.props.setJournalID(journalID);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"Journal-Modal-Space\">\r\n                <div id=\"Journal-Create-Modal\">\r\n                    {/* TITLE INPUT  */}\r\n                    <input className=\"journal-modal-journal-name\" placeholder=\"enter journal name...\" value={this.state.journalName} onChange={this.handleJournalNameChange} />\r\n                    <div id=\"journal-create-btns\">\r\n                        <button className=\"journal-cancel-create-btn\" onClick={this.cancelModal}>Cancel</button>\r\n                        <button className=\"journal-create-journal-btn\" onClick={this.createJournal}>Create Journal</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalCreateModal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nclass JournalTimelineButton extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            journalName: '',\r\n            journalID: this.props.journalID,\r\n            monthDayDate: ''\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.entry) {\r\n            var timelineDate = new Date(this.props.entry.datetime_true)\r\n            var shortMonth = (timelineDate.getMonth() + 1) + \"-\"\r\n            if (shortMonth.length === 2) {\r\n                shortMonth = \"0\" + shortMonth;\r\n            }\r\n            var shortDateVar = shortMonth + timelineDate.getDate()\r\n            this.setState({ monthDayDate: shortDateVar });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setEntries = () => {\r\n        this.props.setEntries(this.props.entries);\r\n    }\r\n\r\n    render() {\r\n        var growStage = this.props.entry.grow_stage\r\n        var idVar = \"Timeline-Dot-\" + growStage.charAt(0).toUpperCase() + growStage.slice(1)\r\n\r\n        // Check if the button corresponds to the active entry\r\n        var isActiveEntry = false;\r\n        if (this.props.currentEntryID === this.props.entry.id) {\r\n            isActiveEntry = true;\r\n        }\r\n\r\n        var array = (this.props.entry.datetime_short).split(\"-\");\r\n        var datetimeShortMD = array[0] + \"-\" + array[1]\r\n\r\n        var dateString = new Date(this.props.entry.datetime_true).toDateString()\r\n\r\n        var previewImage = null;\r\n        if (this.props.entries[0].images) {\r\n            previewImage = this.props.entries[0].images[0].thumb;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {(() => {\r\n                    if (isActiveEntry) {\r\n                        return (\r\n                            <div className=\"Timeline-Dot-Connector\">\r\n                                <div className=\"Dot-Connector-Text-rotate-180\">\r\n\r\n                                    {datetimeShortMD}\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()}\r\n                <button data-value={this.props.entries} id={idVar} className=\"Timeline-Dot\" onClick={this.setEntries}>\r\n\r\n                    {(() => {\r\n                        if (!isActiveEntry) {\r\n                            return (\r\n                                <div className=\"Dot-Preview-rotate-180\">\r\n                                    <div className=\"Dot-Preview-Window\">\r\n                                        <div className=\"Dot-Preview-Date-String\">\r\n                                            {dateString}\r\n                                        </div>\r\n\r\n                                        {(() => {\r\n                                            if (previewImage) {\r\n                                                return <img alt=\"journal preview\" src={previewImage} className=\"Preview-Image-Thumbnail\" onClick={this.displayFullImage} />\r\n                                            }\r\n                                        })()}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n\r\n\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalTimelineButton;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nclass JournalBoxItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            journal: this.props.journal\r\n        };\r\n\r\n    }\r\n\r\n    openJournal = () => {\r\n        this.props.openJournal(this.props.journal)\r\n    }\r\n\r\n    render() {\r\n\r\n        var createdAt = new Date(this.props.journal.createdAt).toDateString()\r\n\r\n        // TODO... simplify below.\r\n        var updatedAtDate = new Date(this.props.journal.updatedAt)\r\n        var updatedAtHoursString = updatedAtDate.getHours().toString()\r\n        if (updatedAtHoursString.length === 1) {\r\n            updatedAtHoursString = \"0\" + updatedAtHoursString\r\n        }\r\n        var updatedAtMinutesString = updatedAtDate.getMinutes().toString()\r\n        if (updatedAtMinutesString.length === 1) {\r\n            updatedAtMinutesString = \"0\" + updatedAtMinutesString\r\n        }\r\n        var updatedAt = updatedAtDate.toDateString() + \" - \" + updatedAtHoursString + \":\" + updatedAtMinutesString\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"Journal-Box-Item\" data-value={this.props.journal.id} onClick={this.openJournal}>\r\n                <div className=\"Journal-Box-Item-Main\">\r\n                    <div className=\"Journal-Box-Item-Header\">\r\n                        <div>\r\n                            {this.props.journal.name}\r\n                        </div>\r\n                        <div className=\"Journal-Box-Created\">\r\n                            updated: <i><b>{updatedAt}</b></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"Journal-Box-Info\">\r\n                        created: <i><b>{createdAt}</b></i>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <img alt=\"preview\" src={this.props.journal.previewImage} className=\"Journal-Box-Preview-Image\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalBoxItem;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nclass JournalEntry extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.currentEntry) {\r\n            if (this.state.currentEntry.id === prevProps.currentEntry.id) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            currentEntry: prevProps.currentEntry\r\n        });\r\n\r\n    }\r\n\r\n    displayFullImage = (ev) => {\r\n        this.props.displayFullImage(this.props.currentEntry.images)\r\n        this.props.currentFullImage(ev.target.dataset.value)\r\n        // let val = ev.target.dataset.value;\r\n        // window.open(val);\r\n    }\r\n\r\n    editEntryByID = (ev) => {\r\n        this.props.editEntryByID(ev.target.dataset.value);\r\n    }\r\n\r\n    render() {\r\n\r\n        var renderedThumbnails = null;\r\n        if (this.props.currentEntry) {\r\n            if (this.props.currentEntry.images) {\r\n                renderedThumbnails = this.props.currentEntry.images.map((image, i) => <img key={i} alt=\"grow img\" data-value={image.url} src={image.thumb} className=\"Journal-Entry-Thumbnail\" onClick={this.displayFullImage} />)\r\n            }\r\n        }\r\n\r\n        var datetimeTrue = null;\r\n        if (this.props.currentEntry && (this.props.currentEntry !== '')) {\r\n            datetimeTrue = new Date(this.props.currentEntry.datetime_true)\r\n        }\r\n\r\n        return (\r\n            <div className=\"Journal-Post-View\">\r\n\r\n                <div className=\"Journal-Post-Header\">\r\n                    <div className=\"Journal-Post-Date\">\r\n                        {datetimeTrue.toDateString()}\r\n                    </div>\r\n\r\n                    <div className=\"Journal-Post-Title\">\r\n                        {this.props.currentEntry.title}\r\n                    </div>\r\n\r\n                    <button className=\"Journal-Edit-Post-Btn\" data-value={this.props.currentEntry.id} onClick={this.editEntryByID}>\r\n                        edit &#9998;\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"Journal-Post-Content\">\r\n                    {this.props.currentEntry.content}\r\n                </div>\r\n\r\n\r\n                {(() => {\r\n                    if (renderedThumbnails) {\r\n                        return (\r\n                            <div className=\"Journal-Post-Images-Wrapper\">\r\n                                <div className=\"Journal-Post-Images\">\r\n                                    {renderedThumbnails}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalEntry;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport JournalAddEditModal from './JournalAddEditModal'\r\nimport FullImageModal from './FullImageModal'\r\nimport JournalCreateModal from './JournalCreateModal'\r\nimport JournalTimelineButton from './JournalTimelineButton'\r\nimport JournalBoxItem from './JournalBoxItem'\r\nimport JournalEntry from './JournalEntry'\r\n\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\n\r\nclass GrowJournal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayContent: \"main\",\r\n            displayEntries: [], // list of entries at selected date\r\n            currentEntry: null,\r\n            currentEntryID: null,\r\n            testContent: '',\r\n            timelineEntries: [],\r\n            journalID: this.props.journalID,\r\n            fullImageModalImages: null,\r\n            currentFullImage: null\r\n        };\r\n\r\n        this.dbHelper = new DbHelper();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n\r\n        if (this.props.journalID) {\r\n            this.watchEntries(this.props.journalID)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    watchEntries = (journalID = this.props.journalID) => {\r\n        this.dbHelper.watchJournalEntries(journalID, this.setJournalEntries)\r\n    }\r\n\r\n    setJournalEntries = (entriesList, dotsList) => {\r\n        if (entriesList.length > 0) {\r\n            this.setState({\r\n                currentEntry: entriesList[entriesList.length - 1],\r\n                currentEntryID: entriesList[entriesList.length - 1].id,\r\n                timelineEntries: entriesList,\r\n                timelineDots: dotsList,\r\n                displayEntries: dotsList[dotsList.length - 1]\r\n            });\r\n        } else {\r\n            this.setState({\r\n                currentEntry: null,\r\n                currentEntryID: null,\r\n                timelineEntries: [],\r\n                timelineDots: [],\r\n                displayEntries: []\r\n            });\r\n        }\r\n\r\n        this.setEntries(dotsList[dotsList.length - 1]);\r\n    }\r\n\r\n    addTimelineEntry = () => {\r\n        this.setState({ displayContent: \"add\" });\r\n    }\r\n\r\n    editEntryByID = (entryID) => {\r\n        console.log(\"edit: \" + entryID)\r\n        console.log(entryID)\r\n\r\n        this.state.timelineEntries.forEach((timelineEntry) => {\r\n            if (timelineEntry.id === entryID) {\r\n                this.setState({\r\n                    currentEntry: timelineEntry,\r\n                    currentEntryID: timelineEntry.id,\r\n                    displayContent: \"edit\"\r\n                });\r\n                return;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    openFullImageModal = (images) => {\r\n\r\n        this.setState({\r\n            displayContent: \"full-image\",\r\n            fullImageModalImages: images\r\n        });\r\n    }\r\n\r\n    openFullImage = (imageUrl) => {\r\n\r\n        console.log(\"imageURL\")\r\n        console.log(imageUrl)\r\n\r\n        this.setState({\r\n            currentFullImage: imageUrl\r\n        });\r\n    }\r\n\r\n\r\n    closeModal = (key) => {\r\n\r\n        if (!key || key === '') {\r\n            this.setState({ displayContent: \"main\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ displayContent: \"main\" });\r\n        this.state.timelineEntries.forEach((timelineEntry) => {\r\n            if (timelineEntry.id === key) {\r\n                this.setState({\r\n                    currentEntry: timelineEntry,\r\n                    currentEntryID: timelineEntry.id\r\n                });\r\n                return;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    setJournalID = (id) => {\r\n        if (id === null) {\r\n            this.setState({\r\n                displayContent: \"main\",\r\n            });\r\n            this.props.setJournalID(null)\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            displayContent: \"main\",\r\n            journalID: id\r\n        });\r\n        this.props.setJournalID(id)\r\n        this.watchEntries(id)\r\n    }\r\n\r\n    setEntries = (entries) => {\r\n        if (!entries) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            currentEntry: entries[0],\r\n            currentEntryID: entries[0].id,\r\n            displayEntries: entries\r\n        });\r\n\r\n    }\r\n\r\n    handleJournalChange = (ev) => {\r\n        console.log(\"JOURNAL CHANGE!!!!\")\r\n        console.log(ev.target.value)\r\n        this.setState({\r\n            currentEntry: null,\r\n            currentEntryID: null,\r\n            displayEntries: []\r\n        });\r\n        this.props.setJournalID(ev.target.value)\r\n        this.watchEntries(ev.target.value)\r\n    }\r\n\r\n    openCreateJournalModal = () => {\r\n        this.setState({ displayContent: \"create-journal\" });\r\n    }\r\n\r\n    openJournal = (journal) => {\r\n        this.setState({\r\n            journalID: journal.id\r\n        });\r\n        this.props.setJournalID(journal.id);\r\n        this.watchEntries(journal.id);\r\n    }\r\n\r\n    render() {\r\n\r\n        var renderedJournalOptions = '';\r\n        if (this.props.userJournals.length > 0) {\r\n            renderedJournalOptions = this.props.userJournals.map((journal) => <option key={journal.id} value={journal.id}>{journal.name}</option>)\r\n        }\r\n\r\n        var renderedUserJournals = null;\r\n        if (this.props.userJournals) {\r\n            renderedUserJournals = this.props.userJournals.map((journal) =>\r\n                <div key={journal.id} className=\"Journal-Box-Item-Container\">\r\n                    <JournalBoxItem journal={journal} openJournal={this.openJournal} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        var renderedJournalEntries = null;\r\n        if (this.state.displayEntries) {\r\n            renderedJournalEntries = this.state.displayEntries.map((entry) =>\r\n                <JournalEntry key={entry.id} editEntryByID={this.editEntryByID} currentEntry={entry} currentFullImage={this.openFullImage} displayFullImage={this.openFullImageModal} />\r\n            )\r\n        }\r\n\r\n        var renderedTimelineDots = null;\r\n        if (this.state.timelineDots) {\r\n            renderedTimelineDots = this.state.timelineDots.map((dot) =>\r\n                <JournalTimelineButton key={dot[0].datetime_short} currentEntryID={this.state.currentEntryID} setEntries={this.setEntries} entry={dot[0]} entries={dot} />\r\n            )\r\n        }\r\n\r\n        return (\r\n\r\n\r\n            <div id=\"Journal-Page\">\r\n                <div id=\"Journal-Main\">\r\n                    <div id=\"Grow-Journal-Main-Area\">\r\n\r\n                        {(() => {\r\n                            if (renderedUserJournals && !this.props.journalID) {\r\n                                return (\r\n                                    <div id=\"Journal-Box-Area-Scroll\">\r\n\r\n\r\n                                        <div id=\"Grow-Journal-Header-Area\">\r\n                                            <div id=\"Grow-Journal-Header-Text\">Grow Journals</div>\r\n                                            <button className=\"New-Journal-Btn\" onClick={this.openCreateJournalModal}>\r\n                                                +\r\n                                            </button>\r\n                                        </div>\r\n\r\n\r\n                                        <div id=\"Journal-Box-Area\">\r\n                                            {renderedUserJournals}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            } else if (!this.props.journalID) {\r\n                                return (\r\n                                    <div id=\"Grow-Journal-Header-Area\">\r\n                                        <div id=\"Grow-Journal-Header-Text\">Grow Journals</div>\r\n                                        <button className=\"New-Journal-Btn\" onClick={this.openCreateJournalModal}>\r\n                                            +\r\n                                        </button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n\r\n                        {(() => {\r\n                            if (renderedJournalOptions && this.props.journalID) {\r\n                                return (\r\n                                    <div className=\"Grow-Journal-Title-Div\">\r\n                                        <select id=\"Grow-Journal-Title-Select\" onChange={this.handleJournalChange} value={this.props.journalID}>\r\n                                            {renderedJournalOptions}\r\n                                        </select>\r\n                                        <button className=\"New-Journal-Btn\" onClick={this.openCreateJournalModal}>\r\n                                            +\r\n                                        </button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                        {(() => {\r\n                            if (this.props.journalID) {\r\n                                return (\r\n                                    <div id=\"Journal-Posts-Container\">\r\n                                        {(() => {\r\n                                            if (renderedJournalEntries) {\r\n                                                return (\r\n                                                    <div>\r\n                                                        {renderedJournalEntries}\r\n                                                    </div>\r\n                                                )\r\n                                            } else {\r\n                                                return (\r\n                                                    <div className=\"Journal-Post-View\" >\r\n                                                        Let's get some journal entries...\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        })()}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    {(() => {\r\n                        if (this.props.journalID) {\r\n                            return (\r\n                                <div id=\"Timeline-Container\">\r\n\r\n                                    <div id=\"Timeline-Inner-Container\">\r\n                                        <div id=\"Timeline-Line\" />\r\n                                        \r\n                                        <div id=\"Timeline-Spots\">\r\n\r\n                                            {renderedTimelineDots}\r\n\r\n                                            <button id=\"Timeline-Add-Dot\" onClick={this.addTimelineEntry}>+</button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            )\r\n\r\n                        }\r\n                    })()}\r\n\r\n                </div>\r\n\r\n\r\n                {/* MODAL */}\r\n\r\n                {(() => {\r\n\r\n                    switch (this.state.displayContent) {\r\n                        case 'add':\r\n                            return <JournalAddEditModal journalID={this.props.journalID} closeModal={this.closeModal} editPost=\"new\" />;\r\n                        case 'edit':\r\n                            return <JournalAddEditModal journalID={this.props.journalID} closeModal={this.closeModal} editPost={this.state.currentEntry} />;\r\n                        case 'full-image':\r\n                            return <FullImageModal closeModal={this.closeModal} imageList={this.state.fullImageModalImages} currentFullImage={this.state.currentFullImage} />;\r\n                        case 'create-journal':\r\n                            return <JournalCreateModal journalID={this.props.journalID} setJournalID={this.setJournalID} />;\r\n                        case 'main':\r\n                            return <div />;\r\n                        default:\r\n                            return <div />;\r\n                    }\r\n\r\n                })()}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowJournal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nclass GrowDataDisplay extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var cTemp = null;\r\n        var humidity = null;\r\n\r\n        if (this.props.liveData) {\r\n            cTemp = this.props.liveData.sA1_Temp\r\n            cTemp = Math.round(cTemp * 10) / 10;\r\n\r\n            humidity = this.props.liveData.sA1_Humi\r\n            humidity = Math.round(humidity * 10) / 10;\r\n        }\r\n\r\n        return (\r\n            <div id=\"Grow-Data-Display\">\r\n                {(() => {\r\n                    if (cTemp) {\r\n                        var backgroundIndicator = null\r\n                        if (cTemp > 20 && cTemp < 27) {\r\n                            backgroundIndicator = \"Data-Optimal-Background\"\r\n                        } else if (cTemp <= 19 && cTemp > 28) {\r\n                            backgroundIndicator = \"Data-Danger-Background\"\r\n                        } else {\r\n                            backgroundIndicator = \"Data-Warning-Background\"\r\n                        }\r\n\r\n                        return (\r\n                            <div className=\"Grow-Box-Info-Section\">\r\n                                <div className=\"Grow-Box-Info-Type\">TEMP</div>\r\n                                <div className=\"Grow-Box-Dot-Lead\"><div className=\"Grow-Box-Dot-Lead-Dots\" /></div>\r\n                                <div className={backgroundIndicator}>\r\n                                    <div className=\"Grow-Box-Info-Data\">\r\n                                        <div className=\"Grow-Box-Data-Raw\">{cTemp}</div >\r\n                                        <div className=\"Horizontal-20px-Gap\"></div>\r\n                                        <div className=\"Grow-Box-Data-Unit\">°C</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()}\r\n\r\n                {(() => {\r\n                    if (humidity) {\r\n                        var backgroundIndicator = null\r\n                        if (humidity > 30 && humidity < 43) {\r\n                            backgroundIndicator = \"Data-Optimal-Background\"\r\n                        } else if (humidity <= 27 && humidity > 45) {\r\n                            backgroundIndicator = \"Data-Danger-Background\"\r\n                        } else {\r\n                            backgroundIndicator = \"Data-Warning-Background\"\r\n                        }\r\n\r\n                        return (\r\n                            <div className=\"Grow-Box-Info-Section\">\r\n                                <div className=\"Grow-Box-Info-Type\">HUMIDITY</div>\r\n                                <div className=\"Grow-Box-Dot-Lead\"><div className=\"Grow-Box-Dot-Lead-Dots\" /></div>\r\n                                <div className={backgroundIndicator}>\r\n                                    <div className=\"Grow-Box-Info-Data\">\r\n                                        <div className=\"Grow-Box-Data-Raw\">{humidity}</div >\r\n                                        <div className=\"Horizontal-20px-Gap\"></div>\r\n                                        <div className=\"Grow-Box-Data-Unit\">%</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowDataDisplay;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip } from 'recharts';\r\n\r\nimport moment from 'moment'\r\n\r\n\r\nclass GraphSensorsBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n        if (this.props.grow && this._ismounted) {\r\n            if (this.props.grow.id !== this.growID) {\r\n                this.growID = this.props.grow.id;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n\r\n        this.getGraphData = null;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n        if (this.props.grow.id && this._ismounted) {\r\n            if (this.props.grow.id !== this.growID) {\r\n                this.growID = this.props.grow.id;\r\n            }\r\n        }\r\n\r\n        if (this.props.rawGrowData && this.props.grow.id) {\r\n\r\n            var gwID = this.props.grow.id\r\n            var rawData = this.props.rawGrowData\r\n\r\n            if (rawData[gwID]) {\r\n                var setData = rawData[gwID][rawData[gwID].length - 1]\r\n\r\n                if (this.data !== setData) {\r\n\r\n                    this.data = setData\r\n\r\n\r\n                    var processedData = []\r\n                    setData.forEach((dataPoint) => {\r\n                        var processedPoint = dataPoint\r\n\r\n                        if (new Date().getTime() - processedPoint.time < 7200000) {\r\n                            processedData[processedData.length] = processedPoint\r\n                        }\r\n                    })\r\n\r\n                    this.setState({\r\n                        processedData: processedData\r\n                    });\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    renderTooltip = (props) => {\r\n        var rawContent = props.payload\r\n        if (rawContent.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var readableTime = moment(props.payload[0].payload.time).fromNow()\r\n\r\n        const tooltipItems = rawContent.map((l) =>\r\n            (() => {\r\n                var tIndex = rawContent.indexOf(l)\r\n\r\n                return <div className=\"Grow-Details-Graph-Tooltip-Data\" key={this.props.grow.config.SENSORS[tIndex].PID} style={{ color: l.stroke }}>{l.name}: {rawContent[0].payload[l.dataKey]}{this.props.grow.config.SENSORS[tIndex].unit} </div>\r\n\r\n            })()\r\n        );\r\n\r\n\r\n        return (\r\n            <div className=\"Grow-Details-Graph-Tooltip\">\r\n                <div>{readableTime}</div>\r\n\r\n                {tooltipItems}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        var renderDayGraph = null\r\n        if (this.state.processedData && this.state.processedData[0]) {\r\n            if (this.props.parentSize) {\r\n                var xSize = Math.floor(this.props.parentSize[0] * 1)\r\n                var ySize = Math.floor(this.props.parentSize[1] * 0.9)\r\n\r\n                renderDayGraph = (\r\n                    <LineChart width={xSize} height={ySize} data={this.state.processedData}>\r\n                        <Line yAxisId=\"left\" type=\"monotone\" name=\"temp\" dataKey=\"sA1_Temp\" stroke=\"#ca2014\" dot={false} />\r\n                        <Line yAxisId=\"right\" type=\"monotone\" name=\"humi\" dataKey=\"sA1_Humi\" stroke=\"#db5e24\" dot={false} />\r\n                        <Line yAxisId=\"left\" type=\"monotone\" name=\"co2\" dataKey=\"sC1_C02\" stroke=\"#a9a9a9\" dot={false} />\r\n                        <Line yAxisId=\"right\" type=\"monotone\" name=\"tvoc\" dataKey=\"sC1_TVoc\" stroke=\"#a6a6a6\" dot={false} />\r\n                        <XAxis\r\n                            dataKey=\"time\"\r\n                            type=\"number\"\r\n                            domain={[new Date(this.state.processedData[0].time).getTime(), new Date(this.state.processedData[this.state.processedData.length - 1].time).getTime()]}\r\n                            tickFormatter={(unixTime) => moment(unixTime).format('HH:mm - MMM Do')}\r\n                            hide={true} />\r\n                        <YAxis yAxisId=\"left\" orientation=\"left\" domain={[21, 27]} />\r\n                        <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n                        <Tooltip content={this.renderTooltip} />\r\n                    </LineChart>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n\r\n\r\n            <div className=\"Chart-Container-Box\">\r\n                {renderDayGraph}\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GraphSensorsBox;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport GrowDataDisplay from './GrowDataDisplay'\r\n\r\nimport GraphSensorsBox from '../Graphs/GraphSensorsBox'\r\n\r\nimport moment from 'moment'\r\n\r\n\r\nclass GrowBoxItem extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tgrow: this.props.grow,\r\n\t\t\tactiveIndicatorStyle: 'Grow-Active-Indicator-Circle',\r\n\t\t\tgraphElementSize: [150, 150],\r\n\t\t\tgraphSizeUpdated: 0 // init at 0\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tthis._ismounted = true;\r\n\r\n\t\tthis.initGraphDimensions()\r\n\t}\r\n\r\n\tcomponentWillUnmount = () => {\r\n\t\tthis._ismounted = false;\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tthis.calcGraphDimensions()\r\n\t}\r\n\r\n\tinitGraphDimensions() {\r\n\t\tvar dateNow = new Date()\r\n\r\n\t\tif (((this.state.graphElementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]))) {\r\n\r\n\t\t\tvar tempSize = [this.divRef.clientWidth + (this.divRef.clientWidth / 100) * 10, this.divRef.clientHeight + 55]\r\n\r\n\t\t\tif (tempSize !== this.state.graphElementSize) {\r\n\t\t\t\tif (this._ismounted) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tgraphElementSize: tempSize,\r\n\t\t\t\t\t\tgraphSizeUpdated: dateNow.getTime()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcalcGraphDimensions() {\r\n\t\tvar dateNow = new Date()\r\n\r\n\t\tif (((this.state.graphElementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]) && ((dateNow.getTime() - this.state.graphSizeUpdated) > 500))) {\r\n\r\n\t\t\tvar tempSize = [this.divRef.clientWidth + (this.divRef.clientWidth / 100) * 10, this.divRef.clientHeight + 55]\r\n\r\n\t\t\tif (tempSize !== this.state.graphElementSize) {\r\n\t\t\t\tif (this._ismounted) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tgraphElementSize: tempSize,\r\n\t\t\t\t\t\tgraphSizeUpdated: dateNow.getTime()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\topenGrow = () => {\r\n\t\tthis.props.openGrow(this.props.grow)\r\n\t}\r\n\r\n\tcheckActive = (lastUpdateTime) => {\r\n\r\n\t\tif (lastUpdateTime) {\r\n\t\t\tvar now = new Date().getTime();\r\n\r\n\t\t\tvar difference = now - lastUpdateTime\r\n\r\n\t\t\tif (this._ismounted) {\r\n\r\n\t\t\t\tif (difference >= 120000 && difference < 24000) {\r\n\t\t\t\t\tif (this.activeIndicatorStyle !== 'Grow-Active-Indicator-Circle Data-Warning-Background') {\r\n\t\t\t\t\t\tthis.activeIndicatorStyle = 'Grow-Active-Indicator-Circle Data-Warning-Background'\r\n\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tactiveIndicatorStyle: 'Grow-Active-Indicator-Circle Data-Warning-Background'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (difference >= 240000) {\r\n\t\t\t\t\tif (this.activeIndicatorStyle !== 'Grow-Active-Indicator-Circle Data-Danger-Background') {\r\n\t\t\t\t\t\tthis.activeIndicatorStyle = 'Grow-Active-Indicator-Circle Data-Danger-Background'\r\n\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tactiveIndicatorStyle: 'Grow-Active-Indicator-Circle Data-Danger-Background'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (difference < 120000) {\r\n\t\t\t\t\tif (this.activeIndicatorStyle !== 'Grow-Active-Indicator-Circle Data-Optimal-Background') {\r\n\t\t\t\t\t\tthis.activeIndicatorStyle = 'Grow-Active-Indicator-Circle Data-Optimal-Background'\r\n\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tactiveIndicatorStyle: 'Grow-Active-Indicator-Circle Data-Optimal-Background'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tconsole.log(\"NO LAST UPDATE ERROR\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tvar lastUpdate = null;\r\n\t\tif (this.props.liveGrowData[this.props.grow.id]) {\r\n\r\n\t\t\tvar updatedAtDate = new Date(this.props.liveGrowData[this.props.grow.id].time * 1000)\r\n\r\n\t\t\tif (updatedAtDate !== this.updatedAtDate) {\r\n\t\t\t\tthis.updatedAtDate = updatedAtDate\r\n\t\t\t\tthis.checkActive(updatedAtDate.getTime())\r\n\t\t\t}\r\n\r\n\t\t\tlastUpdate = moment(updatedAtDate).fromNow()\r\n\t\t}\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Grow-Box-Item\">\r\n\r\n\t\t\t\t<div className=\"Grow-Box-Item-Main\">\r\n\t\t\t\t\t<div className=\"Grow-Box-Item-Header\">\r\n\r\n\t\t\t\t\t\t<div className=\"Grow-Box-Grow-Name\" onClick={this.openGrow}>\r\n\t\t\t\t\t\t\t{this.props.grow.name}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"Grow-Box-Updated\">\r\n\t\t\t\t\t\t\tupdate<i><b>: {lastUpdate}</b></i>\r\n\t\t\t\t\t\t\t<div className={this.state.activeIndicatorStyle} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"Grow-Box-Info\">\r\n\t\t\t\t\t\t<div className=\"Grow-Box-Info-Text-Area\">\r\n\r\n\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\tif (this.props.liveGrowData) {\r\n\t\t\t\t\t\t\t\t\treturn <GrowDataDisplay liveData={this.props.liveGrowData[this.props.grow.id]} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})()}\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"Grow-Box-Info-Graph-Area\" ref={element => this.divRef = element}>\r\n\t\t\t\t\t\t\t<GraphSensorsBox parentSize={this.state.graphElementSize} grow={this.props.grow} rawGrowData={this.props.rawGrowData} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GrowBoxItem;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\r\n\r\nimport moment from 'moment'\r\n\r\n\r\n\r\n\r\nclass GraphSensors extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayWindow: 72, // 1/2, 3, 12, 24, 72\r\n\r\n            lightsOnArray: [],\r\n            lightsOffArray: [],\r\n            tickArray: [],\r\n            lightBackgrounds: ['#7344e740', '#fff93640']\r\n        };\r\n\r\n        this.displayTemp = true\r\n        this.displayFan = true\r\n        this.displayHumidity = true\r\n        this.displayHumidifier = true\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n        if (this.props.grow && this.growConfig !== this.props.grow.config) {\r\n            this.growConfig = this.props.grow.config\r\n            this.generateTickSourceArrays()\r\n        }\r\n\r\n        if (this.props.rawGrowData && this.props.grow) {\r\n\r\n            var gwID = this.props.grow.id\r\n            var rawData = this.props.rawGrowData\r\n\r\n            if (rawData[gwID] && ((!this.rawRef) || rawData[gwID][rawData[gwID].length - 1] !== this.rawRef)) {\r\n                this.rawRef = rawData[gwID][rawData[gwID].length - 1]\r\n\r\n                var concatData = []\r\n\r\n                rawData[gwID].forEach((list) => {\r\n                    concatData = concatData.concat(list)\r\n                })\r\n\r\n                if (this.dataLength !== concatData.length) {\r\n                    this.dataLength = concatData.length\r\n                    concatData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n                    // process data\r\n                    this.concatData = concatData\r\n                    this.processData()\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    generateTickSourceArrays = () => {\r\n        if (!this.props.grow.config.LIGHTS) {\r\n            return;\r\n        }\r\n\r\n        var m = moment(new Date())\r\n        m.subtract(3, 'days')\r\n\r\n        var lightsOnArray = []\r\n        var lightsOffArray = []\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.off)).format('x')\r\n\r\n        m.add(1, 'days')\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.off)).format('x')\r\n\r\n        m.add(1, 'days')\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.off)).format('x')\r\n\r\n        m.add(1, 'days')\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.off)).format('x')\r\n\r\n        this.setState({\r\n            lightsOnArray: lightsOnArray,\r\n            lightsOffArray: lightsOffArray\r\n        })\r\n\r\n        this.lightsOnArray = lightsOnArray\r\n        this.lightsOffArray = lightsOffArray\r\n\r\n        this.createTickArray()\r\n\r\n    }\r\n\r\n    createTickArray = (processedData = this.state.processedData) => {\r\n        if (!processedData || !processedData[0]) {\r\n            return\r\n        }\r\n\r\n        var tickRange = [new Date(processedData[0].time).getTime(), new Date(processedData[processedData.length - 1].time).getTime()]\r\n\r\n        var ticks = []\r\n\r\n        var tempOnArray = this.lightsOnArray\r\n        var tempOffArray = this.lightsOffArray\r\n\r\n        if (!tempOffArray && !tempOnArray) {\r\n            return\r\n        }\r\n\r\n        var sourceArray = tempOnArray.concat(tempOffArray)\r\n\r\n        sourceArray.sort((a, b) => (a > b) ? 1 : -1)\r\n\r\n        sourceArray.forEach((tick) => {\r\n            if (tick > tickRange[0] && tick < tickRange[1]) {\r\n                ticks[ticks.length] = tick\r\n            }\r\n        })\r\n\r\n        //set backgrounds\r\n        if (tempOnArray.includes(ticks[0])) {\r\n            this.setState({ lightBackgrounds: ['#7344e740', '#fff93640'] })\r\n        } else {\r\n            this.setState({ lightBackgrounds: ['#fff93640', '#7344e740'] })\r\n\r\n        }\r\n\r\n        this.setState({ tickArray: ticks })\r\n\r\n    }\r\n\r\n    processData = (window = this.state.displayWindow) => {\r\n        var data = null\r\n        if (!this.concatData) {\r\n            return;\r\n        } else {\r\n            data = this.concatData\r\n        }\r\n\r\n        var processedData = []\r\n        var i = -1\r\n        var now = new Date().getTime()\r\n\r\n        switch (window) {\r\n            case 72:\r\n                data.forEach((dataPoint) => {\r\n                    i++;\r\n                    if (i === 0 || i % 10 === 0) {\r\n                        var processedPoint = dataPoint\r\n                        processedData[processedData.length] = processedPoint\r\n                    }\r\n                })\r\n\r\n                if (processedData.length >= data.length / 11) { //TODO: not sure why i've included this check, removed for other hours...\r\n                    this.setState({\r\n                        processedData: processedData\r\n                    });\r\n                }\r\n                break;\r\n            case 24:\r\n                data.forEach((dataPoint) => {\r\n                    if (now - dataPoint.time < 86400000) {\r\n                        i++;\r\n                        if (i === 0 || i % 4 === 0) {\r\n                            var processedPoint = dataPoint\r\n                            processedData[processedData.length] = processedPoint\r\n                        }\r\n                    }\r\n                })\r\n\r\n                this.setState({\r\n                    processedData: processedData\r\n                });\r\n                break;\r\n            case 12:\r\n                data.forEach((dataPoint) => {\r\n                    if (now - dataPoint.time < 43200000) {\r\n                        var processedPoint = dataPoint\r\n                        processedData[processedData.length] = processedPoint\r\n                    }\r\n                })\r\n\r\n                this.setState({\r\n                    processedData: processedData\r\n                });\r\n                break;\r\n            case 3:\r\n                data.forEach((dataPoint) => {\r\n                    if (now - dataPoint.time < 10800000) {\r\n                        var processedPoint = dataPoint\r\n                        processedData[processedData.length] = processedPoint\r\n                    }\r\n                })\r\n\r\n                this.setState({\r\n                    processedData: processedData\r\n                });\r\n                break;\r\n            case 1: // stupid naming for half hour... but if i'm using integers..\r\n                data.forEach((dataPoint) => {\r\n                    if (now - dataPoint.time < 1800000) {\r\n                        var processedPoint = dataPoint\r\n                        processedData[processedData.length] = processedPoint\r\n                    }\r\n                })\r\n\r\n                this.setState({\r\n                    processedData: processedData\r\n                });\r\n                break;\r\n            default: //72\r\n                data.forEach((dataPoint) => {\r\n                    i++;\r\n                    if (i === 0 || i % 10 === 0) {\r\n                        var processedPoint = dataPoint\r\n                        processedData[processedData.length] = processedPoint\r\n                    }\r\n                })\r\n\r\n                if (processedData.length >= data.length / 11) {\r\n                    this.setState({\r\n                        processedData: processedData\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n\r\n        this.createTickArray(processedData)\r\n\r\n    }\r\n\r\n    renderTooltip = (props) => {\r\n        var rawContent = props.payload\r\n        if (rawContent === null || rawContent.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var readableTime = moment(props.payload[0].payload.time).format('ddd - HH:mm')\r\n\r\n        const listItems = rawContent.map((l) =>\r\n            (() => {\r\n                if (this.props.activeLines) {\r\n                    var tIndex = this.props.activeLines.indexOf(l.dataKey)\r\n                    var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                    if (!curSensor) {\r\n                        return\r\n                    }\r\n\r\n\r\n                    return (\r\n                        <div className=\"Grow-Details-Graph-Tooltip-Data\" key={curSensor.PID} style={{ color: l.stroke, paddingLeft: '2px', paddingRight: '2px' }}>\r\n                            <div style={{ color: l.stroke, display: \"flex\", flexDirection: \"row\", justifyContent: 'space-between' }}>\r\n                                <div>{l.name}: </div>\r\n                                <div style={{ fontWeight: 600 }} >{rawContent[0].payload[l.dataKey]} {curSensor.unit}</div>\r\n                            </div>\r\n                            <div style={{ width: \"100%\", height: '1px', background: \"#2d2d2e\" }} />\r\n                        </div>\r\n                    )\r\n                }\r\n            })()\r\n        );\r\n\r\n\r\n        return (\r\n            <div className=\"Grow-Details-Graph-Tooltip\">\r\n                <div>{readableTime}</div>\r\n\r\n                {listItems}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    toggle1 = () => {\r\n        this.setState({ displayWindow: 1 })\r\n        this.processData(1)\r\n    }\r\n\r\n    toggle3 = () => {\r\n        this.setState({ displayWindow: 3 })\r\n        this.processData(3)\r\n    }\r\n\r\n    toggle12 = () => {\r\n        this.setState({ displayWindow: 12 })\r\n        this.processData(12)\r\n    }\r\n\r\n    toggle24 = () => {\r\n        this.setState({ displayWindow: 24 })\r\n        this.processData(24)\r\n    }\r\n\r\n    toggle72 = () => {\r\n        this.setState({ displayWindow: 72 })\r\n        this.processData(72)\r\n    }\r\n\r\n    render() {\r\n\r\n        const lineItems = this.props.grow.config.SENSORS.map((l) =>\r\n            (() => {\r\n                if (this.props.activeLines && this.props.activeLines.includes(l.PID)) {\r\n                    if (l.type === \"airTemp\" || l.type === \"waterTemp\" || l.type === \"co2\") {\r\n                        return <Line yAxisId=\"left\" type=\"monotone\" name={l.name} dataKey={l.PID} key={l.PID} stroke={l.color} strokeWidth={l.thickness} dot={false} />\r\n                    } else {\r\n                        return <Line yAxisId=\"right\" type=\"monotone\" name={l.name} dataKey={l.PID} key={l.PID} stroke={l.color} strokeWidth={l.thickness} dot={false} />\r\n                    }\r\n                    // temp solition for the multi graph page\r\n                } else if (!this.props.activeLines) {\r\n                    if (l.type === \"airTemp\" || l.type === \"waterTemp\" || l.type === \"co2\") {\r\n                        return <Line yAxisId=\"left\" type=\"monotone\" name={l.name} dataKey={l.PID} key={l.PID} stroke={l.color} strokeWidth={l.thickness} dot={false} />\r\n                    } else {\r\n                        return <Line yAxisId=\"right\" type=\"monotone\" name={l.name} dataKey={l.PID} key={l.PID} stroke={l.color} strokeWidth={l.thickness} dot={false} />\r\n                    }\r\n                }\r\n            })()\r\n        );\r\n\r\n\r\n        var renderDayGraph = null\r\n        if (this.state.processedData && this.state.processedData[0]) {\r\n            if (this.props.parentSize) {\r\n                var xSize = Math.floor(this.props.parentSize[0] * 0.91)\r\n                var ySize = Math.floor(this.props.parentSize[1] * 0.9)\r\n\r\n                renderDayGraph = (\r\n                    <LineChart width={xSize} height={ySize} data={this.state.processedData}>\r\n\r\n                        {lineItems}\r\n\r\n                        <CartesianGrid vertical horizontal={false} verticalFill={[this.state.lightBackgrounds[0], this.state.lightBackgrounds[1]]} stroke=\"none\" fillOpacity={0.2} />\r\n\r\n                        <XAxis\r\n                            tick={{ fill: \"#B3C2B5\" }}\r\n                            dataKey=\"time\"\r\n                            type=\"number\"\r\n                            domain={[new Date(this.state.processedData[0].time).getTime(), new Date(this.state.processedData[this.state.processedData.length - 1].time).getTime()]}\r\n                            ticks={this.state.tickArray}\r\n                            tickFormatter={(tick) => moment(tick * 1).format('ddd - HH:mm')}\r\n                        />\r\n                        <YAxis yAxisId=\"left\" orientation=\"left\" domain={[24]} tick={{ fill: \"#B3C2B5\" }} />\r\n                        <YAxis yAxisId=\"right\" hide={true} orientation=\"right\" tick={{ fill: \"#B3C2B5\" }} />\r\n                        <Tooltip content={this.renderTooltip} />\r\n                    </LineChart>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"Chart-Container\">\r\n\r\n                {renderDayGraph}\r\n\r\n                {/* Time Scale Select... */}\r\n                <div style={{ width: '18px', display: 'flex', flexDirection: 'column', position: 'absolute', marginLeft: '2.5%', marginTop: '1%' }}>\r\n\r\n                    <div>\r\n                        {(() => {\r\n                            if (this.state.displayWindow === 1) {\r\n                                return <button style={{ width: '18px', height: '18px', fontSize: '0.45em', padding: '0' }} onClick={this.toggle1}>&#189;h</button>\r\n                            } else {\r\n                                return <button style={{ width: '18px', height: '18px', fontSize: '0.45em', padding: '0', color: '#FFF', backgroundColor: '#0b2e11' }} onClick={this.toggle1}>&#189;h</button>\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayWindow === 3) {\r\n                                return <button style={{ width: '18px', height: '18px', fontSize: '0.45em', padding: '0' }} onClick={this.toggle3}>3h</button>\r\n                            } else {\r\n                                return <button style={{ width: '18px', height: '18px', fontSize: '0.45em', padding: '0', color: '#FFF', backgroundColor: '#0b2e11' }} onClick={this.toggle3}>3h</button>\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayWindow === 12) {\r\n                                return <button style={{ width: '18px', height: '18px', fontSize: '0.45em', padding: '0' }} onClick={this.toggle12}>12h</button>\r\n                            } else {\r\n                                return <button style={{ width: '18px', height: '18px', fontSize: '0.45em', padding: '0', color: '#FFF', backgroundColor: '#0b2e11' }} onClick={this.toggle12}>12h</button>\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayWindow === 24) {\r\n                                return <button style={{ width: '18px', height: '18px', fontSize: '0.45em', padding: '0' }} onClick={this.toggle24}>24h</button>\r\n                            } else {\r\n                                return <button style={{ width: '18px', height: '18px', fontSize: '0.45em', padding: '0', color: '#FFF', backgroundColor: '#0b2e11' }} onClick={this.toggle24}>24h</button>\r\n                            }\r\n                        })()}\r\n                        {(() => {\r\n                            if (this.state.displayWindow === 72) {\r\n                                return <button style={{ width: '18px', height: '18px', fontSize: '0.45em', padding: '0' }} onClick={this.toggle72}>72h</button>\r\n                            } else {\r\n                                return <button style={{ width: '18px', height: '18px', fontSize: '0.45em', padding: '0', color: '#FFF', backgroundColor: '#0b2e11' }} onClick={this.toggle72}>72h</button>\r\n                            }\r\n                        })()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GraphSensors;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport GraphSensors from '../Graphs/GraphSensors.js'\r\n\r\n\r\nclass GrowDetailsGraphs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            elementSize: [],\r\n        };\r\n\r\n        this.graphSizeUpdated = 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this._ismounted === false) {\r\n            return;\r\n        }\r\n\r\n        var dateNow = new Date()\r\n        if (((this.state.elementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]) && ((dateNow.getTime() - this.graphSizeUpdated) > 500))) {\r\n            var tempSize = [this.divRef.clientWidth + (this.divRef.clientWidth / 100) * 10, this.divRef.clientHeight]\r\n\r\n            if (tempSize !== this.state.elementSize) {\r\n                this.setState({ elementSize: tempSize });\r\n                this.graphSizeUpdated = dateNow.getTime();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id=\"Grow-Details-Graphs-Page\" ref={element => this.divRef = element}>\r\n                <GraphSensors activeLines={this.props.activeLines} parentSize={this.state.elementSize} rawGrowData={this.props.rawGrowData} grow={this.props.grow} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowDetailsGraphs;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport TimePicker from 'react-time-picker'\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\nimport { WiThermometer, WiHumidity, WiHurricane, WiCloudUp, WiThermometerExterior } from 'react-icons/wi';\r\nimport co2svg from '../../../assets/co2svg.svg'\r\nimport tvocSvg from '../../../assets/tvoc-svg.svg'\r\n\r\n\r\n\r\nclass GrowSettings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            config: null\r\n        };\r\n\r\n        this.dbHelper = new DbHelper()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n        this.watchConfig = this.getConfig(this.setFetchedConfig);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    getConfig = async (setData) => {\r\n        try {\r\n            await this.dbHelper.getGrowConfig(this.props.grow.id, setData)\r\n        } catch (e) {\r\n            console.log(e);\r\n            return 'caught ' + e\r\n        }\r\n    }\r\n\r\n    setFetchedConfig = (configObj) => {\r\n        this.setState({\r\n            config: configObj\r\n        });\r\n    }\r\n\r\n\r\n    // UI METHODS\r\n    postConfig = () => {\r\n        // Post config\r\n        this.dbHelper.setGrowConfig(this.props.grow.id, this.state.config)\r\n        // Refresh page data\r\n        this.props.refreshGrows(this.state.config)\r\n        // Close settings menu\r\n        this.props.close()\r\n    }\r\n\r\n    sensorMeanChange = (e) => {\r\n        console.log(\"Change \" + e.target.id + \": \" + e.target.value)\r\n\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor._mean = parseFloat(e.target.value)\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    sensorDeviationChange = (e) => {\r\n        console.log(\"Change \" + e.target.id + \": \" + e.target.value)\r\n\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor._deviation = parseFloat(e.target.value)\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    sensorWeightChange = (e) => {\r\n        console.log(\"Change \" + e.target.id + \": \" + e.target.value)\r\n\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor.thickness = e.target.value\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    sensorColorChange = (e) => {\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor.color = e.target.value\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    sensorTypeChange = (e) => {\r\n        console.log(\"Change \" + e.target.id + \": \" + e.target.value)\r\n\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor.type = e.target.value\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    sensorNameChange = (e) => {\r\n        console.log(\"Change \" + e.target.id + \": \" + e.target.value)\r\n\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor.name = e.target.value\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    handleLightsOnChange = (value) => {\r\n        var tempConfig = this.state.config\r\n        tempConfig.LIGHTS.on = value\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    handleLightsOffChange = (value) => {\r\n        var tempConfig = this.state.config\r\n        tempConfig.LIGHTS.off = value\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    close = () => {\r\n        this.props.close();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const sensorSettingRows = this.props.grow.config.SENSORS.map((sensor) =>\r\n\r\n            <div key={sensor.PID} className=\"Config-Settings-Field\" style={{ backgroundColor: '#3d7a80' }}>\r\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n\r\n                    <div style={{ userSelect: 'none', fontsize: '0.6em', color: \"#FFF\", background: '#131B14', maxHeight: '30px', height: '30px' }} >\r\n\r\n                        {(() => {\r\n                            if (sensor.type === \"airTemp\") {\r\n                                return (<WiThermometer style={{ fontSize: '1.3em', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"waterTemp\") {\r\n                                return (<WiThermometerExterior style={{ fontSize: '1.3em', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"humidity\") {\r\n                                return (<WiHumidity style={{ fontSize: '1.3em', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"fan\") {\r\n                                return (<WiHurricane style={{ fontSize: '1.3em', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"humidifier\") {\r\n                                return (<WiCloudUp style={{ fontSize: '1.3em', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"co2\") {\r\n                                return (<img src={co2svg} alt=\"CO2 Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '80%', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"tvoc\") {\r\n                                return (<img src={tvocSvg} alt=\"CO2 Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '80%', color: sensor.color }} />)\r\n                            } else {\r\n                                return (<div />)\r\n                            }\r\n                        })()}\r\n                        {sensor.PID}\r\n\r\n                    </div>\r\n\r\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly' }}>\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                Name\r\n                            </div>\r\n                            <div style={{ fontWeight: '400' }}>\r\n                                <input onChange={this.sensorNameChange} id={sensor.PID} name=\"name\" type=\"name\" defaultValue={sensor.name} maxLength=\"16\" style={{ fontSize: '0.8em', maxWidth: \"70px\" }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                Type\r\n                            </div>\r\n                            <div>\r\n                                <select onChange={this.sensorTypeChange} id={sensor.PID} defaultValue={sensor.type} style={{ fontSize: '0.8em', maxWidth: \"74px\", height: '20px' }} >\r\n                                    <option value=\"airTemp\">airTemp</option>\r\n                                    <option value=\"waterTemp\">waterTemp</option>\r\n                                    <option value=\"humidity\">humidity</option>\r\n                                    <option value=\"co2\">CO&#8322;</option>\r\n                                    <option value=\"fan\">fan</option>\r\n                                    <option value=\"humidifier\">humidifier</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                Weight\r\n                            </div>\r\n                            <div>\r\n                                <select onChange={this.sensorWeightChange} id={sensor.PID} defaultValue={sensor.thickness} style={{ fontSize: '0.7em', maxWidth: \"44px\", height: '20px' }} >\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"1.5\">1.5</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"0.75\">0.75</option>\r\n                                    <option value=\"0.5\">0.5</option>\r\n                                    <option value=\"0.25\">0.25</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                Mean\r\n                            </div>\r\n                            <div style={{ fontSize: '1em', fontWeight: '400' }}>\r\n                                <input type='number' onChange={this.sensorMeanChange} id={sensor.PID} name=\"_mean\" defaultValue={sensor._mean} style={{ fontSize: '0.8em', maxWidth: \"36px\" }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                SDev\r\n                            </div>\r\n                            <div style={{ fontSize: '1em', fontWeight: '400' }}>\r\n                                <input type='number' onChange={this.sensorDeviationChange} id={sensor.PID} name=\"_deviation\" defaultValue={sensor._deviation} style={{ fontSize: '0.8em', maxWidth: \"36px\" }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                Color\r\n                            </div>\r\n                            <div style={{ fontSize: '1em', fontWeight: '400' }}>\r\n                                <input onChange={this.sensorColorChange} id={sensor.PID} name=\"color\" type=\"color\" defaultValue={sensor.color} maxLength=\"10\" style={{ fontSize: '0.8em', padding: 0, marginTop: '1px', maxWidth: \"18px\", maxHeight: '18px' }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div style={{ height: '100%', maxHeight: '100%', width: '100%', maxWidth: '100%', backgroundColor: '#000000BF', position: 'fixed', justifyItems: 'center', justifyContent: 'center', alignContent: 'center', zIndex: 3 }}>\r\n                <div style={{ margin: 'auto', width: '90%', height: '90%', border: '3px solid #262626', padding: '10px', background: '#303630', color: '#d3dbd5' }}>\r\n\r\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                        <div style={{ fontSize: '1.2em', userSelect: 'none' }}></div>\r\n                        <div style={{ fontSize: '1em', fontWeight: '100', userSelect: 'none' }}>Settings</div>\r\n                        <div onClick={this.close} style={{ fontSize: '1.2em', color: '#FF0000', userSelect: 'none', cursor: 'pointer' }}>X</div>\r\n                    </div>\r\n                    {(() => {\r\n                        if (this.state.config) {\r\n                            return (\r\n                                <div id=\"Grow-Details-Config-Settings-Div\" style={{ margin: '4px', height: \"95%\" }}>\r\n                                    <div id=\"Grow-Details-Config-Scroll\" style={{ overflowY: 'scroll' }}>\r\n\r\n                                        {/* LIGHTS */}\r\n                                        {(() => {\r\n                                            if (this.state.config.LIGHTS) {\r\n                                                return (\r\n                                                    <div>\r\n                                                        <div className=\"Config-Item-Header-Text\">LIGHTS</div>\r\n\r\n                                                        <div className=\"Config-Settings-Field\" style={{ backgroundColor: '#e8e81e' }}>\r\n                                                            <div className=\"Settings-Data-Line\">\r\n                                                                <div>on <TimePicker\r\n                                                                    clearIcon={null}\r\n                                                                    id=\"lights_on\"\r\n                                                                    value={this.state.config.LIGHTS.on}\r\n                                                                    onChange={this.handleLightsOnChange.bind(this)} />\r\n                                                                </div>\r\n                                                                <div>off <TimePicker\r\n                                                                    clearIcon={null}\r\n                                                                    id=\"lights_off\"\r\n                                                                    value={this.state.config.LIGHTS.off}\r\n                                                                    onChange={this.handleLightsOffChange.bind(this)} />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        })()}\r\n                                        {/* SENSORS */}\r\n                                        <div className=\"Config-Item-Header-Text\">SENSORS</div>\r\n\r\n                                        {sensorSettingRows}\r\n\r\n\r\n                                        {/* Doubly hid for now */}\r\n                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginTop: '4px' }}>\r\n                                            <div id=\"GROW-DETAILS-SAVE-CONFIG-BTN\" onClick={() => this.postConfig()}>SAVE <br></br> SETTINGS</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n\r\n                </div>\r\n\r\n                {/* use me! */}\r\n                {\r\n                    (() => {\r\n                    })()\r\n                }\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowSettings;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport GrowDetailsGraphs from './GrowDetailsGraphs'\r\nimport GrowSettings from './GrowSettings';\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\nimport moment from 'moment'\r\n\r\nimport { WiThermometer, WiHumidity, WiHurricane, WiCloudUp, WiThermometerExterior } from 'react-icons/wi';\r\nimport { BsGearFill } from 'react-icons/bs';\r\nimport co2svg from '../../../assets/co2svg.svg'\r\nimport tvocSvg from '../../../assets/tvoc-svg.svg'\r\n\r\n\r\nclass GrowDetailsPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeIndicatorStyle: 'Grow-Active-Indicator-Circle',\r\n\r\n            SENSOR_PIDS: [],\r\n            SENSORS_INIT: false,\r\n\r\n            DAILY_HIGHS: [],\r\n            DAILY_HIGHS_TIMES: [],\r\n            DAILY_LOWS: [],\r\n            DAILY_LOWS_TIMES: [],\r\n            DAILY_AVGS: [],\r\n            YEST_AVGS: [],\r\n\r\n            ACTIVE_LINES: [],\r\n            ACTIVE_INIT: false,\r\n\r\n            TABLE_INIT: false,\r\n\r\n            SHOW_SETTINGS: false\r\n        };\r\n\r\n        this.dbHelper = new DbHelper(); // Need for linked journals\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n\r\n        if (this.props.rawGrowData && this.state.SENSOR_PIDS) {\r\n            if (!this.props.rawGrowData[this.props.grow.id]) {\r\n                return;\r\n            }\r\n\r\n            var dataLengthRef = this.props.rawGrowData[this.props.grow.id][this.props.rawGrowData[this.props.grow.id].length - 1].length\r\n\r\n            if (this.dataLengthRef !== dataLengthRef) {\r\n                this.dataLengthRef = dataLengthRef\r\n                this.processGrowData(this.props.rawGrowData)\r\n            }\r\n            this.forceUpdate()\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.rawGrowData) {\r\n            if (!this.props.rawGrowData[this.props.grow.id]) {\r\n                return;\r\n            }\r\n\r\n            var dataLengthRef = this.props.rawGrowData[this.props.grow.id][this.props.rawGrowData[this.props.grow.id].length - 1].length\r\n\r\n            if (this.dataLengthRef !== dataLengthRef) {\r\n                this.dataLengthRef = dataLengthRef\r\n                this.processGrowData(this.props.rawGrowData)\r\n            } else if (!this.state.TABLE_INIT) {\r\n                // Gotta get this process in the first time for things to go smooth... not quite sure why.\r\n                this.dataLengthRef = dataLengthRef\r\n                this.processGrowData(this.props.rawGrowData)\r\n                this.setState({ TABLE_INIT: true })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    processGrowData = (growData) => {\r\n\r\n        var concatData = []\r\n        growData[this.props.grow.id].forEach((list) => {\r\n            concatData = concatData.concat(list)\r\n        })\r\n        concatData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n        this.setState({\r\n            liveData: concatData[concatData.length - 1],\r\n            lastLiveData: concatData[concatData.length - 2],\r\n        })\r\n\r\n        var now = new Date().getTime()\r\n\r\n        var DAILY_HIGHS = []\r\n        var DAILY_HIGHS_TIMES = []\r\n        var DAILY_LOWS = []\r\n        var DAILY_LOWS_TIMES = []\r\n        var DAILY_AVGS = []\r\n        var YEST_AVGS = []\r\n\r\n        var DAILY_POINT_COUNT = 0\r\n        var YEST_POINT_COUNT = 0\r\n\r\n        var lastDayData = []\r\n        var yesterdayData = []\r\n\r\n        // INITIALIZING SENSOR INFO\r\n        var SENSOR_PIDS = []\r\n        if (this.state.SENSORS_INIT !== this.props.grow && this.props.grow.config.SENSORS !== this.state.SENSOR_PIDS) {\r\n            this.props.grow.config.SENSORS.forEach((sensor, key) => {\r\n\r\n                if (SENSOR_PIDS[key] !== sensor.PID) {\r\n                    SENSOR_PIDS[key] = sensor.PID\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                SENSOR_PIDS: SENSOR_PIDS\r\n            });\r\n\r\n            if (this.state.ACTIVE_INIT !== this.props.grow) {\r\n                this.setState({\r\n                    ACTIVE_LINES: SENSOR_PIDS,\r\n                    ACTIVE_INIT: this.props.grow\r\n                });\r\n            }\r\n        }\r\n\r\n        concatData.forEach((dataPoint) => {\r\n            if (now - dataPoint.time < 86400000) {\r\n                DAILY_POINT_COUNT += 1\r\n\r\n                lastDayData[lastDayData.length] = dataPoint\r\n\r\n                // DATA and CALCS for avgs/lows/highs\r\n                for (const pid in dataPoint) {\r\n\r\n                    if (SENSOR_PIDS.includes(pid)) {\r\n                        var tIndex = SENSOR_PIDS.indexOf(pid)\r\n\r\n                        // HIGHS\r\n                        if (!DAILY_HIGHS[tIndex] || parseFloat(dataPoint[pid]) >= DAILY_HIGHS[tIndex]) {\r\n                            DAILY_HIGHS[tIndex] = dataPoint[pid]\r\n                            DAILY_HIGHS_TIMES[tIndex] = dataPoint.time\r\n                        }\r\n                        // LOWS\r\n                        if (!DAILY_LOWS[tIndex] || parseFloat(dataPoint[pid]) <= DAILY_LOWS[tIndex]) {\r\n                            DAILY_LOWS[tIndex] = dataPoint[pid]\r\n                            DAILY_LOWS_TIMES[tIndex] = dataPoint.time\r\n                        }\r\n                        //AVERAGES\r\n                        if (!DAILY_AVGS[tIndex]) {\r\n                            DAILY_AVGS[tIndex] = 0\r\n                        }\r\n                        DAILY_AVGS[tIndex] = parseFloat(dataPoint[pid]) + parseFloat(DAILY_AVGS[tIndex])\r\n                    }\r\n                }\r\n            }\r\n\r\n            // YESTERDAY AVERAGES\r\n            if ((now - dataPoint.time < (86400000 * 2)) && (now - dataPoint.time > 86400000)) {\r\n                YEST_POINT_COUNT += 1\r\n\r\n                yesterdayData[yesterdayData.length] = dataPoint\r\n\r\n                // DATA and CALCS for avgs/lows/highs\r\n                for (const pid in dataPoint) {\r\n\r\n                    if (SENSOR_PIDS.includes(pid)) {\r\n                        var yIndex = SENSOR_PIDS.indexOf(pid)\r\n\r\n                        //AVERAGES\r\n                        if (!YEST_AVGS[yIndex]) {\r\n                            YEST_AVGS[yIndex] = 0\r\n                        }\r\n                        YEST_AVGS[yIndex] = parseFloat(dataPoint[pid]) + parseFloat(YEST_AVGS[yIndex])\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        // CALCULATE AVERAGES\r\n        DAILY_AVGS.forEach((avg, key) => {\r\n            DAILY_AVGS[key] = DAILY_AVGS[key] / DAILY_POINT_COUNT\r\n        });\r\n\r\n        YEST_AVGS.forEach((avg, key) => {\r\n            YEST_AVGS[key] = YEST_AVGS[key] / YEST_POINT_COUNT\r\n        });\r\n\r\n        this.setState({\r\n            DAILY_HIGHS: DAILY_HIGHS,\r\n            DAILY_HIGHS_TIMES: DAILY_HIGHS_TIMES,\r\n            DAILY_LOWS: DAILY_LOWS,\r\n            DAILY_LOWS_TIMES: DAILY_LOWS_TIMES,\r\n            DAILY_AVGS: DAILY_AVGS,\r\n            YEST_AVGS: YEST_AVGS\r\n        });\r\n    }\r\n\r\n    toggleLine = (e) => {\r\n        var pid = e.currentTarget.getAttribute('data-value')\r\n\r\n        var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n\r\n        var tActiveLines = this.state.ACTIVE_LINES\r\n\r\n        if (tActiveLines.includes(pid)) {\r\n            tActiveLines[tIndex] = null\r\n        } else {\r\n            tActiveLines[tIndex] = pid\r\n        }\r\n\r\n        this.setState({ ACTIVE_LINES: tActiveLines })\r\n        this.forceUpdate()\r\n    }\r\n\r\n    openCloseSettings = () => {\r\n        if (this.state.SHOW_SETTINGS) {\r\n            this.setState({ SHOW_SETTINGS: false })\r\n        } else {\r\n            this.setState({ SHOW_SETTINGS: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const sensorInfoRows = this.state.SENSOR_PIDS.map((pid) =>\r\n            <div className=\"Grow-Details-Main-Data-Display-Row\" key={pid}>\r\n\r\n                {(() => {\r\n\r\n                    var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                    var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                    var setOpacity = 0.3\r\n                    var setPaddingTop = '3px'\r\n\r\n                    if (this.state.ACTIVE_LINES.includes(pid)) {\r\n                        setOpacity = 1\r\n                        setPaddingTop = '4px'\r\n                    }\r\n\r\n                    if (!this.props.grow.config.SENSORS[tIndex]) {\r\n                        return\r\n                    }\r\n\r\n                    return (\r\n                        <div data-value={pid} key={pid} onClick={this.toggleLine} style={{ width: '120px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', fontSize: '0.65em', cursor: 'pointer', background: '#0c140d', opacity: setOpacity, color: this.props.grow.config.SENSORS[tIndex].color }}  >\r\n                            <div style={{ paddingTop: setPaddingTop }} > {curSensor.name}</div>\r\n\r\n                            {(() => {\r\n                                if (curSensor.type === \"airTemp\") {\r\n                                    return <WiThermometer style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                } else if (curSensor.type === \"humidity\") {\r\n                                    return <WiHumidity style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                } else if (curSensor.type === \"fan\") {\r\n                                    return <WiHurricane style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                } else if (curSensor.type === \"humidifier\") {\r\n                                    return <WiCloudUp style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                } else if (curSensor.type === \"waterTemp\") {\r\n                                    return <WiThermometerExterior style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                } else if (curSensor.type === \"co2\") {\r\n                                    return <img src={co2svg} alt=\"CO2 Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '28px' }} />\r\n                                } else if (curSensor.type === \"tvoc\") {\r\n                                    return <img src={tvocSvg} alt=\"TVOC Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '28px' }} />\r\n                                } else {\r\n                                    return <div />\r\n                                }\r\n                            })()}\r\n\r\n                        </div>\r\n                    )\r\n                })()}\r\n                {(() => {\r\n                    var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                    var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                    var setIndicatorColor = '#FFF'\r\n\r\n                    if (!curSensor) {\r\n                        return\r\n                    }\r\n\r\n                    if ((curSensor._mean || curSensor._mean === 0) && (curSensor._deviation || curSensor._deviation === 0)) {\r\n                        if (((curSensor._mean + (curSensor._deviation * 2)) < this.state.liveData[pid]) || ((curSensor._mean - (curSensor._deviation * 2)) > this.state.liveData[pid])) {\r\n                            setIndicatorColor = '#FF0000' // BAD\r\n                        } else if (((curSensor._mean + (curSensor._deviation)) < this.state.liveData[pid]) || ((curSensor._mean - (curSensor._deviation)) > this.state.liveData[pid])) {\r\n                            setIndicatorColor = '#ded954' // WARN\r\n                        } else {\r\n                            setIndicatorColor = '#38c538' // GOOD\r\n                        }\r\n                    }\r\n\r\n                    return (\r\n                        <div className=\"Grow-Details-Main-Data-Current-Data\" style={{ background: setIndicatorColor }}>\r\n                            {(() => {\r\n                                if (this.state.liveData[pid] > this.state.lastLiveData[pid]) {\r\n                                    return <div style={{ fontSize: '14px', color: '#a02525' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                } else if (this.state.liveData[pid] < this.state.lastLiveData[pid]) {\r\n                                    return <div style={{ fontSize: '14px', color: '#242490' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                } else {\r\n                                    return <div style={{ fontSize: '14px', visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                }\r\n                            })()}\r\n\r\n                            {(() => {\r\n                                var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                                var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                                if (!curSensor) {\r\n                                    return\r\n                                }\r\n\r\n                                return <div>{Math.round(this.state.liveData[pid] * 10) / 10}{curSensor.unit}</div>\r\n                            })()}\r\n                        </div>\r\n                    )\r\n                })()}\r\n\r\n                <div className=\"Grow-Details-Main-Data-Data\" style={{ marginBottom: '1px' }}>\r\n                    <div className=\"Grow-Details-Main-Yest-Data\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                        {(() => {\r\n                            var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                            var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                            if (!curSensor) {\r\n                                return\r\n                            }\r\n\r\n                            if (this.state.YEST_AVGS[tIndex]) {\r\n                                return Math.round(this.state.YEST_AVGS[tIndex] * 10) / 10 + curSensor.unit\r\n                            }\r\n                        })()}\r\n\r\n\r\n                        {(() => {\r\n                            var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n\r\n                            if (this.state.DAILY_AVGS[tIndex] && this.state.YEST_AVGS[tIndex]) {\r\n\r\n                                if (this.state.DAILY_AVGS[tIndex] > this.state.YEST_AVGS[tIndex]) {\r\n                                    return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                } else if (this.state.DAILY_AVGS[tIndex] < this.state.YEST_AVGS[tIndex]) {\r\n                                    return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                } else {\r\n                                    return <div style={{ visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                }\r\n                            }\r\n                        })()}\r\n                    </div>\r\n\r\n\r\n                    {(() => {\r\n                        var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                        var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                        if (!curSensor) {\r\n                            return\r\n                        }\r\n\r\n                        if (this.state.DAILY_AVGS[tIndex]) {\r\n                            return Math.round(this.state.DAILY_AVGS[tIndex] * 10) / 10 + curSensor.unit\r\n                        }\r\n                    })()}\r\n                </div>\r\n\r\n\r\n                <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#c77725', marginBottom: '1px' }}>\r\n                    <div className=\"Grow-Details-Main-Data-Time\">\r\n                        {(() => {\r\n                            var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n\r\n                            if (this.state.DAILY_HIGHS_TIMES) {\r\n                                var m = moment(this.state.DAILY_HIGHS_TIMES[tIndex])\r\n                                return m.format('HH:mm')\r\n                            }\r\n                        })()}\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                        var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                        if (!curSensor) {\r\n                            return\r\n                        }\r\n\r\n                        if (this.state.DAILY_HIGHS) {\r\n                            return Math.round(this.state.DAILY_HIGHS[tIndex] * 10) / 10 + curSensor.unit\r\n                        }\r\n                    })()}\r\n                </div>\r\n\r\n                <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#2584c7', marginBottom: '1px' }}>\r\n                    <div className=\"Grow-Details-Main-Data-Time\">\r\n                        {(() => {\r\n                            var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n\r\n                            if (this.state.DAILY_LOWS_TIMES) {\r\n                                var m = moment(this.state.DAILY_LOWS_TIMES[tIndex])\r\n                                return m.format('HH:mm')\r\n                            }\r\n                        })()}\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                        var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                        if (!curSensor) {\r\n                            return\r\n                        }\r\n\r\n                        if (this.state.DAILY_LOWS) {\r\n                            return Math.round(this.state.DAILY_LOWS[tIndex] * 10) / 10 + curSensor.unit\r\n                        }\r\n                    })()}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n\r\n        // MAIN RENDER RETURN\r\n        return (\r\n            <div className=\"Grow-Details-Page\">\r\n                <div className=\"Grow-Details-Page-Content\">\r\n                    <div className=\"Grow-Details-Content-Bottom\">\r\n                        <div className=\"Grow-Details-Header\">\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flex: 1 }}>\r\n                                <div className={this.state.activeIndicatorStyle} />\r\n                                <div id=\"Grow-Header-Text\">{this.props.grow.name}</div>\r\n                            </div>\r\n                            <div onClick={() => this.openCloseSettings()} style={{ paddingRight: '30px', color: '#A9A9A9', userSelect: 'none', cursor: 'pointer' }}>\r\n                                <BsGearFill style={{ color: '#9e9e9e', fontSize: '22px', marginTop: '8px' }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"Grow-Details-Bottom-Item\" >\r\n                            <GrowDetailsGraphs activeLines={this.state.ACTIVE_LINES} rawGrowData={this.props.rawGrowData} grow={this.props.grow} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if (this.state.SHOW_SETTINGS) {\r\n                            return (\r\n                                <GrowSettings grow={this.props.grow} refreshGrows={this.props.refreshGrows} close={this.openCloseSettings} />\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n                    <div className=\"Grow-Details-Page-Panel\">\r\n                        <div id=\"Grow-Details-Data-Display\">\r\n                            {(() => {\r\n                                if (this.state.liveData) {\r\n                                    return (\r\n                                        <div id=\"Grow-Details-Main-Data-Display\">\r\n                                            <div className=\"Grow-Details-Headers-Display-Row\">\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ color: '#FFF', width: '120px', maxWidth: '120px' }}></div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '88px', maxWidth: '88px' }}></div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '64px', maxWidth: '64px' }}>24h~</div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '64px', maxWidth: '64px' }}>24h&#8593;</div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '64px', maxWidth: '64px' }}>24h&#8595;</div>\r\n                                            </div>\r\n\r\n                                            {sensorInfoRows}\r\n\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            })()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowDetailsPage;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\n\r\nimport GrowBoxItem from './GrowPage/GrowBoxItem'\r\nimport GrowDetailsPage from './GrowPage/GrowDetailsPage'\r\n\r\n\r\nclass GrowPage extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdisplayContent: \"main\", // main\r\n\t\t\tgrow: this.props.grow\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._ismounted = true;\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis._ismounted = false;\r\n\t}\r\n\r\n\tcomponentDidUpdate = () => {\r\n\t\tif (!this._ismounted) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tcloseModal = (key) => {\r\n\t\tif (!key || key === '') {\r\n\t\t\tthis.setState({ displayContent: \"main\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({ displayContent: \"main\" });\r\n\t}\r\n\r\n\topenMainPage = (page, id) => {\r\n\t\tthis.props.openMainPage(page, id)\r\n\t}\r\n\r\n\topenCreateGrowModal = () => {\r\n\t\talert(\"GrowPage.js openCreateGrowModal() TODO\")\r\n\t}\r\n\r\n\topenGrow = (grow) => {\r\n\t\tif (!grow) {\r\n\t\t\tthis.props.setGrow(null)\r\n\t\t}\r\n\r\n\t\tthis.props.setGrow(grow)\r\n\t}\r\n\r\n\tsetJournalID = (journalID) => {\r\n\t\tconsole.log(\"setJournalID: \" + journalID)\r\n\t\tthis.props.setJournalID(journalID)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tvar renderedGrowBoxes = null;\r\n\t\tif (this.props.grow === null && this.props.userGrows) {\r\n\t\t\trenderedGrowBoxes = this.props.userGrows.map((grow) =>\r\n\t\t\t\t<div key={grow.id} className=\"Grow-Box-Item-Container\">\r\n\t\t\t\t\t<GrowBoxItem grow={grow} openGrow={this.openGrow} liveGrowData={this.props.liveGrowData} rawGrowData={this.props.rawGrowData} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div id=\"Grow-Page\">\r\n\t\t\t\t<div id=\"Grow-Main\">\r\n\t\t\t\t\t<div id=\"Grow-Main-Area\">\r\n\r\n\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\tif (this.props.grow === null) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div id=\"Grow-List-Main-Area\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (renderedGrowBoxes) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Box-Area-Scroll\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Header-Area\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Header-Text\">Grows</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"New-Grow-Btn\" onClick={this.openCreateGrowModal}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Box-Area\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{renderedGrowBoxes}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Header-Area\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Grow-Header-Text\">Grows</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"New-Grow-Btn\" onClick={this.openCreateGrowModal}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})()}\r\n\r\n\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\tif (this.props.grow) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<GrowDetailsPage grow={this.props.grow} refreshGrows={this.props.refreshGrows} openMainPage={this.openMainPage} setJournalID={this.setJournalID} rawGrowData={this.props.rawGrowData} user={this.props.user} />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})()}\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GrowPage;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\r\n\r\nimport moment from 'moment'\r\n\r\n\r\n\r\n\r\nclass AllGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayWindow: 43200000, // 1800000, 10800000, 43200000, 86400000, 259200000\r\n\r\n            lightsOnArray: [],\r\n            lightsOffArray: [],\r\n            tickArray: [],\r\n            lightBackgrounds: ['#7344e740', '#fff93640'],\r\n        };\r\n\r\n        this.concatData = []\r\n\r\n        this.firstPointTime = 0\r\n        this.lastPointTime = 0\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n\r\n        if (this.props.user) {\r\n            if (this.props.user.PREFS) {\r\n                if (this.props.user.PREFS.GRAPHS) {\r\n                    if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                        if (this.props.user.PREFS.GRAPHS.AllGraph.timeWindow && (this.props.user.PREFS.GRAPHS.AllGraph.timeWindow !== this.state.displayWindow)) {\r\n                            this.setState({\r\n                                displayWindow: this.props.user.PREFS.GRAPHS.AllGraph.timeWindow\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.rawGrowData && this.props.growIDs) {\r\n\r\n            var newArrayLengths = []\r\n            var valChanged = false\r\n            this.props.growIDs.forEach((gwID) => {\r\n\r\n                // returns\r\n                if (!this.props.rawGrowData[gwID]) {\r\n                    newArrayLengths[gwID] = 0\r\n                    return\r\n                }\r\n                if ((this.DataLengthChecks) && (this.DataLengthChecks[gwID] && this.props.rawGrowData[gwID]) && (this.DataLengthChecks[gwID] === this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length)) {\r\n                    newArrayLengths[gwID] = this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length\r\n                    return; // \r\n                }\r\n                valChanged = true\r\n\r\n                newArrayLengths[gwID] = this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length\r\n\r\n                var subConcatData = []\r\n                this.props.rawGrowData[gwID].forEach((list) => {\r\n                    subConcatData = subConcatData.concat(list)\r\n                })\r\n\r\n                if (!this.DataLengthChecks || this.DataLengthChecks[gwID] !== subConcatData.length) {\r\n                    subConcatData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n                    this.concatData[gwID] = subConcatData\r\n                }\r\n\r\n            })\r\n\r\n            if (valChanged) {\r\n                this.DataLengthChecks = newArrayLengths\r\n\r\n                this.processData()\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n        if (this.props.rawGrowData && this.props.growIDs) {\r\n\r\n            var newArrayLengths = []\r\n            var valChanged = false\r\n            this.props.growIDs.forEach((gwID) => {\r\n\r\n                // returns\r\n                if (!this.props.rawGrowData[gwID]) {\r\n                    newArrayLengths[gwID] = 0\r\n                    return\r\n                }\r\n                if ((this.DataLengthChecks) && (this.DataLengthChecks[gwID] && this.props.rawGrowData[gwID]) && (this.DataLengthChecks[gwID] === this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length)) {\r\n                    newArrayLengths[gwID] = this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length\r\n                    return; // \r\n                }\r\n                valChanged = true\r\n\r\n                newArrayLengths[gwID] = this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length\r\n\r\n                var subConcatData = []\r\n                this.props.rawGrowData[gwID].forEach((list) => {\r\n                    subConcatData = subConcatData.concat(list)\r\n                })\r\n\r\n                if (!this.DataLengthChecks || this.DataLengthChecks[gwID] !== subConcatData.length) {\r\n                    subConcatData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n                    this.concatData[gwID] = subConcatData\r\n                }\r\n\r\n            })\r\n\r\n            if (valChanged) {\r\n                this.DataLengthChecks = newArrayLengths\r\n\r\n                this.processData()\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processData = (window = this.state.displayWindow) => {\r\n        var superData = null\r\n        if (!this.concatData) {\r\n            return;\r\n        } else {\r\n            superData = this.concatData\r\n        }\r\n\r\n        var now = new Date().getTime()\r\n        var processedData = []\r\n        var combinedProcessedData = []\r\n\r\n        //forEach\r\n        this.props.growIDs.forEach((id) => {\r\n            if (!superData[id]) {\r\n                return\r\n            }\r\n\r\n            var subProcessedData = []\r\n\r\n            var i = -1\r\n            superData[id].forEach((dataPoint) => {\r\n\r\n                var subCombined = {}\r\n\r\n                var reducerValue = Math.round(this.state.displayWindow / 10800000)\r\n                if (reducerValue < 1) {\r\n                    reducerValue = 1\r\n                }\r\n\r\n                if (now - dataPoint.time < window) {\r\n                    i++;\r\n\r\n                    if (i === 0 || i % reducerValue === 0) {\r\n                        var processedPoint = dataPoint\r\n\r\n                        for (const [key, value] of Object.entries(processedPoint)) {\r\n                            if (key !== \"time\") {\r\n                                subCombined[key + \"^\" + id] = value\r\n                            } else {\r\n                                subCombined.time = value\r\n                            }\r\n                        }\r\n\r\n                        combinedProcessedData[combinedProcessedData.length] = subCombined\r\n\r\n                        subProcessedData[subProcessedData.length] = processedPoint\r\n                    }\r\n                }\r\n            })\r\n\r\n            processedData[id] = subProcessedData\r\n        })\r\n\r\n        combinedProcessedData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n        this.setState({\r\n            combinedProcessedData: combinedProcessedData,\r\n            processedData: processedData\r\n        });\r\n    }\r\n\r\n\r\n    toggleWindow = (e) => {\r\n        this.setState({ displayWindow: e.target.value })\r\n        this.processData(e.target.value)\r\n        this.props.toggleWindow(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    renderTooltip = (props) => {\r\n        var rawContent = props.payload\r\n        if (rawContent === null || rawContent.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var readableTime = moment(props.payload[0].payload.time).format('ddd - HH:mm')\r\n\r\n        const listItems = rawContent.map((curSensor) => {\r\n            var tID = curSensor.name.split(\"^\")[1]\r\n            var tPID = curSensor.name.split(\"^\")[3]\r\n\r\n            if (this.props.user) {\r\n                if (this.props.user.PREFS) {\r\n                    if (this.props.user.PREFS.GRAPHS) {\r\n                        if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                            if (this.props.user.PREFS.GRAPHS.AllGraph.showSensors && (this.props.user.PREFS.GRAPHS.AllGraph.showSensors[curSensor.dataKey] === false)) {\r\n                                return\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            var grow = null\r\n            this.props.userGrows.forEach((g) => {\r\n                if (g.id === tID) {\r\n                    grow = g\r\n                    return\r\n                } else {\r\n                    return\r\n                }\r\n            })\r\n\r\n            var sensor = null\r\n            grow.config.SENSORS.forEach((s) => {\r\n                if (s.PID === tPID) {\r\n                    sensor = s\r\n                }\r\n            })\r\n\r\n            return (\r\n                <div className=\"AllGraph-Tooltip-Data\" key={curSensor.dataKey} style={{ color: sensor.color, paddingLeft: '2px', paddingRight: '2px' }}>\r\n                    <div style={{ color: sensor.color, display: \"flex\", flexDirection: \"row\", justifyContent: 'space-between' }}>\r\n                        <div>{sensor.name}: </div>\r\n                        <div style={{ fontWeight: 800 }} >{curSensor.payload[curSensor.dataKey]} {sensor.unit}</div>\r\n                    </div>\r\n                    <div style={{ width: \"100%\", height: '1px', background: \"#2d2d2e\" }} />\r\n                </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"AllGraph-Tooltip\" >\r\n                <div>{readableTime}</div>\r\n\r\n                { listItems}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var defaultWindow = 43200000\r\n        if (this.props.user) {\r\n            if (this.props.user.PREFS) {\r\n                if (this.props.user.PREFS.GRAPHS) {\r\n                    if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                        if (this.props.user.PREFS.GRAPHS.AllGraph.timeWindow) {\r\n                            defaultWindow = this.props.user.PREFS.GRAPHS.AllGraph.timeWindow\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.state.combinedProcessedData) {\r\n            var lineItems = this.props.userGrows.map(grow => grow.config.SENSORS.map((sensor) => {\r\n                var dataBlob = sensor.name + \"^\" + grow.id + \"^\" + sensor.unit + \"^\" + sensor.PID\r\n                var lineKey = sensor.PID + \"^\" + grow.id\r\n\r\n                if (this.props.user) {\r\n                    if (this.props.user.PREFS) {\r\n                        if (this.props.user.PREFS.GRAPHS) {\r\n                            if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                                if (this.props.user.PREFS.GRAPHS.AllGraph.showSensors && (this.props.user.PREFS.GRAPHS.AllGraph.showSensors[lineKey] === false)) {\r\n                                    return\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                if (sensor.type === \"airTemp\" || sensor.type === \"waterTemp\") {\r\n                    return <Line yAxisId=\"temperature\" connectNulls={true} type=\"monotone\" name={dataBlob} dataKey={lineKey} key={lineKey} stroke={sensor.color} strokeWidth={sensor.thickness} dot={false} />\r\n                } else if (sensor.type === \"humidifier\" || sensor.type === \"fan\" || sensor.type === \"humidity\") {\r\n                    return <Line yAxisId=\"percent\" connectNulls={true} type=\"monotone\" name={dataBlob} dataKey={lineKey} key={lineKey} stroke={sensor.color} strokeWidth={sensor.thickness} dot={false} />\r\n                } else if (sensor.unit === \"ᵖᵖᵐ\") {\r\n                    return <Line yAxisId=\"ppm\" connectNulls={true} type=\"monotone\" name={dataBlob} dataKey={lineKey} key={lineKey} stroke={sensor.color} strokeWidth={sensor.thickness} dot={false} />\r\n                } else if (sensor.unit === \"ᵖᵖᵇ\") {\r\n                    return <Line yAxisId=\"ppb\" connectNulls={true} type=\"monotone\" name={dataBlob} dataKey={lineKey} key={lineKey} stroke={sensor.color} strokeWidth={sensor.thickness} dot={false} />\r\n                } else {\r\n                    return <Line yAxisId=\"ppm\" connectNulls={true} type=\"monotone\" name={dataBlob} dataKey={lineKey} key={lineKey} stroke={sensor.color} strokeWidth={sensor.thickness} dot={false} />\r\n                }\r\n            }));\r\n\r\n\r\n            var renderDayGraph = null\r\n            if (this.props.parentSize) {\r\n                var xSize = Math.floor(this.props.parentSize[0] * 0.9)\r\n                var ySize = Math.floor(this.props.parentSize[1] * 0.9)\r\n\r\n                renderDayGraph = (\r\n                    <LineChart width={xSize} height={ySize} data={this.state.combinedProcessedData}>\r\n\r\n                        {lineItems}\r\n\r\n                        <CartesianGrid vertical horizontal={false} verticalFill={[this.state.lightBackgrounds[0], this.state.lightBackgrounds[1]]} stroke=\"none\" fillOpacity={0.2} />\r\n\r\n                        <XAxis\r\n                            tick={{ fill: \"#B3C2B5\" }}\r\n                            dataKey=\"time\"\r\n                            type=\"number\"\r\n                            domain={[new Date().getTime(), new Date(new Date() - this.state.displayWindow).getTime()]} //fix!\r\n                            ticks={this.state.tickArray}\r\n                            tickFormatter={(tick) => moment(tick * 1).format('ddd - HH:mm')}\r\n                        />\r\n                        <YAxis yAxisId=\"temperature\" orientation=\"left\" domain={[24]} tick={{ fill: \"#B3C2B5\" }} />\r\n                        <YAxis yAxisId=\"percent\" orientation=\"right\" hide={true} domain={[0, 100]} tick={{ fill: \"#B3C2B5\" }} />\r\n                        <YAxis yAxisId=\"ppm\" orientation=\"right\" hide={true} domain={[0, 100]} tick={{ fill: \"#false\" }} />\r\n                        <YAxis yAxisId=\"ppb\" orientation=\"right\" hide={true} domain={[0, 100]} tick={{ fill: \"false\" }} />\r\n                        <Tooltip content={this.renderTooltip} />\r\n                    </LineChart>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"Chart-Container\">\r\n\r\n                {renderDayGraph}\r\n\r\n                {/* Time Scale Select... */}\r\n                <div style={{ width: '40px', fontSize: '0.55em', display: 'flex', flexDirection: 'column', position: 'absolute', marginLeft: '2.5%', marginTop: '2%' }}>\r\n\r\n\r\n\r\n                    <select onChange={this.toggleWindow} id=\"AllGraph-Time-Scale\" defaultValue={defaultWindow} style={{ fontSize: '0.8em', maxWidth: \"74px\", height: '20px' }} >\r\n                        <option value={1800000}>&#189;h</option>\r\n                        <option value={10800000}>3h</option>\r\n                        <option value={43200000}>12h</option>\r\n                        <option value={86400000}>24h</option>\r\n                        <option value={259200000}>72h</option>\r\n                    </select>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllGraph;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\n\r\nimport AllGraph from './Graphs/AllGraph'\r\n\r\n// import moment from 'moment' // for datetime...\r\n\r\nimport { WiThermometer, WiHumidity, WiHurricane, WiCloudUp, WiThermometerExterior } from 'react-icons/wi';\r\nimport co2svg from '../../assets/co2svg.svg'\r\nimport tvocSvg from '../../assets/tvoc-svg.svg'\r\n\r\n\r\n\r\nclass AllGraphs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            grow: this.props.grow,\r\n            activeIndicatorStyle: 'Grow-Active-Indicator-Circle',\r\n            graphElementSize: [150, 150], // needs init\r\n            graphSizeUpdated: 0, // init at 0\r\n            growIDs: []\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this._ismounted = true;\r\n\r\n        if (this.props.userGrows && this.props.user) {\r\n\r\n            var activeLines = []\r\n            var growIDs = []\r\n\r\n            for (const [key] of Object.entries(this.props.userGrows)) {\r\n\r\n                var grow = this.props.userGrows[key]\r\n\r\n                // add all sensors to active lines\r\n                var growActiveLines = []\r\n                this.props.userGrows[key].config.SENSORS.forEach((sensor, key) => {\r\n                    if (growActiveLines[key] !== sensor.PID) {\r\n                        if (!growIDs.includes(grow.id)) {\r\n                            growIDs[growIDs.length] = grow.id\r\n                        }\r\n\r\n                        var tempIdentifier = sensor.PID + \"^\" + grow.id\r\n\r\n\r\n                        if (this.props.user.PREFS) {\r\n                            if (this.props.user.PREFS.GRAPHS) {\r\n                                if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                                    if (this.props.user.PREFS.GRAPHS.AllGraph.showSensors) {\r\n                                        if (this.props.user.PREFS.GRAPHS.AllGraph.showSensors[tempIdentifier] === false) {\r\n                                            return\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        growActiveLines[growActiveLines.length] = tempIdentifier\r\n\r\n                    }\r\n                });\r\n\r\n                activeLines[grow.id] = growActiveLines\r\n            }\r\n\r\n\r\n            this.setState({\r\n                activeLines: activeLines, // same same for now.. to init\r\n                groupedSensors: activeLines,\r\n                growIDs: growIDs\r\n            });\r\n        }\r\n\r\n        this.initGraphDimensions()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.calcGraphDimensions()\r\n    }\r\n\r\n    initGraphDimensions() {\r\n        var dateNow = new Date()\r\n\r\n        if (((this.state.graphElementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]))) {\r\n\r\n            var tempSize = [this.divRef.clientWidth + (this.divRef.clientWidth / 100) * 10, 500]\r\n\r\n            if (tempSize !== this.state.graphElementSize) {\r\n                if (this._ismounted) {\r\n                    this.setState({\r\n                        graphElementSize: tempSize,\r\n                        graphSizeUpdated: dateNow.getTime()\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    calcGraphDimensions() {\r\n        var dateNow = new Date()\r\n\r\n        if (((this.state.graphElementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]) && ((dateNow.getTime() - this.state.graphSizeUpdated) > 500))) {\r\n\r\n            var tempSize = [this.divRef.clientWidth + (this.divRef.clientWidth / 100) * 10, 500]\r\n\r\n            if (tempSize !== this.state.graphElementSize) {\r\n                if (this._ismounted) {\r\n                    this.setState({\r\n                        graphElementSize: tempSize,\r\n                        graphSizeUpdated: dateNow.getTime()\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleLine = (e) => {\r\n        var data = e.currentTarget.getAttribute('data-value')\r\n\r\n        // update firebase data\r\n        var tempUser = this.props.user\r\n\r\n        if (tempUser.PREFS) {\r\n            if (tempUser.PREFS.GRAPHS) {\r\n                if (tempUser.PREFS.GRAPHS.AllGraph) {\r\n                    if (tempUser.PREFS.GRAPHS.AllGraph.showSensors) {\r\n                        if (tempUser.PREFS.GRAPHS.AllGraph.showSensors[data] === false) {\r\n                            tempUser.PREFS.GRAPHS.AllGraph.showSensors[data] = true\r\n                            this.setUserPrefs(tempUser)\r\n                            return\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        tempUser.PREFS.GRAPHS.AllGraph.showSensors[data] = false\r\n        this.setUserPrefs(tempUser)\r\n\r\n    }\r\n\r\n    toggleWindow = (tWindow) => {\r\n        // update firebase data\r\n        var tempUser = this.props.user\r\n        tempUser.PREFS.GRAPHS.AllGraph.timeWindow = tWindow\r\n        this.setUserPrefs(tempUser)\r\n    }\r\n\r\n    setUserPrefs = (data) => {\r\n        this.props.setFirebaseUser(data)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var sensorInfoRows = []\r\n        if (this.state.activeLines) {\r\n            sensorInfoRows = this.props.userGrows.map(grow => grow.config.SENSORS.map((sensor, key) => {\r\n                return (\r\n                    <div className=\"AllGraph-Main-Data-Display-Row\" key={sensor.PID}>\r\n\r\n                        {(() => {\r\n\r\n                            var pid = sensor.PID\r\n                            var tIndex = key\r\n                            var curSensor = grow.config.SENSORS[tIndex]\r\n                            var dataVal = pid + \"^\" + grow.id\r\n\r\n                            var setOpacity = 1\r\n                            var setPaddingTop = '4px'\r\n\r\n                            if (this.props.user) {\r\n                                if (this.props.user.PREFS) {\r\n                                    if (this.props.user.PREFS.GRAPHS) {\r\n                                        if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                                            if (this.props.user.PREFS.GRAPHS.AllGraph.showSensors && (this.props.user.PREFS.GRAPHS.AllGraph.showSensors[dataVal] === false)) {\r\n                                                setOpacity = 0.3\r\n                                                setPaddingTop = '3px'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            return (\r\n                                <div data-value={dataVal} key={pid} onClick={this.toggleLine} style={{ width: '110px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', fontSize: '0.65em', cursor: 'pointer', background: '#0c140d', opacity: setOpacity, color: grow.config.SENSORS[tIndex].color }}  >\r\n                                    <div style={{ paddingTop: setPaddingTop }} > {curSensor.name}</div>\r\n\r\n                                    {(() => {\r\n                                        if (curSensor.type === \"airTemp\") {\r\n                                            return <WiThermometer style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                        } else if (curSensor.type === \"humidity\") {\r\n                                            return <WiHumidity style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                        } else if (curSensor.type === \"fan\") {\r\n                                            return <WiHurricane style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                        } else if (curSensor.type === \"humidifier\") {\r\n                                            return <WiCloudUp style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                        } else if (curSensor.type === \"waterTemp\") {\r\n                                            return <WiThermometerExterior style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                        } else if (curSensor.type === \"co2\") {\r\n                                            return <img src={co2svg} alt=\"CO2 Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '28px' }} />\r\n                                        } else if (curSensor.type === \"tvoc\") {\r\n                                            return <img src={tvocSvg} alt=\"TVOC Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '28px' }} />\r\n                                        } else {\r\n                                            return <div />\r\n                                        }\r\n                                    })()}\r\n\r\n                                </div>\r\n                            )\r\n                        })()}\r\n                        {(() => {\r\n                            var pid = sensor.PID\r\n                            var tIndex = key\r\n                            var curSensor = grow.config.SENSORS[tIndex]\r\n                            var setIndicatorColor = '#FFF'\r\n\r\n                            if (this.props.liveGrowData && this.props.liveGrowData[grow.id] && (curSensor._mean || curSensor._mean === 0) && (curSensor._deviation || curSensor._deviation === 0)) {\r\n                                if (((curSensor._mean + (curSensor._deviation * 2)) < this.props.liveGrowData[grow.id][pid]) || ((curSensor._mean - (curSensor._deviation * 2)) > this.props.liveGrowData[grow.id][pid])) {\r\n                                    setIndicatorColor = '#FF0000' // BAD\r\n                                } else if (((curSensor._mean + (curSensor._deviation)) < this.props.liveGrowData[grow.id][pid]) || ((curSensor._mean - (curSensor._deviation)) > this.props.liveGrowData[grow.id][pid])) {\r\n                                    setIndicatorColor = '#ded954' // WARN\r\n                                } else {\r\n                                    setIndicatorColor = '#38c538' // GOOD\r\n                                }\r\n                            }\r\n\r\n                            return (\r\n                                <div className=\"Grow-Details-Main-Data-Current-Data\" style={{ background: setIndicatorColor }}>\r\n\r\n                                    {(() => {\r\n                                        if (!this.props.liveGrowData[grow.id]) {\r\n                                            return\r\n                                        }\r\n                                        var tIndex = key\r\n                                        var curSensor = grow.config.SENSORS[tIndex]\r\n\r\n                                        return <div>{Math.round(this.props.liveGrowData[grow.id][pid] * 10) / 10}{curSensor.unit}</div>\r\n                                    })()}\r\n                                </div>\r\n                            )\r\n                        })()}\r\n                    </div>\r\n                )\r\n            }\r\n            )\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <div style={{ width: \"100vw\" }} ref={element => this.divRef = element} >\r\n                    <div className=\"AllGraphs-Graph-Item\">\r\n                        <div className=\"AllGraphs-Graph-Main\">\r\n                            <div className=\"AllGraphs-Info\">\r\n                                <div className=\"Grow-Box-Info-Graph-Area\" >\r\n                                    <AllGraph parentSize={this.state.graphElementSize} rawGrowData={this.props.threeDayData} groupedSensors={this.state.groupedSensors} userGrows={this.props.userGrows} growIDs={this.state.growIDs} toggleWindow={this.toggleWindow} user={this.props.user} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                <div className=\"Grow-Details-Page-Panel\">\r\n                    <div id=\"Grow-Details-Data-Display\">\r\n\r\n                        <div id=\"All-Graphs-Buttons\">\r\n\r\n                            {sensorInfoRows}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllGraphs;\r\n","import React, { Component } from 'react';\r\n\r\nimport '../../styles/App.css';\r\n\r\nimport cornerLogo from '../../assets/corner-logo.png'\r\n\r\nimport { AiOutlineLineChart } from 'react-icons/ai';\r\n\r\n\r\nclass AppBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    openJournals = () => {\r\n        this.props.setMainContent('journals')\r\n    }\r\n\r\n    openGraphs = () => {\r\n        this.props.setMainContent('graphs')\r\n    }\r\n\r\n    openGrows = () => {\r\n        this.props.setMainContent('grows')\r\n    }\r\n\r\n    setGrow = (ev) => {\r\n        console.log(\"EV\", ev)\r\n        console.log(\"EV\", ev.target.dataset.value)\r\n\r\n        this.props.userGrows.forEach((grow) => {\r\n            if (grow.id === ev.target.dataset.value) {\r\n                this.props.setGrow(grow)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSignOut = () => {\r\n        this.props.handleSignOut()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        var renderedLiveGrowButtons = null;\r\n        if (this.props.userGrows !== null) {\r\n            renderedLiveGrowButtons = this.props.userGrows.map((grow) => {\r\n\r\n                var liveButtonData = null\r\n                if (this.props.liveGrowData[grow.id]) {\r\n                    liveButtonData = this.props.liveGrowData[grow.id]\r\n                }\r\n\r\n                var brokenName = grow.name.split(\" \")\r\n                var acroName = \"\"\r\n\r\n                if (grow.name.length >= 4) {\r\n                    brokenName.forEach((piece) => {\r\n                        acroName += piece.charAt(0)\r\n                    })\r\n                } else {\r\n                    acroName = grow.name\r\n                }\r\n\r\n\r\n                return (\r\n                    <div className=\"App-Bar-Button-Grow\" key={grow.id} onClick={this.setGrow} data-value={grow.id}>\r\n                        <div className=\"App-Bar-Button-Grow-Name\" data-value={grow.id}>\r\n                            {acroName}\r\n                        </div>\r\n                        {(() => {\r\n                            if (liveButtonData && liveButtonData.sA1_Temp) {\r\n                                return (\r\n                                    <div ref={this.flowerTempRef} className=\"App-Bar-Button-Grow-Temp\" data-value={grow.id}>\r\n                                        {Math.round(liveButtonData.sA1_Temp * 10) / 10}°C\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n\r\n                        {(() => {\r\n                            if (liveButtonData && liveButtonData.sA1_Humi) {\r\n                                return (\r\n                                    <div ref={this.flowerHumidityRef} className=\"App-Bar-Button-Grow-Humidity\" data-value={grow.id}>\r\n                                        {Math.round(liveButtonData.sA1_Humi * 10) / 10}%\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n\r\n        return (\r\n\r\n            <div id=\"App-Bar\" >\r\n                <div id=\"App-Bar-Logo\" onClick={this.openGrows}>\r\n                    <img src={cornerLogo} alt=\"App Logo\" style={{ maxWidth: \"100px\" }} />\r\n                </div>\r\n\r\n                {renderedLiveGrowButtons}\r\n\r\n                <div className=\"App-Bar-Button-Grow\" style={{ background: '#000' }} onClick={this.openGraphs}>\r\n                    <AiOutlineLineChart style={{ color: '#FFF', fontSize: '30px', paddingTop: '5px' }} />\r\n                </div>\r\n\r\n                <div className=\"App-Bar-Button\" onClick={this.openJournals}>\r\n                    JRNLS\r\n                </div>\r\n\r\n                <div className=\"App-Bar-Filler-Div\"></div>\r\n                <div className=\"App-Bar-Logout-Button\" onClick={this.handleSignOut}>\r\n                    &#10162;\r\n                </div>\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppBar;\r\n","import React, { Component } from 'react';\r\nimport '../styles/App.css';\r\n\r\n\r\nimport Firebase from '../config/firebaseConfig.js'\r\n\r\nimport DbHelper from './_utils/DbHelper.js'\r\n\r\n\r\n// Auth\r\nimport SignIn from './auth/SignIn.js'\r\nimport SignUp from './auth/SignUp.js'\r\n\r\n// Main Content\r\nimport GrowJournal from './main-content/GrowJournal/GrowJournal.js'\r\nimport GrowPage from './main-content/GrowPage.js'\r\nimport AllGraphs from './main-content/AllGraphs.js'\r\n\r\n\r\n// Top Bar\r\nimport AppBar from './app-bar/AppBar.js'\r\n\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmainContent: 'signin', // signin, signup, main, journal, grows, etc.\r\n\t\t\tUID: null,\r\n\t\t\tusername: '',\r\n\t\t\tjournalID: null,\r\n\t\t\tcurrentGrow: null,\r\n\t\t\tgrowID: null, //todo: remove, use currentGrow\r\n\r\n\t\t\tuserGrows: [],\r\n\t\t\tuserJournals: [],\r\n\t\t\tliveGrowData: [],\r\n\r\n\t\t\tthreeDayData: []\r\n\t\t};\r\n\r\n\t\tthis.dbHelper = new DbHelper();\r\n\r\n\t\tthis.firebase = new Firebase();\r\n\r\n\t\tthis.firebase.auth.onAuthStateChanged((user) => {\r\n\t\t\tif (user) {\r\n\t\t\t\tthis.setState({ UID: user.uid });\r\n\t\t\t\tthis.getUsername();\r\n\r\n\t\t\t\tthis.dbHelper.getUser(user.uid, this.setUser)\r\n\t\t\t\tthis.dbHelper.getUserGrows(this.setUserGrows) // currently grabbing B's hardcoded\r\n\t\t\t\tthis.dbHelper.getUserJournals(this.setUserJournals)\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tsetUser = (u) => {\r\n\t\tthis.setState({ user: u });\r\n\t}\r\n\r\n\t// To pass to components...\r\n\tsetFirebaseUserPrefs = (u) => {\r\n\t\tthis.setState({ user: u });\r\n\r\n\t\tconsole.log(\"temp user GONNASET\", u)\r\n\r\n\t\tthis.dbHelper.setUser(u)\r\n\t}\r\n\r\n\t// when config settings change...\r\n\trefreshGrows = (newGrowConfig) => {\r\n\t\tvar tempGrow = this.state.currentGrow\r\n\t\ttempGrow.config = newGrowConfig\r\n\r\n\t\tthis.setState({ currentGrow: tempGrow });\r\n\t}\r\n\r\n\tsetUserGrows = (userGrows) => {\r\n\t\tconsole.log(\"USER GROWS!\", userGrows)\r\n\r\n\t\tuserGrows.forEach((grow) => {\r\n\t\t\tthis.dbHelper.getThreeDayData(grow.id, this.setThreeDayData)\r\n\t\t})\r\n\r\n\t\tthis.setState({ userGrows: userGrows });\r\n\r\n\t\tthis.dbHelper.getLiveGrowData(userGrows, this.setLiveGrowData)\r\n\t}\r\n\r\n\tsetUserJournals = (userJournals) => {\r\n\t\tthis.setState({ userJournals: userJournals });\r\n\t}\r\n\r\n\tsetLiveGrowData = (dataID, newGrowData) => {\r\n\t\tif (newGrowData === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar currentData = this.state.liveGrowData\r\n\t\tcurrentData[dataID.toString()] = newGrowData\r\n\r\n\t\tthis.setState({ liveGrowData: currentData });\r\n\t}\r\n\r\n\tsetThreeDayData = (growDeprecate, day, data) => {\r\n\t\tvar previousData = this.state.threeDayData\r\n\r\n\t\tvar tempThreeDayData = []\r\n\r\n\t\tday = parseInt(day)\r\n\r\n\t\tif (previousData[growDeprecate]) {\r\n\t\t\ttempThreeDayData = previousData[growDeprecate]\r\n\t\t}\r\n\r\n\t\tif (tempThreeDayData[day]) {\r\n\t\t\ttempThreeDayData[day] = null\r\n\t\t}\r\n\r\n\t\ttempThreeDayData[day] = data\r\n\r\n\t\tpreviousData[growDeprecate] = tempThreeDayData\r\n\r\n\t\tthis.setState({ threeDayData: previousData });\r\n\r\n\t}\r\n\r\n\r\n\tgetUsername = () => {\r\n\t\t// Users location in tree\r\n\t\tvar ref = this.firebase.db.ref().child('users').child(this.state.UID)\r\n\r\n\t\tref.on(\"value\", (snapshot) => {\r\n\t\t\tthis.setState({ username: snapshot.val().username });\r\n\t\t}, function (errorObject) {\r\n\t\t\tconsole.log(\"The username read failed: \" + errorObject.code);\r\n\t\t});\r\n\r\n\t}\r\n\r\n\thandleSignOut = () => {\r\n\t\tthis.setState({\r\n\t\t\tUID: null\r\n\t\t});\r\n\t\tthis.firebase.auth.signOut().then(function () {\r\n\t\t\t// Sign-out successful.\r\n\t\t\tconsole.log(`signed out`)\r\n\t\t\twindow.location.reload()\r\n\t\t}).catch(function (error) {\r\n\t\t\t// An error happened.\r\n\t\t\tconsole.log(`Error signing out: ${error}`)\r\n\t\t});\r\n\t}\r\n\r\n\tsetMainContent = (setValue, id) => {\r\n\t\tthis.setState({\r\n\t\t\tmainContent: setValue,\r\n\t\t\tcurrentGrow: null,\r\n\t\t\tgrowID: id,\r\n\t\t\tjournalID: null\r\n\t\t});\r\n\t}\r\n\r\n\topenJournals = () => {\r\n\t\tif (this.state.mainContent !== 'journals') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmainContent: 'journals',\r\n\t\t\t\tjournalID: null\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tjournalID: null\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\topenGrows = () => {\r\n\t\tif (this.state.mainContent !== 'grows') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmainContent: 'grows',\r\n\t\t\t\tcurrentGrow: null\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentGrow: null\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsetGrow = (grow) => {\r\n\t\tconsole.log(\"APP Setgrow\", grow)\r\n\t\tthis.setState({\r\n\t\t\tcurrentGrow: grow,\r\n\t\t\tmainContent: 'grows'\r\n\t\t});\r\n\t}\r\n\r\n\tsetJournalID = (journalID) => {\r\n\t\tconsole.log(\"APP SetJournalID\", journalID)\r\n\t\tthis.setState({\r\n\t\t\tmainContent: 'journals',\r\n\t\t\tjournalID: journalID\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<header className=\"App-body\">\r\n\r\n\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\tif (this.state.UID) {\r\n\t\t\t\t\t\t\treturn <AppBar mainContent={this.state.mainContent} setMainContent={this.setMainContent} setGrow={this.setGrow} handleSignOut={this.handleSignOut} liveGrowData={this.state.liveGrowData} userGrows={this.state.userGrows} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})()}\r\n\r\n\t\t\t\t\t<div id=\"App-Inner-Body\">\r\n\r\n\r\n\t\t\t\t\t\t<div id=\"App-Body-Content\">\r\n\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\tif (this.state.UID) {\r\n\t\t\t\t\t\t\t\t\tswitch (this.state.mainContent) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'journals':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <GrowJournal setJournalID={this.setJournalID} journalID={this.state.journalID} userJournals={this.state.userJournals} />\r\n\t\t\t\t\t\t\t\t\t\tcase 'graphs':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <AllGraphs userGrows={this.state.userGrows} setFirebaseUser={this.setFirebaseUserPrefs} user={this.state.user} threeDayData={this.state.threeDayData} liveGrowData={this.state.liveGrowData} />\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\treturn <GrowPage refreshGrows={this.refreshGrows} setJournalID={this.setJournalID} setGrow={this.setGrow} user={this.state.user} grow={this.state.currentGrow} growID={this.state.growID} userGrows={this.state.userGrows} liveGrowData={this.state.liveGrowData} rawGrowData={this.state.threeDayData} />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tswitch (this.state.mainContent) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'signin':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <SignIn gotoSignUp={this.setMainContent} />;\r\n\t\t\t\t\t\t\t\t\t\tcase 'signup':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <SignUp gotoSignIn={this.setMainContent} />;\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\treturn <SignIn gotoSignUp={this.setMainContent} />;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})()}\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</header>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './js/serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/co2svg.fc43d345.svg\";","module.exports = __webpack_public_path__ + \"static/media/tvoc-svg.86ee762c.svg\";"],"sourceRoot":""}