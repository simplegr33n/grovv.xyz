{"version":3,"sources":["assets/corner-logo.png","config/firebaseConfig.js","App/_utils/DbHelper.js","App/auth/SignIn.js","App/auth/SignUp.js","App/main-content/GrowJournal/JournalAddEditModal.js","App/main-content/GrowJournal/FullImageModal.js","App/main-content/GrowJournal/JournalCreateModal.js","App/main-content/GrowJournal/JournalTimelineButton.js","App/main-content/GrowJournal/JournalBoxItem.js","App/main-content/GrowJournal/JournalEntry.js","App/main-content/GrowJournal/GrowJournal.js","App/main-content/Graphs/GraphSensors.js","App/main-content/GrowPage/GrowDetailsGraphs.js","App/main-content/GrowPage/GrowSettings.js","App/main-content/GrowPage/GrowDetailsPage.js","App/main-content/GrowPage.js","App/main-content/Graphs/AllGraph.js","App/main-content/AllGraphs.js","App/main-content/Graphs/LifetimeGraph.js","App/main-content/LifetimeGraphs.js","App/app-bar/AppBar.js","App/App.js","js/serviceWorker.js","index.js","assets/co2svg.svg","assets/tvoc-svg.svg"],"names":["module","exports","__webpack_require__","p","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","Object","classCallCheck","this","firebase","apps","length","initializeApp","db","database","auth","storage","DbHelper","userID","UID","setData","ref","child","on","snapshot","val","errorObject","console","log","code","u","uid","set","lifetimeObject","growID","year","month","day","userGrows","forEach","grow","_this","id","date","Date","getFullYear","toString","getMonth","days","tempDay","dy","getDate","i","staticTwoDayData","getTwoDaysAddedDays","includes","gChild","dataPoint","dataTime","time","getTime","tempCurrentData","sort","a","b","fullData","concat","dayData","update","_this2","userGrowIDs","sensors_live","key","setUserGrows","once","createdAt","journals","journalsList","keys","push","updatedAt","setUserJournals","journalID","setJournalEntries","tempEntriesList","datetime_true","tempDotsList","entry","datetime_short","tempDeepDotsList","dotDate","dotValue","journalName","openJournal","userRef","nowDate","name","previewImage","entryID","trueDate","title","content","growStage","postDate","images","closeModal","editDate","temptTrueDate","shortMonth","shortDateVar","published","grow_stage","datetime_post","datetime_edit","journal_id","jRef","file","setImages","storageRef","dateNow","metadata","contentType","type","put","then","getDownloadURL","url","urlSplit","split","thumbURL","refFromURL","delete","catch","error","SignIn","props","possibleConstructorReturn","getPrototypeOf","call","handleUsernameChange","event","setState","username","target","value","handlePasswordChange","password","handleSubmit","state","validateEmail","hideSigninFields","signInWithEmailAndPassword","errorCode","errorMessage","message","alert","SHOWFIELDS","showSigninFields","onAuthStateChanged","user","testEmail","test","String","toLowerCase","testPswd","react_default","createElement","onChange","onKeyPress","ev","enterSubmit","onClick","Component","SignUp","hideSignupFields","showSignupFields","validatePassword","createUserWithEmailAndPassword","handleGotoSignIn","gotoSignIn","postUserToFirebase","email","timestamp","userData","updates","JournalAddEditModal","handleTitleChange","handleContentChange","cancelModal","deleteAllAddedImages","saveEntry","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","dbHelper","saveJournalEntry","stop","displayFullImage","handleImageUpload","_ref2","_callee2","_context2","t0","_x","apply","arguments","tempImages","tempAddedImages","addedImages","thumb","deleteImage","dataset","img","handleImageDelete","handleDateChange","dt","handleGrowStageChange","editPost","tempTrueDate","tempPostDate","tempContent","tempTitle","undefined","tempGrowStage","tempPostId","files","_this3","renderedThumbnails","map","image","className","alt","data-value","src","react_datepicker_min_default","selected","placeholder","es","onDrop","onImageDrop","bind","accept","multiple","_ref3","getRootProps","getInputProps","role","aria-label","FullImageModal","nextImage","fullSizeList","imageUrl","currentImage","previousImage","imageList","currentFullImage","tempFullSizeList","JournalCreateModal","handleJournalNameChange","setJournalID","createJournal","JournalTimelineButton","setEntries","entries","monthDayDate","timelineDate","idVar","charAt","toUpperCase","slice","isActiveEntry","currentEntryID","array","datetimeShortMD","dateString","toDateString","JournalBoxItem","journal","updatedAtDate","updatedAtHoursString","getHours","updatedAtMinutesString","getMinutes","JournalEntry","currentEntry","editEntryByID","prevProps","prevState","datetimeTrue","GrowJournal","watchEntries","watchJournalEntries","entriesList","dotsList","timelineEntries","timelineDots","displayEntries","addTimelineEntry","displayContent","timelineEntry","openFullImageModal","fullImageModalImages","openFullImage","handleJournalChange","openCreateJournalModal","testContent","_ismounted","renderedJournalOptions","userJournals","renderedUserJournals","GrowJournal_JournalBoxItem","renderedJournalEntries","GrowJournal_JournalEntry","renderedTimelineDots","dot","GrowJournal_JournalTimelineButton","GrowJournal_JournalAddEditModal","GrowJournal_FullImageModal","GrowJournal_JournalCreateModal","GraphSensors","componentDidUpdate","growConfig","generateTickSourceArrays","rawGrowData","gwID","rawData","rawRef","concatData","list","dataLength","processData","LIGHTS","m","moment","subtract","lightsOnArray","lightsOffArray","format","off","add","createTickArray","processedData","tickRange","ticks","tempOnArray","tempOffArray","sourceArray","tick","lightBackgrounds","tickArray","window","displayWindow","data","now","reducerValue","Math","round","processedPoint","toggleWindow","e","setVAl","parseInt","render","renderTooltip","rawContent","payload","readableTime","listItems","l","activeLines","tIndex","indexOf","dataKey","curSensor","SENSORS","PID","style","color","stroke","paddingLeft","paddingRight","display","flexDirection","justifyContent","fontWeight","unit","width","height","background","displayTemp","displayFan","displayHumidity","displayHumidifier","lineItems","es6","yAxisId","strokeWidth","thickness","renderDayGraph","parentSize","xSize","floor","ySize","vertical","horizontal","verticalFill","fillOpacity","fill","domain","tickFormatter","orientation","hide","fontSize","position","marginLeft","marginTop","defaultValue","maxWidth","GrowDetailsGraphs","elementSize","graphSizeUpdated","divRef","clientWidth","clientHeight","tempSize","element","Graphs_GraphSensors","GrowSettings","getConfig","_ref","getGrowConfig","setFetchedConfig","configObj","postConfig","setGrowConfig","refreshGrows","close","sensorMeanChange","tempConfig","sensor","_mean","parseFloat","sensorDeviationChange","_deviation","sensorWeightChange","sensorColorChange","sensorTypeChange","sensorNameChange","handleLightsOnChange","handleLightsOffChange","watchConfig","sensorSettingRows","backgroundColor","userSelect","fontsize","maxHeight","wi_index_esm","co2svg","tvocSvg","maxLength","padding","justifyItems","alignContent","zIndex","margin","border","cursor","overflowY","entry_default","clearIcon","GrowDetailsPage","componentWillUnmount","harmonyRatiosUpdated","SENSOR_DEVIATIONS","SENSOR_MEANS","_i","_Object$entries","slicedToArray","dataLengthRef","processGrowData","TABLE_INIT","growData","liveData","lastLiveData","HARMONY_POINT_COUNT","HARMONY_PLUS_ONE_COUNT","HARMONY_PLUS_TWO_COUNT","HARMONY_CHECKED","DAILY_HIGHS","DAILY_HIGHS_TIMES","DAILY_LOWS","DAILY_LOWS_TIMES","DAILY_AVGS","YEST_AVGS","DAILY_POINT_COUNT","YEST_POINT_COUNT","lastDayData","yesterdayData","SENSOR_PIDS","SENSORS_INIT","ACTIVE_INIT","ACTIVE_LINES","pid","HARMONY_WARN","HARMONY_DANGER","valueOf","yIndex","_i2","_Object$entries2","_ref6","_ref5","_i3","_Object$entries3","_ref9","_ref8","avg","toggleLine","currentTarget","getAttribute","tActiveLines","forceUpdate","openCloseSettings","SHOW_SETTINGS","activeIndicatorStyle","_i4","_Object$entries4","_ref12","_ref11","sensorInfoRows","setOpacity","setPaddingTop","opacity","paddingTop","setIndicatorColor","visibility","flex","harmonyWarnFlex","harmonyDangerFlex","harmonyGoodFlex","marginBottom","bs_index_esm","GrowPage_GrowDetailsGraphs","GrowPage_GrowSettings","GrowPage","openMainPage","page","openCreateGrowModal","openGrow","setGrow","GrowPage_GrowDetailsPage","AllGraph","growIDs","newArrayLengths","valChanged","DataLengthChecks","subConcatData","superData","combinedProcessedData","subProcessedData","subCombined","tID","tPID","PREFS","GRAPHS","showSensors","g","s","firstPointTime","lastPointTime","timeWindow","defaultWindow","dataBlob","lineKey","connectNulls","AllGraphs","componentDidMount","growActiveLines","tempIdentifier","groupedSensors","calcGraphDimensions","tempUser","setUserPrefs","tWindow","setFirebaseUser","graphElementSize","dataVal","liveGrowData","overflowX","minHeight","Graphs_AllGraph","threeDayData","LifetimeGraph","normalizedData","sensorList","sensorID","renderLifetimeGraph","unixTime","LifetimeGraphs","lifetimeData","normalizeLifetimeData","setStateMonthChunk","chunk","monthChunk","processChunk","postLifetimeData","allMonths","allDays","normalizedEntries","normalizedDataPoint","dataSet","dataType","values","renamedSensor","aDate","getMonthChunkData","dayChunk","datapointCount","averagesObject","lowsObject","highsObject","_i5","_Object$entries5","_ref15","_ref14","hourChunk","_i6","_Object$entries6","_ref18","_ref17","_i7","_Object$entries7","_ref21","_ref20","sensorPID","_i8","_Object$entries8","_ref24","_ref23","HIGH","LOW","AVERAGE","Graphs_LifetimeGraph","AppBar","openJournals","setMainContent","openGraphs","openLifetime","openGrows","handleSignOut","renderedLiveGrowButtons","liveButtonData","brokenName","acroName","piece","indicatorColor","lastUpdate","difference","fromNow","paddingBottom","sA1_Temp","flowerTempRef","sA1_Humi","flowerHumidityRef","cornerLogo","ai_index_esm","gi_index_esm","App","setUser","setFirebaseUserPrefs","stateSetLifetimeData","getMonthChunk","newGrowConfig","tempGrow","currentGrow","getThreeDayData","setThreeDayData","getLiveGrowData","setLiveGrowData","dataID","newGrowData","currentData","growDeprecate","previousData","tempThreeDayData","getUsername","signOut","location","reload","setValue","mainContent","getLifetimeData","getUser","getUserGrows","getUserJournals","app_bar_AppBar","main_content_GrowPage","main_content_GrowJournal_GrowJournal","main_content_LifetimeGraphs","main_content_AllGraphs","auth_SignIn","gotoSignUp","auth_SignUp","Boolean","hostname","match","ReactDOM","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2PCOpCC,wBAAS,CACTC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,gBAeRC,EAXX,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACNI,IAASC,KAAKC,QACfF,IAASG,cAAcd,GAG3BU,KAAKK,GAAKJ,IAASK,WACnBN,KAAKO,KAAON,IAASM,OACrBP,KAAKQ,QAAUP,IAASO,oCC0kBjBC,aA7lBX,SAAAA,IAAeX,OAAAC,EAAA,EAAAD,CAAAE,KAAAS,GAEXT,KAAKC,SAAW,IAAIJ,EAEpBG,KAAKU,OAAS,mFAQVC,EAAKC,GAGCZ,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMH,GAElDI,GAAG,QAAS,SAACC,GAEU,OAAnBA,EAASC,MAKbL,EAAQI,EAASC,OAJbL,GAAQ,IAOb,SAAUM,GACTC,QAAQC,IAAI,oBAAsBF,EAAYG,wCAM9CC,GACJ,IAAIT,EAAMb,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMQ,EAAEC,KACxDJ,QAAQC,IAAI,MAAOE,GACnBT,EAAIW,IAAIF,2CAMIZ,EAAQE,GACpBO,QAAQC,IAAI,qBAEFpB,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,YAAYA,MAAMd,KAAKU,QAE1DK,GAAG,QAAS,SAACC,GACbJ,EAAQI,EAASC,QAClB,SAAUC,GACTC,QAAQC,IAAI,6BAA+BF,EAAYG,iDAK9CI,EAAgBC,EAAQC,EAAMC,EAAOC,GAClDV,QAAQC,IAAI,qBAAsBK,GAExBzB,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,YAAYA,MAAMd,KAAKU,QAAQI,MAAMY,GAAQZ,MAAMa,GAAMb,MAAMc,GAAOd,MAAMe,GAC/GL,IAAIC,yCAGEC,EAAQC,EAAMC,EAAOhB,GAC/BO,QAAQC,IAAI,iBAAmBM,EAAS,IAAMC,EAAO,IAAMC,GAGjD5B,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,aAAaA,MAAMd,KAAKU,QAAQI,MAAMY,GAAQZ,MAAM,eAAeA,MAAMa,GAAMb,MAAMc,GACxHb,GAAG,QAAS,SAACC,GACbJ,EAAQI,EAASC,QAClB,SAAUC,GACTC,QAAQC,IAAI,kBAAoBF,EAAYG,wFAW9BS,EAAWlB,8EAE7BkB,EAAUC,QAAQ,SAACC,GAELC,EAAKhC,SAASI,GAAGQ,MAAMC,MAAM,aAAaA,MAAMmB,EAAKvB,QAAQI,MAAMkB,EAAKE,IAAIpB,MAAM,aAExFC,GAAG,QAAS,SAACC,GACbJ,EAAQoB,EAAKE,GAAIlB,EAASC,QAC3B,SAAUC,GACTC,QAAQC,IAAI,UAAYY,EAAO,iBAAmBd,EAAYG,uLAYvDK,EAAQd,2FAEnBC,EAAMb,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,aAAaA,MAAMd,KAAKU,QAAQI,MAAMY,GAAQZ,MAAM,eAGvFqB,EAAO,IAAIC,KACXT,EAAOQ,EAAKE,cAAcC,YAC1BV,GAASO,EAAKI,WAAa,GAAGD,YACxBnC,OAAS,IACfyB,EAAQ,IAAMA,GAGdY,EAAO,GACPC,EAAU,MACVC,EAAKP,EAAKQ,WACJ,GAAM,KACZF,EAAUC,EAAK,GACHJ,WAAWnC,OAAS,IAC5BsC,EAAU,IAAMA,GAEpBD,EAAKA,EAAKrC,QAAUsC,GAEnBC,EAAK,GAAM,KACZD,EAAUC,EAAK,GACHJ,WAAWnC,OAAS,IAC5BsC,EAAU,IAAMA,GAEpBD,EAAKA,EAAKrC,QAAUsC,GAEpBC,EAAGJ,WAAWnC,OAAS,IACvBuC,EAAK,IAAMA,GAEfF,EAAKA,EAAKrC,QAAUuC,EAEhBE,EAAI,EAEJC,EAAmB,GACnBC,EAAsB,GAE1BN,EAAKT,QAAQ,SAACF,GACNA,EAAIS,aAAeI,EAAGJ,YAI1BzB,EAAIC,MAAMa,GAAMb,MAAMc,GAAOd,MAAMe,GAAKd,GAAG,QAAS,SAACC,GAC5C8B,EAAoBC,SAASlB,KAC9BiB,EAAoBA,EAAoB3C,QAAU0B,EAItDb,EAASe,QAAQ,SAACjB,GACdA,EAAMiB,QAAQ,SAACiB,GAEX,KADAJ,EACQ,KAAO,GAAW,IAANA,EAAS,CACzB,IAAIK,EAAYD,EAAO/B,MACnBiC,EAAW,IAAId,KAAKa,EAAUE,MAAMC,UACxCH,EAAUE,KAAOD,EACjBL,EAAiBA,EAAiB1C,QAAU8C,OAKnDH,EAAoB3C,SAAWqC,EAAKrC,OAAS,GAG9CU,EAAIC,MAAMa,GAAMb,MAAMc,GAAOd,MAAM4B,GAAI3B,GAAG,QAAS,SAACC,GAEhD,IAAIqC,EAAkB,GAGtBrC,EAASe,QAAQ,SAACjB,GACdA,EAAMiB,QAAQ,SAACiB,GAEX,KADAJ,EACQ,KAAO,GAAW,IAANA,EAAS,CACzB,IAAIK,EAAYD,EAAO/B,MACnBiC,EAAW,IAAId,KAAKa,EAAUE,MAAMC,UACxCH,EAAUE,KAAOD,EACjBG,EAAgBA,EAAgBlD,QAAU8C,OAKtDI,EAAgBC,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEJ,KAAOK,EAAEL,KAAQ,GAAK,IAExDhC,QAAQC,IAAI,oDAAsDM,GAClEP,QAAQC,IAAIiC,EAAgBlD,QAC5BgB,QAAQC,IAAIiC,EAAgB,IAC5BlC,QAAQC,IAAIiC,EAAgBA,EAAgBlD,OAAS,IAErD,IAAIsD,EAAWZ,EAAiBa,OAAOL,GAEvCI,EAASH,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEJ,KAAOK,EAAEL,KAAQ,GAAK,IAGjDvC,EAAQ6C,wJASZ/B,EAAQd,GAEpB,IAAIC,EAAMb,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,aAAaA,MAAMd,KAAKU,QAAQI,MAAMY,GAAQZ,MAAM,eAGvFqB,EAAO,IAAIC,KACXT,EAAOQ,EAAKE,cAAcC,WAC1BV,GAASO,EAAKI,WAAa,GAAGD,WAC9BV,EAAMzB,OAAS,IACfyB,EAAQ,IAAMA,GAGlB,IAAIY,EAAO,GACPC,EAAU,KACVC,EAAKP,EAAKQ,UACTD,EAAK,GAAM,KACZD,EAAUC,EAAK,GACHJ,WAAWnC,OAAS,IAC5BsC,EAAU,IAAMA,GAEpBD,EAAKA,EAAKrC,QAAUsC,GAEnBC,EAAK,GAAM,KACZD,EAAUC,EAAK,GACHJ,WAAWnC,OAAS,IAC5BsC,EAAU,IAAMA,GAEpBD,EAAKA,EAAKrC,QAAUsC,GAEpBC,EAAGJ,WAAWnC,OAAS,IACvBuC,EAAK,IAAMA,GAEfF,EAAKA,EAAKrC,QAAUuC,EAEpBF,EAAKT,QAAQ,SAACF,GAEVhB,EAAIC,MAAMa,GAAMb,MAAMc,GAAOd,MAAMe,GAAKd,GAAG,QAAS,SAACC,GAGjD,IAAI2C,EAAU,GAEd3C,EAASe,QAAQ,SAACjB,GACdA,EAAMiB,QAAQ,SAACiB,GACX,IAAIC,EAAYD,EAAO/B,MAEvBgC,EAAUE,KAAwB,IAAjBF,EAAUE,KAE3BQ,EAAQA,EAAQxD,QAAU8C,MAIlCU,EAAQL,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEJ,KAAOK,EAAEL,KAAQ,GAAK,IAEhDvC,EAAQc,EAAQG,EAAK8B,6CASnBjC,EAAQd,GAGRZ,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMd,KAAKU,QAAQI,MAAMY,GAAQZ,MAAM,UAEnFC,GAAG,QAAS,SAACC,GAEU,OAAnBA,EAASC,MAKbL,EAAQI,EAASC,OAJbL,GAAQ,IAOb,SAAUM,GACTC,QAAQC,IAAI,6BAA+BF,EAAYG,8CAMjDK,EAAQpC,GACRU,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMd,KAAKU,QAAQI,MAAMY,GAAQZ,MAAM,UACnF8C,OAAOtE,yCASDoC,EAAQd,GAGRZ,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMd,KAAKU,QAAQI,MAAMY,GAAQZ,MAAM,UAAUA,MAAM,eAEnGC,GAAG,QAAS,SAACC,GAEU,OAAnBA,EAASC,MAKbL,EAAQI,EAASC,OAJbL,GAAQ,IAOb,SAAUM,GACTC,QAAQC,IAAI,6BAA+BF,EAAYG,0CAKrDK,GAEI1B,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMd,KAAKU,QAAQI,MAAMY,GAAQZ,MAAM,UAAUA,MAAM,eAEnGU,KAAI,wCAUCZ,GAAS,IAAAiD,EAAA7D,KAERA,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMd,KAAKU,QAAQI,MAAM,SAErEC,GAAG,QAAS,SAACC,GAEb,IAAI8C,EAAc,GAElB9C,EAASe,QAAQ,SAACjB,GACTA,EAAMG,MAAM8C,eACbD,EAAYA,EAAY3D,QAAUW,EAAMkD,OAIhD,IAAIC,EAAe,GAEnBH,EAAY/B,QAAQ,SAACiC,GACHH,EAAK5D,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAM+C,EAAKnD,QAAQI,MAAMkD,GAErEE,KAAK,QAAS,SAAClD,GAEdiD,EAAalB,SAAS/B,EAASC,SAChCgD,EAAaA,EAAa9D,QAAUa,EAASC,OAGjDgD,EAAaX,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEY,UAAYX,EAAEW,UAAa,GAAK,IAE/DvD,EAAQqD,IAET,SAAU/C,GACTC,QAAQC,IAAI,iCAAmCF,EAAYG,WAIpE,SAAUH,GACTC,QAAQC,IAAI,4BAA8BF,EAAYG,kDAY5C+C,EAAUxD,GAEdZ,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMd,KAAKU,QAAQI,MAAM,YAErEC,GAAG,QAAS,SAACC,GAEb,IAAIqD,EAAe,GAEnBrD,EAASe,QAAQ,SAACjB,GACVsD,GACAtE,OAAOwE,KAAKF,GAAUrC,QAAQ,SAAUiC,GAChClD,EAAMG,MAAMiB,KAAO8B,GACnBK,EAAaE,KAAKzD,EAAMG,WAMxCoD,EAAaf,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEiB,UAAYhB,EAAEgB,UAAa,GAAK,IAE/D5D,EAAQyD,IAET,SAAUnD,GACTC,QAAQC,IAAI,2CAA6CF,EAAYG,gDAS7DoD,GACFzE,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMd,KAAKU,QAAQI,MAAM,YAErEC,GAAG,QAAS,SAACC,GAEb,IAAIqD,EAAe,GAEnBrD,EAASe,QAAQ,SAACjB,GACduD,EAAaE,KAAKzD,EAAMG,SAG5BE,QAAQC,IAAI,kBAAmBiD,GAE/BA,EAAaf,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEiB,UAAYhB,EAAEgB,UAAa,GAAK,IAE/DC,EAAgBJ,IAEjB,SAAUnD,GACTC,QAAQC,IAAI,+BAAiCF,EAAYG,oDAK7CqD,EAAWC,GAE3B,IAAI9D,EAAMb,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,YAAYA,MAAMd,KAAKU,QAAQI,MAAM4D,GAAW5D,MAAM,WAE7FK,QAAQC,IAAI,cAAgBsD,GAE5B7D,EAAIE,GAAG,QAAS,SAACC,GAEb,IAAI4D,EAAkB,GACtB5D,EAASe,QAAQ,SAACjB,GACd8D,EAAgBL,KAAKzD,EAAMG,SAG/B2D,EAAgBtB,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEsB,cAAgBrB,EAAEqB,cAAiB,GAAK,IAE1E,IAAIC,EAAe,GACnBF,EAAgB7C,QAAQ,SAACgD,GAChBD,EAAa/B,SAASgC,EAAMC,kBAC7BF,EAAaA,EAAa3E,QAAU4E,EAAMC,kBAIlD,IAAIC,EAAmB,GACvBH,EAAa/C,QAAQ,SAACmD,GAClB,IAAIC,EAAW,GACfP,EAAgB7C,QAAQ,SAACgD,GACjBG,IAAYH,EAAMC,iBAClBG,EAASA,EAAShF,QAAU4E,KAIpCE,EAAiBA,EAAiB9E,QAAUgF,IAGhDR,EAAkBC,EAAiBK,IAEpC,SAAU/D,GACTC,QAAQC,IAAI,0BAA4BF,EAAYG,sFASxC+D,EAAaC,+EAEzBxE,EAAMb,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,YAAYA,MAAMd,KAAKU,QAAQ6D,OAElEe,EAAUtF,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMd,KAAKU,QAAQI,MAAM,YAAYA,MAAMD,EAAImD,KAE/FU,EAAY7D,EAAImD,IAChBuB,EAAU,IAAInD,KAElBvB,EAAI+C,OAAO,CAAE1B,GAAMwC,EAAWc,KAAQJ,EAAaZ,UAAae,EAAQnC,UAAWe,UAAaoB,EAAQnC,UAAWqC,aAAgB,wDACnIH,EAAQ1B,OAAO,CAAE1B,GAAMwC,EAAWc,KAAQJ,EAAaZ,UAAae,EAAQnC,UAAWe,UAAaoB,EAAQnC,UAAWqC,aAAgB,wDAEvIJ,EAAYX,iJASCA,EAAWgB,EAASC,EAAUC,EAAOC,EAASC,EAAWC,EAAUC,EAAQC,GAExF,IAAIpF,EAAMb,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,YAAYA,MAAMd,KAAKU,QAAQI,MAAM4D,GAAW5D,MAAM,WAEzFoF,GAAW,IAAI9D,MAAOgB,UAEtB+C,EAAgBR,EAChBS,EAAcD,EAAc5D,WAAa,EAAK,IACxB,IAAtB6D,EAAWjG,SACXiG,EAAa,IAAMA,GAEvB,IAAIC,EAAeD,EAAaD,EAAcxD,UAAY,IAAMwD,EAAc9D,cAEzEqD,IAGDA,EADc7E,EAAI0D,OACAP,KAGjB+B,IACDA,EAAW,IAAI3D,MAGduD,IACDA,EAAW,IAAIvD,MAInBvB,EAAIC,MAAM4E,GAAS9B,OAAO,CACtB1B,GAAMwD,EACNE,MAASA,EACTU,WAAa,EACbT,QAAWA,EACXU,WAAcT,EACdU,cAAiBT,EAAS3C,UAC1BqD,cAAiBP,EACjBrB,cAAiBc,EAASvC,UAC1B4B,eAAkBqB,EAClBK,WAAchC,EACdsB,OAAUA,IAGd7E,QAAQC,IAAI,qBAAuBsE,GAGnC,IAAIiB,EAAO3G,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,YAAYA,MAAMd,KAAKU,QAAQI,MAAM4D,GACzEY,EAAUtF,KAAKC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMd,KAAKU,QAAQI,MAAM,YAAYA,MAAM4D,GAC3Fa,EAAU,IAAInD,KAClBuE,EAAK7F,MAAM,aAAaU,IAAI+D,EAAQnC,WACpCkC,EAAQxE,MAAM,aAAaU,IAAI+D,EAAQnC,WAGvC6C,EAAWP,qFAQSkB,EAAMC,6EAEtBC,EAAa9G,KAAKC,SAASO,QAAQK,MAAMC,MAAM,YAAYA,MAAMd,KAAKU,QAE1ES,QAAQC,IAAI,YAAcwF,EAAKpB,MAE3BuB,EAAU,IAAI3E,KAEZ4E,EAAW,CAAEC,YAAaL,EAAKM,MACjBJ,EAAWhG,MAAMiG,EAAQ3D,UAAYwD,EAAKpB,MAAM2B,IAAIP,EAAMI,GAEzEI,KAAK,SAAApG,GAAQ,OAAIA,EAASH,IAAIwG,mBAC9BD,KAAK,SAAAE,GAEF,IAAIC,EAAWD,EAAIE,MAAM,OACrBC,EAAWF,EAAS,GAAK,MAAQA,EAAS,GAAK,YAAcA,EAAS,GAG1EV,EAAUS,EAAKG,oJAMTH,GAEEtH,KAAKC,SAASO,QAAQkH,WAAWJ,GAGvCK,SAASP,KAAK,WAEpBjG,QAAQC,IAAI,WAAakG,EAAM,qBAChCM,MAAM,SAAUC,GAEf1G,QAAQC,IAAI,UAAYkG,EAAM,uBClb3BQ,cAnKX,SAAAA,EAAYC,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8H,IACf7F,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAgI,GAAAI,KAAAlI,KAAM+H,KAgBVI,qBAAuB,SAACC,GACpBnG,EAAKoG,SAAS,CAAEC,SAAUF,EAAMG,OAAOC,SAlBxBvG,EAqBnBwG,qBAAuB,SAACL,GACpBnG,EAAKoG,SAAS,CAAEK,SAAUN,EAAMG,OAAOC,SAtBxBvG,EAwEnB0G,aAAe,WACXxH,QAAQC,IAAI,yBACZ,IAAIkH,EAAWrG,EAAK2G,MAAMN,SACtBI,EAAWzG,EAAK2G,MAAMF,SAC1BvH,QAAQC,IAAR,oCAAAsC,OAAgD4E,IAC3CrG,EAAK4G,cAAcP,IAQxBrG,EAAKoG,SAAS,CACVC,SAAU,GACVI,SAAU,KAEdzG,EAAK6G,mBAEL7G,EAAKhC,SAASM,KAAKwI,2BAA2BT,EAAUI,GAAUd,MAAM,SAAUC,GAE9E,IAAImB,EAAYnB,EAAMxG,KAClB4H,EAAepB,EAAMqB,QAEzB/H,QAAQC,IAAR,GAAAsC,OAAesF,EAAf,MAAAtF,OAA6BuF,IAC7BE,MAAK,GAAAzF,OAAIsF,EAAJ,MAAAtF,OAAkBuF,IACvBjJ,KAAKqI,SAAS,CAAEe,YAAY,MAKhCjI,QAAQC,IAAR,YAAAsC,OAAwB4E,EAAxB,kBAzBIa,MAAM,2BA9EKlH,EA6GnB6G,iBAAmB,WACf7G,EAAKoG,SAAS,CAAEe,YAAY,KA9GbnH,EAiHnBoH,iBAAmB,WACfpH,EAAKoG,SAAS,CAAEe,YAAY,KAhH5BnH,EAAK2G,MAAQ,CACTN,SAAU,GACVI,SAAU,GACVU,YAAY,GAGhBnH,EAAKhC,SAAW,IAAIJ,EAEpBoC,EAAKhC,SAASM,KAAK+I,mBAAmB,SAACC,GAC9BA,GACDtH,EAAKoH,qBAZEpH,6EAyBLuH,GAEV,MADiB,YACCC,KAAKC,OAAOF,GAAWG,wDAG5BC,GAEb,MADiB,yDACCH,KAAKC,OAAOE,0CAI9BzI,QAAQC,IAAI,+BACZ,IAAIkH,EAAWtI,KAAK4I,MAAMN,SACtBI,EAAW1I,KAAK4I,MAAMF,SAC1BvH,QAAQC,IAAR,0CAAAsC,OAAsD4E,IACjDtI,KAAK6I,cAAcP,IAQxBtI,KAAKqI,SAAS,CACVC,SAAU,GACVI,SAAU,KAEd1I,KAAK8I,mBAEL9I,KAAKC,SAASM,KAAKwI,2BAA2BT,EAAUI,GAAUd,MAAM,SAAUC,GAE9E,IAAImB,EAAYnB,EAAMxG,KAClB4H,EAAepB,EAAMqB,QAEzB/H,QAAQC,IAAR,GAAAsC,OAAesF,EAAf,MAAAtF,OAA6BuF,IAC7BE,MAAK,GAAAzF,OAAIsF,EAAJ,MAAAtF,OAAkBuF,IACvBjJ,KAAKqI,SAAS,CAAEe,YAAY,MAKhCjI,QAAQC,IAAR,YAAAsC,OAAwB4E,EAAxB,kBAzBIa,MAAM,2DAiFL,IAAAtF,EAAA7D,KAEL,OAAIA,KAAK4I,MAAMQ,WAEPS,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,cACJ2H,EAAAtG,EAAAuG,cAAA,qBACAD,EAAAtG,EAAAuG,cAAA,oBAEID,EAAAtG,EAAAuG,cAAA,SAAO5H,GAAG,kBAAkBsG,MAAOxI,KAAK4I,MAAMN,SAAUyB,SAAU/J,KAAKmI,wBAE3E0B,EAAAtG,EAAAuG,cAAA,uBAEID,EAAAtG,EAAAuG,cAAA,SAAO5C,KAAK,WAAWhF,GAAG,kBAAkBsG,MAAOxI,KAAK4I,MAAMF,SAC9DqB,SAAU/J,KAAKyI,qBACfuB,WAAY,SAACC,GACT9I,QAAQC,IAAR,mBAAAsC,OAA+BuG,EAAGjG,MACnB,UAAXiG,EAAGjG,KAA8B,OAAXiG,EAAGjG,KAE3BH,EAAKqG,kBAIfL,EAAAtG,EAAAuG,cAAA,WACID,EAAAtG,EAAAuG,cAAA,UAAQ5H,GAAG,oBAAoBiI,QAASnK,KAAK2I,cAA7C,gBASRkB,EAAAtG,EAAAuG,cAAA,mCA5JKM,aCyINC,cAvIX,SAAAA,EAAYtC,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqK,IACfpI,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAuK,GAAAnC,KAAAlI,KAAM+H,KAiDVuC,iBAAmB,WACfrI,EAAKoG,SAAS,CAAEe,YAAY,KAnDbnH,EAsDnBsI,iBAAmB,WACftI,EAAKoG,SAAS,CAAEe,YAAY,KAvDbnH,EA0DnBkG,qBAAuB,SAACC,GACpBnG,EAAKoG,SAAS,CAAEC,SAAUF,EAAMG,OAAOC,SA3DxBvG,EA8DnBwG,qBAAuB,SAACL,GACpBnG,EAAKoG,SAAS,CAAEK,SAAUN,EAAMG,OAAOC,SA/DxBvG,EAkEnB0G,aAAe,WACX,IAAIL,EAAWrG,EAAK2G,MAAMN,SACtBI,EAAWzG,EAAK2G,MAAMF,SAE1B,OADAvH,QAAQC,IAAR,oCAAAsC,OAAgD4E,IAC3CrG,EAAK4G,cAAcP,GAOnBrG,EAAKuI,iBAAiB9B,QAQ3BzG,EAAKhC,SAASM,KAAKkK,+BAA+BnC,EAAUI,GAAUd,MAAM,SAAUC,GAElF,IAAImB,EAAYnB,EAAMxG,KAClB4H,EAAepB,EAAMqB,QAEzB/H,QAAQC,IAAR,GAAAsC,OAAesF,EAAf,MAAAtF,OAA6BuF,OAZ7BE,MAAM,qGACNlH,EAAKoG,SAAS,CACVK,SAAU,OATdS,MAAM,+BACNlH,EAAKoG,SAAS,CACVC,SAAU,OAzEHrG,EAkGnByI,iBAAmB,WACfzI,EAAK8F,MAAM4C,WAAW,UACtBxJ,QAAQC,IAAI,wBAlGZa,EAAK2G,MAAQ,CACTN,SAAU,GACVI,SAAU,GACVU,YAAY,GAGhBnH,EAAKhC,SAAW,IAAIJ,EAEpBoC,EAAKhC,SAASM,KAAK+I,mBAAmB,SAACC,GAC/BA,EACAtH,EAAK2I,mBAAmBrB,EAAKhI,IAAKgI,EAAKsB,OAEvC5I,EAAKsI,qBAdEtI,kFAqBAV,EAAK+G,GACpB,IACIwC,GADO,IAAI1I,MACMgB,UAGjB2H,EAAW,CACXxJ,IAAKA,EACL+G,SAAUA,EACVnE,UAAW2G,EACXtG,UAAWsG,GAIXE,EAAU,GAGd,OAFAA,EAAQ,UAAYzJ,GAAOwJ,EAEpB/K,KAAKC,SAASI,GAAGQ,MAAM+C,OAAOoH,yCAG3BxB,GAEV,MADiB,YACCC,KAAKC,OAAOF,GAAWG,wDAG5BC,GAEb,MADiB,yDACCH,KAAKC,OAAOE,qCA0D9B,OAAI5J,KAAK4I,MAAMQ,WAEPS,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,cACJ2H,EAAAtG,EAAAuG,cAAA,qBACAD,EAAAtG,EAAAuG,cAAA,oBAEID,EAAAtG,EAAAuG,cAAA,SAAO5H,GAAG,kBAAkBsG,MAAOxI,KAAK4I,MAAMN,SAAUyB,SAAU/J,KAAKmI,wBAE3E0B,EAAAtG,EAAAuG,cAAA,uBAEID,EAAAtG,EAAAuG,cAAA,SAAO5C,KAAK,WAAWhF,GAAG,kBAAkBsG,MAAOxI,KAAK4I,MAAMF,SAAUqB,SAAU/J,KAAKyI,wBAE3FoB,EAAAtG,EAAAuG,cAAA,WACID,EAAAtG,EAAAuG,cAAA,UAAQ5H,GAAG,oBAAoBiI,QAASnK,KAAK2I,cAA7C,eAEJkB,EAAAtG,EAAAuG,cAAA,WACID,EAAAtG,EAAAuG,cAAA,UAAQ5H,GAAG,kBAAkBiI,QAASnK,KAAK0K,kBAA3C,gBAMRb,EAAAtG,EAAAuG,cAAA,mCAjIKM,iDC2RNa,cAhRX,SAAAA,EAAYlD,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiL,IACfhJ,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAmL,GAAA/C,KAAAlI,KAAM+H,KAgEVmD,kBAAoB,SAAC9C,GACjBnG,EAAKoG,SAAS,CAAEzC,MAAOwC,EAAMG,OAAOC,SAlErBvG,EAqEnBkJ,oBAAsB,SAAC/C,GACnBnG,EAAKoG,SAAS,CAAExC,QAASuC,EAAMG,OAAOC,SAtEvBvG,EAyEnBmJ,YAAc,WAEVnJ,EAAKoJ,uBAELpJ,EAAK8F,MAAM9B,WAAWhE,EAAK2G,MAAMlD,UA7ElBzD,EAgFnBqJ,UAhFmBxL,OAAAyL,EAAA,EAAAzL,CAAA0L,EAAAjI,EAAAkI,KAgFP,SAAAC,IAAA,IAAA9F,EAAAC,EAAA,OAAA2F,EAAAjI,EAAAoI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACmB,KAAvB7J,EAAK2G,MAAM/C,SAA+C,IAA7B5D,EAAK2G,MAAM5C,OAAO7F,OAD3C,CAAAyL,EAAAE,KAAA,eAEJ3C,MAAM,4BAFFyC,EAAAG,OAAA,iBAKR9J,EAAKoG,SAAS,CAAE/B,WAAW,IAEvBV,EAAQ,KAIRA,EAHqB,KAArB3D,EAAK2G,MAAMhD,OAAiB3D,EAAK2G,MAAMhD,MAG/B3D,EAAK2G,MAAMhD,MAFX,GAKRC,EAAU,KAIVA,EAHuB,KAAvB5D,EAAK2G,MAAM/C,SAAmB5D,EAAK2G,MAAM/C,QAG/B5D,EAAK2G,MAAM/C,QAFX,GAKd5D,EAAK+J,SAASC,iBACVhK,EAAK2G,MAAMlE,UACXzC,EAAK2G,MAAMlD,QACXzD,EAAK2G,MAAMjD,SACXC,EACAC,EACA5D,EAAK2G,MAAM9C,UACX7D,EAAK2G,MAAM7C,SACX9D,EAAK2G,MAAM5C,OACX/D,EAAKgE,YA9BD,wBAAA2F,EAAAM,SAAAR,MAhFOzJ,EAkHnBgE,WAAa,SAACP,GACVzD,EAAK8F,MAAM9B,WAAWP,IAnHPzD,EAiInBkK,iBAAmB,WAEfhL,QAAQC,IAAI,6BAnIGa,EAuInBmK,kBAvImB,eAAAC,EAAAvM,OAAAyL,EAAA,EAAAzL,CAAA0L,EAAAjI,EAAAkI,KAuIC,SAAAa,EAAO1F,GAAP,OAAA4E,EAAAjI,EAAAoI,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAV,KAAA,EAAAU,EAAAT,KAAA,EAEN7J,EAAK+J,SAASI,kBAAkBxF,EAAM3E,EAAK4E,WAFrC,OAAA0F,EAAAT,KAAA,sBAAAS,EAAAV,KAAA,EAAAU,EAAAC,GAAAD,EAAA,SAIZpL,QAAQC,IAARmL,EAAAC,IAJYD,EAAAR,OAAA,SAKL,UAAAQ,EAAAC,IALK,wBAAAD,EAAAL,SAAAI,EAAA,iBAvID,gBAAAG,GAAA,OAAAJ,EAAAK,MAAA1M,KAAA2M,YAAA,GAAA1K,EAgJnB4E,UAAY,SAACS,EAAKG,GACd,IAAImF,EAAa3K,EAAK2G,MAAM5C,OACxB6G,EAAkB5K,EAAK2G,MAAMkE,YACjCF,EAAWrI,KAAK,CAAE+C,IAAOA,EAAKyF,MAAStF,IACvCoF,EAAgBtI,KAAK,CAAE+C,IAAOA,EAAKyF,MAAStF,IAC5CxF,EAAKoG,SAAS,CACVrC,OAAQ4G,EACRE,YAAaD,KAvJF5K,EA2JnB+K,YAAc,SAAC/C,GACX,IAAIhJ,EAAMgJ,EAAG1B,OAAO0E,QAAQzE,MAC5BrH,QAAQC,IAAIH,GACZE,QAAQC,IAAIa,EAAK2G,MAAM5C,QAEvB,IAAI4G,EAAa,GAEjB3K,EAAK2G,MAAM5C,OAAOjE,QAAQ,SAACmL,GACnBA,EAAI5F,IAAIhF,aAAerB,GACvBgB,EAAKkL,kBAAkBD,EAAI5F,KAC3BrF,EAAKkL,kBAAkBD,EAAIH,QAE3BH,EAAWrI,KAAK2I,KAIxBjL,EAAKoG,SAAS,CAAErC,OAAQ4G,KA3KT3K,EA+KnBoJ,qBAAuB,WACEpJ,EAAK2G,MAAMkE,YAGjB/K,QAAQ,SAACmL,GACpBjL,EAAKkL,kBAAkBD,EAAI5F,KAC3BrF,EAAKkL,kBAAkBD,EAAIH,UArLhB9K,EAyLnBkL,kBAAoB,SAAC7F,GACjBrF,EAAK+J,SAASmB,kBAAkB7F,IA1LjBrF,EA6LnBmL,iBAAmB,SAACC,GAChBpL,EAAKoG,SAAS,CAAE1C,SAAU0H,KA9LXpL,EAiMnBqL,sBAAwB,SAAClF,GACrBnG,EAAKoG,SAAS,CAAEvC,UAAWsC,EAAMG,OAAOC,SAhMxCvG,EAAK2G,MAAQ,CACThD,MAAO,GACPC,QAAS,GACTG,OAAQ,GACR8G,YAAa,GACbpI,UAAWzC,EAAK8F,MAAMrD,UACtBqB,SAAU,IAAI3D,KACduD,SAAU,IAAIvD,KACd0D,UAAW,MACXQ,WAAW,EACXZ,QAAS,IAGbzD,EAAK+J,SAAW,IAAIvL,EAfLwB,mFAoBf,GAAIjC,KAAK+H,MAAMwF,SAAU,CAErB,IAAIC,EAAe,KAEfA,EADAxN,KAAK+H,MAAMwF,SAAS1I,cACL,IAAIzC,KAAKpC,KAAK+H,MAAMwF,SAAS1I,eAE7B7E,KAAK4I,MAAMjD,SAG9B,IAAI8H,EAAe,KAEfA,EADAzN,KAAK+H,MAAMwF,SAAS/G,cACL,IAAIpE,KAAKpC,KAAK+H,MAAMwF,SAAS/G,eAE7BxG,KAAK4I,MAAM7C,SAI9B,IAAI2H,EAAc1N,KAAK+H,MAAMwF,SAAS1H,QAClC8H,EAAY3N,KAAK+H,MAAMwF,SAAS3H,MAChCgH,EAAa5M,KAAK+H,MAAMwF,SAASvH,OAClB,OAAf4G,QAAsCgB,IAAfhB,IACvBA,EAAa,IAEjB,IAAIiB,EAAgB,KAEhBA,EADA7N,KAAK+H,MAAMwF,SAAShH,WACJvG,KAAK+H,MAAMwF,SAAShH,WAEpBvG,KAAK4I,MAAM9C,UAG/B,IAAIgI,EAAa9N,KAAK+H,MAAMwF,SAASrL,GAErClC,KAAKqI,SAAS,CACVzC,MAAO+H,EACP9H,QAAS6H,EACT/H,SAAU6H,EACVzH,SAAU0H,EACV3H,UAAW+H,EACX7H,OAAQ4G,EACRlH,QAASoI,EACTxH,WAAW,yCA0DXyH,GAAO,IAAAlK,EAAA7D,KAEfmB,QAAQC,IAAI2M,GAEZA,EAAMhM,QAAQ,SAAC6E,GACX/C,EAAKuI,kBAAkBxF,GACvBzF,QAAQC,IAAI,UAAYwF,sCA0EvB,IAAAoH,EAAAhO,KAKL,GAHAmB,QAAQC,IAAI,eACZD,QAAQC,IAAIpB,KAAK4I,MAAMjD,UAEnB3F,KAAK4I,MAAM5C,OACX,IAAIiI,EAAqBjO,KAAK4I,MAAM5C,OAAOkI,IAAI,SAACC,EAAOvL,GAAR,OAAciH,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,kBAAiBvE,EAAAtG,EAAAuG,cAAA,OAAK9F,IAAKpB,EAAGyL,IAAI,WAAWC,aAAYH,EAAM7G,IAAKiH,IAAKJ,EAAM7G,IAAK8G,UAAU,kCAAkCjE,QAAS6D,EAAK7B,mBAAoBtC,EAAAtG,EAAAuG,cAAA,OAAKwE,aAAYH,EAAM7G,IAAK6C,QAAS6D,EAAKhB,YAAaoB,UAAU,oBAAjE,QAGlP,OACIvE,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,uBACJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,4BACJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,wBAEJ2H,EAAAtG,EAAAuG,cAAC0E,EAAAjL,EAAD,CACIrB,GAAG,0BACHuM,SAAUzO,KAAK4I,MAAMjD,SACrBoE,SAAU/J,KAAKoN,mBAEnBvD,EAAAtG,EAAAuG,cAAA,UAAQ5H,GAAG,0BAA0B6H,SAAU/J,KAAKsN,sBAAuB9E,MAAOxI,KAAK4I,MAAM9C,WACzF+D,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,QAAd,QACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,UAAd,UACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,OAAd,OACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,YAAd,YACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,OAAd,QAGJqB,EAAAtG,EAAAuG,cAAA,SAAOsE,UAAU,2BAA2BM,YAAY,iBAAiBlG,MAAOxI,KAAK4I,MAAMhD,MAAOmE,SAAU/J,KAAKkL,qBAGrHrB,EAAAtG,EAAAuG,cAAA,YAAUsE,UAAU,0BAA0BM,YAAY,wBAAwBlG,MAAOxI,KAAK4I,MAAM/C,QAASkE,SAAU/J,KAAKmL,sBAE5HtB,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,2BAEXvE,EAAAtG,EAAAuG,cAAC6E,EAAA,EAAD,CACIP,UAAU,8BACVQ,OAAQ5O,KAAK6O,YAAYC,KAAK9O,MAC9B+O,OAAO,UACPC,UAAU,GACT,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,aAAcC,EAAoBF,EAApBE,cACd,OACItF,EAAAtG,EAAAuG,cAAA,MAASoF,IACLrF,EAAAtG,EAAAuG,cAAA,QAAWqF,KAEPtF,EAAAtG,EAAAuG,cAAA,KAAG5H,GAAG,mBAAN,qBAA0C2H,EAAAtG,EAAAuG,cAAA,WAA1C,WAA2DD,EAAAtG,EAAAuG,cAAA,QAAMsF,KAAK,MAAMC,aAAW,UAA5B,gBAA3D,UAAuHxF,EAAAtG,EAAAuG,cAAA,WAAvH,eAA4ID,EAAAtG,EAAAuG,cAAA,WAA5I,qBAOlB,WACE,GAAImE,EACA,OACIpE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,4BACVH,GAJf,IAYNpE,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,4BACJ2H,EAAAtG,EAAAuG,cAAA,UAAQsE,UAAU,qBAAqBjE,QAASnK,KAAKoL,aAArD,UACAvB,EAAAtG,EAAAuG,cAAA,UAAQsE,UAAU,yBAAyBjE,QAASnK,KAAKsL,WAAzD,wBAzQUlB,aC4DnBkF,cApEX,SAAAA,EAAYvH,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsP,IACfrN,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAwP,GAAApH,KAAAlI,KAAM+H,KAoBV9B,WAAa,WACThE,EAAK8F,MAAM9B,WAAW,KAtBPhE,EAyBnBsN,UAAY,WAERtN,EAAK2G,MAAM4G,aAAazN,QAAQ,SAAC0N,EAAU7M,GACnC6M,IAAaxN,EAAK2G,MAAM8G,cACpB9M,EAAIX,EAAK2G,MAAM4G,aAAarP,OAAS,GACrC8B,EAAKoG,SAAS,CAAEqH,aAAczN,EAAK2G,MAAM4G,aAAa5M,EAAI,QA9BvDX,EAsCnB0N,cAAgB,WAEZ1N,EAAK2G,MAAM4G,aAAazN,QAAQ,SAAC0N,EAAU7M,GACnC6M,IAAaxN,EAAK2G,MAAM8G,cACpB9M,EAAI,GACJX,EAAKoG,SAAS,CAAEqH,aAAczN,EAAK2G,MAAM4G,aAAa5M,EAAI,QAzCtEX,EAAK2G,MAAQ,CACTgH,UAAW3N,EAAK8F,MAAM6H,UACtBF,aAAczN,EAAK8F,MAAM8H,iBACzBL,aAAc,IALHvN,mFAWf,GAAIjC,KAAK+H,MAAM6H,UAAW,CACtB,IAAIE,EAAmB,GACvB9P,KAAK+H,MAAM6H,UAAU7N,QAAQ,SAACoM,GAC1B2B,EAAiBA,EAAiB3P,QAAUgO,EAAM7G,MAEtDtH,KAAKqI,SAAS,CAAEmH,aAAcM,sCAyClC,OAJA3O,QAAQC,IAAI,oBACZD,QAAQC,IAAIpB,KAAK4I,MAAMgH,WACvBzO,QAAQC,IAAIpB,KAAK4I,MAAM8G,cAGnB7F,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,0BACJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,mBAAmBmM,IAAI,YAAYE,IAAKvO,KAAK4I,MAAM8G,eAC3D7F,EAAAtG,EAAAuG,cAAA,UAAQK,QAASnK,KAAKiG,WAAY/D,GAAG,wBAArC,KACA2H,EAAAtG,EAAAuG,cAAA,UAAQK,QAASnK,KAAK2P,cAAezN,GAAG,uBAAxC,UACA2H,EAAAtG,EAAAuG,cAAA,UAAQK,QAASnK,KAAKuP,UAAWrN,GAAG,uBAApC,kBAhEakI,aCkEd2F,cA5DX,SAAAA,EAAYhI,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+P,IACf9N,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAiQ,GAAA7H,KAAAlI,KAAM+H,KAcViI,wBAA0B,SAAC5H,GACvBnG,EAAKoG,SAAS,CAAEjD,YAAagD,EAAMG,OAAOC,SAhB3BvG,EAmBnBmJ,YAAc,WACVnJ,EAAK8F,MAAMkI,aAAa,OApBThO,EAuBnBiO,cAvBmBpQ,OAAAyL,EAAA,EAAAzL,CAAA0L,EAAAjI,EAAAkI,KAuBH,SAAAC,IAAA,OAAAF,EAAAjI,EAAAoI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACmB,KAA3B7J,EAAK2G,MAAMxD,YADH,CAAAwG,EAAAE,KAAA,eAER3C,MAAM,yBAFEyC,EAAAG,OAAA,wBAAAH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAOF7J,EAAK+J,SAASkE,cAAcjO,EAAK2G,MAAMxD,YAAanD,EAAKoD,aAPvD,OAAAuG,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SASRzK,QAAQC,IAARwK,EAAAY,IATQZ,EAAAG,OAAA,SAUD,UAAAH,EAAAY,IAVC,yBAAAZ,EAAAM,SAAAR,EAAA,iBAvBGzJ,EAsCnBoD,YAAc,SAACX,GACXzC,EAAKoG,SAAS,CAAE3D,UAAWA,IAC3BzC,EAAK8F,MAAMkI,aAAavL,IAtCxBzC,EAAK2G,MAAQ,CACTxD,YAAa,GACbV,UAAWzC,EAAK8F,MAAMrD,WAGhCzC,EAAK+J,SAAW,IAAIvL,EAPCwB,qHA6Cf,OACI4H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,uBACJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,wBAEJ2H,EAAAtG,EAAAuG,cAAA,SAAOsE,UAAU,6BAA6BM,YAAY,wBAAwBlG,MAAOxI,KAAK4I,MAAMxD,YAAa2E,SAAU/J,KAAKgQ,0BAChInG,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,uBACJ2H,EAAAtG,EAAAuG,cAAA,UAAQsE,UAAU,4BAA4BjE,QAASnK,KAAKoL,aAA5D,UACAvB,EAAAtG,EAAAuG,cAAA,UAAQsE,UAAU,6BAA6BjE,QAASnK,KAAKkQ,eAA7D,4BAtDS9F,aC+FlB+F,cAlGX,SAAAA,EAAYpI,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmQ,IACflO,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAqQ,GAAAjI,KAAAlI,KAAM+H,KAyBVqI,WAAa,WACTnO,EAAK8F,MAAMqI,WAAWnO,EAAK8F,MAAMsI,UAzBjCpO,EAAK2G,MAAQ,CACTxD,YAAa,GACbV,UAAWzC,EAAK8F,MAAMrD,UACtB4L,aAAc,IALHrO,mFAYf,GAAIjC,KAAK+H,MAAMhD,MAAO,CAClB,IAAIwL,EAAe,IAAInO,KAAKpC,KAAK+H,MAAMhD,MAAMF,eACzCuB,EAAcmK,EAAahO,WAAa,EAAK,IACvB,IAAtB6D,EAAWjG,SACXiG,EAAa,IAAMA,GAEvB,IAAIC,EAAeD,EAAamK,EAAa5N,UAC7C3C,KAAKqI,SAAS,CAAEiI,aAAcjK,sCAW7B,IAAAxC,EAAA7D,KACD8F,EAAY9F,KAAK+H,MAAMhD,MAAMwB,WAC7BiK,EAAQ,gBAAkB1K,EAAU2K,OAAO,GAAGC,cAAgB5K,EAAU6K,MAAM,GAG9EC,GAAgB,EAChB5Q,KAAK+H,MAAM8I,iBAAmB7Q,KAAK+H,MAAMhD,MAAM7C,KAC/C0O,GAAgB,GAGpB,IAAIE,EAAS9Q,KAAK+H,MAAMhD,MAAMC,eAAgBwC,MAAM,KAChDuJ,EAAkBD,EAAM,GAAK,IAAMA,EAAM,GAEzCE,EAAa,IAAI5O,KAAKpC,KAAK+H,MAAMhD,MAAMF,eAAeoM,eAEtDxL,EAAe,KAKnB,OAJIzF,KAAK+H,MAAMsI,QAAQ,GAAGrK,SACtBP,EAAezF,KAAK+H,MAAMsI,QAAQ,GAAGrK,OAAO,GAAG+G,OAI/ClD,EAAAtG,EAAAuG,cAAA,WACM,WACE,GAAI8G,EACA,OACI/G,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,0BACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,iCAEV2C,IANnB,GAgBFlH,EAAAtG,EAAAuG,cAAA,UAAQwE,aAAYtO,KAAK+H,MAAMsI,QAASnO,GAAIsO,EAAOpC,UAAU,eAAejE,QAASnK,KAAKoQ,YAEpF,WACE,IAAKQ,EACD,OACI/G,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,0BACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,sBACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,2BACV4C,GAGH,WACE,GAAIvL,EACA,OAAOoE,EAAAtG,EAAAuG,cAAA,OAAKuE,IAAI,kBAAkBE,IAAK9I,EAAc2I,UAAU,0BAA0BjE,QAAStG,EAAKsI,mBAF7G,KATpB,YAxEc/B,aCyDrB8G,cAtDX,SAAAA,EAAYnJ,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkR,IACfjP,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAoR,GAAAhJ,KAAAlI,KAAM+H,KAOV1C,YAAc,WACVpD,EAAK8F,MAAM1C,YAAYpD,EAAK8F,MAAMoJ,UAPlClP,EAAK2G,MAAQ,CACTuI,QAASlP,EAAK8F,MAAMoJ,SAHTlP,wEAcf,IAAIkC,EAAY,IAAI/B,KAAKpC,KAAK+H,MAAMoJ,QAAQhN,WAAW8M,eAGnDG,EAAgB,IAAIhP,KAAKpC,KAAK+H,MAAMoJ,QAAQ3M,WAC5C6M,EAAuBD,EAAcE,WAAWhP,WAChB,IAAhC+O,EAAqBlR,SACrBkR,EAAuB,IAAMA,GAEjC,IAAIE,EAAyBH,EAAcI,aAAalP,WAClB,IAAlCiP,EAAuBpR,SACvBoR,EAAyB,IAAMA,GAEnC,IAAI/M,EAAY4M,EAAcH,eAAiB,MAAQI,EAAuB,IAAME,EAIpF,OACI1H,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,mBAAmBE,aAAYtO,KAAK+H,MAAMoJ,QAAQjP,GAAIiI,QAASnK,KAAKqF,aAC/EwE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,yBACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,2BACXvE,EAAAtG,EAAAuG,cAAA,WACK9J,KAAK+H,MAAMoJ,QAAQ3L,MAExBqE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,uBAAf,YACavE,EAAAtG,EAAAuG,cAAA,SAAGD,EAAAtG,EAAAuG,cAAA,SAAItF,MAIxBqF,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,oBAAf,YACavE,EAAAtG,EAAAuG,cAAA,SAAGD,EAAAtG,EAAAuG,cAAA,SAAI3F,MAKxB0F,EAAAtG,EAAAuG,cAAA,OAAKuE,IAAI,UAAUE,IAAKvO,KAAK+H,MAAMoJ,QAAQ1L,aAAc2I,UAAU,sCAlDtDhE,aCuFdqH,cAtFX,SAAAA,EAAY1J,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyR,IACfxP,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAA2R,GAAAvJ,KAAAlI,KAAM+H,KAoBVoE,iBAAmB,SAAClC,GAChBhI,EAAK8F,MAAMoE,iBAAiBlK,EAAK8F,MAAM2J,aAAa1L,QACpD/D,EAAK8F,MAAM8H,iBAAiB5F,EAAG1B,OAAO0E,QAAQzE,QAvB/BvG,EA4BnB0P,cAAgB,SAAC1H,GACbhI,EAAK8F,MAAM4J,cAAc1H,EAAG1B,OAAO0E,QAAQzE,QA3B3CvG,EAAK2G,MAAQ,GAFE3G,kFAQA2P,EAAWC,GACtB7R,KAAK4I,MAAM8I,cACP1R,KAAK4I,MAAM8I,aAAaxP,KAAO0P,EAAUF,aAAaxP,IAK9DlC,KAAKqI,SAAS,CACVqJ,aAAcE,EAAUF,gDAgBvB,IAAA7N,EAAA7D,KAEDiO,EAAqB,KACrBjO,KAAK+H,MAAM2J,cACP1R,KAAK+H,MAAM2J,aAAa1L,SACxBiI,EAAqBjO,KAAK+H,MAAM2J,aAAa1L,OAAOkI,IAAI,SAACC,EAAOvL,GAAR,OAAciH,EAAAtG,EAAAuG,cAAA,OAAK9F,IAAKpB,EAAGyL,IAAI,WAAWC,aAAYH,EAAM7G,IAAKiH,IAAKJ,EAAMpB,MAAOqB,UAAU,0BAA0BjE,QAAStG,EAAKsI,sBAIrM,IAAI2F,EAAe,KAKnB,OAJI9R,KAAK+H,MAAM2J,cAA6C,KAA5B1R,KAAK+H,MAAM2J,eACvCI,EAAe,IAAI1P,KAAKpC,KAAK+H,MAAM2J,aAAa7M,gBAIhDgF,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,qBAEXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,uBACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,qBACV0D,EAAab,gBAGlBpH,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,sBACVpO,KAAK+H,MAAM2J,aAAa9L,OAG7BiE,EAAAtG,EAAAuG,cAAA,UAAQsE,UAAU,wBAAwBE,aAAYtO,KAAK+H,MAAM2J,aAAaxP,GAAIiI,QAASnK,KAAK2R,eAAhG,gBAKJ9H,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,wBACVpO,KAAK+H,MAAM2J,aAAa7L,SAI3B,WACE,GAAIoI,EACA,OACIpE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,+BACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,uBACVH,IALnB,WAtES7D,aC6VZ2H,cA/UX,SAAAA,EAAYhK,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+R,IACf9P,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAiS,GAAA7J,KAAAlI,KAAM+H,KA6BViK,aAAe,WAAsC,IAArCtN,EAAqCiI,UAAAxM,OAAA,QAAAyN,IAAAjB,UAAA,GAAAA,UAAA,GAAzB1K,EAAK8F,MAAMrD,UACnCzC,EAAK+J,SAASiG,oBAAoBvN,EAAWzC,EAAK0C,oBA/BnC1C,EAkCnB0C,kBAAoB,SAACuN,EAAaC,GAC1BD,EAAY/R,OAAS,EACrB8B,EAAKoG,SAAS,CACVqJ,aAAcQ,EAAYA,EAAY/R,OAAS,GAC/C0Q,eAAgBqB,EAAYA,EAAY/R,OAAS,GAAG+B,GACpDkQ,gBAAiBF,EACjBG,aAAcF,EACdG,eAAgBH,EAASA,EAAShS,OAAS,KAG/C8B,EAAKoG,SAAS,CACVqJ,aAAc,KACdb,eAAgB,KAChBuB,gBAAiB,GACjBC,aAAc,GACdC,eAAgB,KAIxBrQ,EAAKmO,WAAW+B,EAASA,EAAShS,OAAS,KArD5B8B,EAwDnBsQ,iBAAmB,WACftQ,EAAKoG,SAAS,CAAEmK,eAAgB,SAzDjBvQ,EA4DnB0P,cAAgB,SAACjM,GACbvE,QAAQC,IAAI,SAAWsE,GACvBvE,QAAQC,IAAIsE,GAEZzD,EAAK2G,MAAMwJ,gBAAgBrQ,QAAQ,SAAC0Q,GAC5BA,EAAcvQ,KAAOwD,GACrBzD,EAAKoG,SAAS,CACVqJ,aAAce,EACd5B,eAAgB4B,EAAcvQ,GAC9BsQ,eAAgB,YArEbvQ,EA6EnByQ,mBAAqB,SAAC1M,GAElB/D,EAAKoG,SAAS,CACVmK,eAAgB,aAChBG,qBAAsB3M,KAjFX/D,EAqFnB2Q,cAAgB,SAACnD,GAEbtO,QAAQC,IAAI,YACZD,QAAQC,IAAIqO,GAEZxN,EAAKoG,SAAS,CACVwH,iBAAkBJ,KA3FPxN,EAgGnBgE,WAAa,SAACjC,GAELA,GAAe,KAARA,GAKZ/B,EAAKoG,SAAS,CAAEmK,eAAgB,SAChCvQ,EAAK2G,MAAMwJ,gBAAgBrQ,QAAQ,SAAC0Q,GAC5BA,EAAcvQ,KAAO8B,GACrB/B,EAAKoG,SAAS,CACVqJ,aAAce,EACd5B,eAAgB4B,EAAcvQ,QATtCD,EAAKoG,SAAS,CAAEmK,eAAgB,UAnGrBvQ,EAoHnBgO,aAAe,SAAC/N,GACZ,GAAW,OAAPA,EAKA,OAJAD,EAAKoG,SAAS,CACVmK,eAAgB,cAEpBvQ,EAAK8F,MAAMkI,aAAa,MAI5BhO,EAAKoG,SAAS,CACVmK,eAAgB,OAChB9N,UAAWxC,IAEfD,EAAK8F,MAAMkI,aAAa/N,GACxBD,EAAK+P,aAAa9P,IAlIHD,EAqInBmO,WAAa,SAACC,GACLA,GAILpO,EAAKoG,SAAS,CACVqJ,aAAcrB,EAAQ,GACtBQ,eAAgBR,EAAQ,GAAGnO,GAC3BoQ,eAAgBjC,KA7ILpO,EAkJnB4Q,oBAAsB,SAAC5I,GACnB9I,QAAQC,IAAI,sBACZD,QAAQC,IAAI6I,EAAG1B,OAAOC,OACtBvG,EAAKoG,SAAS,CACVqJ,aAAc,KACdb,eAAgB,KAChByB,eAAgB,KAEpBrQ,EAAK8F,MAAMkI,aAAahG,EAAG1B,OAAOC,OAClCvG,EAAK+P,aAAa/H,EAAG1B,OAAOC,QA3JbvG,EA8JnB6Q,uBAAyB,WACrB7Q,EAAKoG,SAAS,CAAEmK,eAAgB,oBA/JjBvQ,EAkKnBoD,YAAc,SAAC8L,GACXlP,EAAKoG,SAAS,CACV3D,UAAWyM,EAAQjP,KAEvBD,EAAK8F,MAAMkI,aAAakB,EAAQjP,IAChCD,EAAK+P,aAAab,EAAQjP,KArK1BD,EAAK2G,MAAQ,CACT4J,eAAgB,OAChBF,eAAgB,GAChBZ,aAAc,KACdb,eAAgB,KAChBkC,YAAa,GACbX,gBAAiB,GACjB1N,UAAWzC,EAAK8F,MAAMrD,UACtBiO,qBAAsB,KACtB9C,iBAAkB,MAGtB5N,EAAK+J,SAAW,IAAIvL,EAdLwB,mFAmBfjC,KAAKgT,YAAa,EAEdhT,KAAK+H,MAAMrD,WACX1E,KAAKgS,aAAahS,KAAK+H,MAAMrD,0DAKjC1E,KAAKgT,YAAa,mCA+Ib,IAAAnP,EAAA7D,KAEDiT,EAAyB,GACzBjT,KAAK+H,MAAMmL,aAAa/S,OAAS,IACjC8S,EAAyBjT,KAAK+H,MAAMmL,aAAahF,IAAI,SAACiD,GAAD,OAAatH,EAAAtG,EAAAuG,cAAA,UAAQ9F,IAAKmN,EAAQjP,GAAIsG,MAAO2I,EAAQjP,IAAKiP,EAAQ3L,SAG3H,IAAI2N,EAAuB,KACvBnT,KAAK+H,MAAMmL,eACXC,EAAuBnT,KAAK+H,MAAMmL,aAAahF,IAAI,SAACiD,GAAD,OAC/CtH,EAAAtG,EAAAuG,cAAA,OAAK9F,IAAKmN,EAAQjP,GAAIkM,UAAU,8BAC5BvE,EAAAtG,EAAAuG,cAACsJ,EAAD,CAAgBjC,QAASA,EAAS9L,YAAaxB,EAAKwB,kBAKhE,IAAIgO,EAAyB,KACzBrT,KAAK4I,MAAM0J,iBACXe,EAAyBrT,KAAK4I,MAAM0J,eAAepE,IAAI,SAACnJ,GAAD,OACnD8E,EAAAtG,EAAAuG,cAACwJ,EAAD,CAActP,IAAKe,EAAM7C,GAAIyP,cAAe9N,EAAK8N,cAAeD,aAAc3M,EAAO8K,iBAAkBhM,EAAK+O,cAAezG,iBAAkBtI,EAAK6O,wBAI1J,IAAIa,EAAuB,KAO3B,OANIvT,KAAK4I,MAAMyJ,eACXkB,EAAuBvT,KAAK4I,MAAMyJ,aAAanE,IAAI,SAACsF,GAAD,OAC/C3J,EAAAtG,EAAAuG,cAAC2J,EAAD,CAAuBzP,IAAKwP,EAAI,GAAGxO,eAAgB6L,eAAgBhN,EAAK+E,MAAMiI,eAAgBT,WAAYvM,EAAKuM,WAAYrL,MAAOyO,EAAI,GAAInD,QAASmD,OAOvJ3J,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,gBACJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,gBACJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,0BAGIiR,IAAyBtP,EAAKkE,MAAMrD,UAEhCmF,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,2BAGJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,4BACJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,4BAAR,iBACA2H,EAAAtG,EAAAuG,cAAA,UAAQsE,UAAU,kBAAkBjE,QAAStG,EAAKiP,wBAAlD,MAMJjJ,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,oBACHiR,IAILtP,EAAKkE,MAAMrD,eAAhB,EAECmF,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,4BACJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,4BAAR,iBACA2H,EAAAtG,EAAAuG,cAAA,UAAQsE,UAAU,kBAAkBjE,QAAStG,EAAKiP,wBAAlD,MASd,WACE,GAAIG,GAA0BpP,EAAKkE,MAAMrD,UACrC,OACImF,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,0BACXvE,EAAAtG,EAAAuG,cAAA,UAAQ5H,GAAG,4BAA4B6H,SAAUlG,EAAKgP,oBAAqBrK,MAAO3E,EAAKkE,MAAMrD,WACxFuO,GAELpJ,EAAAtG,EAAAuG,cAAA,UAAQsE,UAAU,kBAAkBjE,QAAStG,EAAKiP,wBAAlD,MAPd,GAeA,WACE,GAAIjP,EAAKkE,MAAMrD,UACX,OACImF,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,2BAEImR,EAEIxJ,EAAAtG,EAAAuG,cAAA,WACKuJ,GAKLxJ,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,qBAAf,sCAb1B,IA6BJ,WACE,GAAIvK,EAAKkE,MAAMrD,UACX,OACImF,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,sBAEJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,4BACJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,kBAER2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,kBAEHqR,EAED1J,EAAAtG,EAAAuG,cAAA,UAAQ5H,GAAG,mBAAmBiI,QAAStG,EAAK0O,kBAA5C,QAZtB,IA2BJ,WAEE,OAAQ1O,EAAK+E,MAAM4J,gBACf,IAAK,MACD,OAAO3I,EAAAtG,EAAAuG,cAAC4J,EAAD,CAAqBhP,UAAWb,EAAKkE,MAAMrD,UAAWuB,WAAYpC,EAAKoC,WAAYsH,SAAS,QACvG,IAAK,OACD,OAAO1D,EAAAtG,EAAAuG,cAAC4J,EAAD,CAAqBhP,UAAWb,EAAKkE,MAAMrD,UAAWuB,WAAYpC,EAAKoC,WAAYsH,SAAU1J,EAAK+E,MAAM8I,eACnH,IAAK,aACD,OAAO7H,EAAAtG,EAAAuG,cAAC6J,EAAD,CAAgB1N,WAAYpC,EAAKoC,WAAY2J,UAAW/L,EAAK+E,MAAM+J,qBAAsB9C,iBAAkBhM,EAAK+E,MAAMiH,mBACjI,IAAK,iBACD,OAAOhG,EAAAtG,EAAAuG,cAAC8J,EAAD,CAAoBlP,UAAWb,EAAKkE,MAAMrD,UAAWuL,aAAcpM,EAAKoM,eACnF,IAAK,OAEL,QACI,OAAOpG,EAAAtG,EAAAuG,cAAA,aAdjB,WAxTQM,8CC8SXyJ,cAjTX,SAAAA,EAAY9L,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6T,IACf5R,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAA+T,GAAA3L,KAAAlI,KAAM+H,KAyBV+L,mBAAqB,WAOjB,GALI7R,EAAK8F,MAAM/F,MAAQC,EAAK8R,aAAe9R,EAAK8F,MAAM/F,KAAK1C,SACvD2C,EAAK8R,WAAa9R,EAAK8F,MAAM/F,KAAK1C,OAClC2C,EAAK+R,4BAGL/R,EAAK8F,MAAMkM,aAAehS,EAAK8F,MAAM/F,KAAM,CAE3C,IAAIkS,EAAOjS,EAAK8F,MAAM/F,KAAKE,GACvBiS,EAAUlS,EAAK8F,MAAMkM,YAEzB,GAAIE,EAAQD,MAAYjS,EAAKmS,QAAWD,EAAQD,GAAMC,EAAQD,GAAM/T,OAAS,KAAO8B,EAAKmS,QAAS,CAC9FnS,EAAKmS,OAASD,EAAQD,GAAMC,EAAQD,GAAM/T,OAAS,GAEnD,IAAIkU,EAAa,GAEjBF,EAAQD,GAAMnS,QAAQ,SAACuS,GACnBD,EAAaA,EAAW3Q,OAAO4Q,KAG/BrS,EAAKsS,aAAeF,EAAWlU,SAC/B8B,EAAKsS,WAAaF,EAAWlU,OAC7BkU,EAAW/Q,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEJ,KAAOK,EAAEL,KAAQ,GAAK,IAGnDlB,EAAKoS,WAAaA,EAClBpS,EAAKuS,kBArDFvS,EA4DnB+R,yBAA2B,WACvB,GAAK/R,EAAK8F,MAAM/F,KAAK1C,OAAOmV,OAA5B,CAIA,IAAIC,EAAIC,IAAO,IAAIvS,MACnBsS,EAAEE,SAAS,EAAG,QAEd,IAAIC,EAAgB,GAChBC,EAAiB,GAErBD,EAAcA,EAAc1U,QAAUwU,IAAO,IAAIvS,KAAKsS,EAAEK,OAAO,KAAO,IAAM9S,EAAK8F,MAAM/F,KAAK1C,OAAOmV,OAAO1T,KAAKgU,OAAO,KACtHD,EAAeA,EAAe3U,QAAUwU,IAAO,IAAIvS,KAAKsS,EAAEK,OAAO,KAAO,IAAM9S,EAAK8F,MAAM/F,KAAK1C,OAAOmV,OAAOO,MAAMD,OAAO,KAEzHL,EAAEO,IAAI,EAAG,QAETJ,EAAcA,EAAc1U,QAAUwU,IAAO,IAAIvS,KAAKsS,EAAEK,OAAO,KAAO,IAAM9S,EAAK8F,MAAM/F,KAAK1C,OAAOmV,OAAO1T,KAAKgU,OAAO,KACtHD,EAAeA,EAAe3U,QAAUwU,IAAO,IAAIvS,KAAKsS,EAAEK,OAAO,KAAO,IAAM9S,EAAK8F,MAAM/F,KAAK1C,OAAOmV,OAAOO,MAAMD,OAAO,KAEzHL,EAAEO,IAAI,EAAG,QAETJ,EAAcA,EAAc1U,QAAUwU,IAAO,IAAIvS,KAAKsS,EAAEK,OAAO,KAAO,IAAM9S,EAAK8F,MAAM/F,KAAK1C,OAAOmV,OAAO1T,KAAKgU,OAAO,KACtHD,EAAeA,EAAe3U,QAAUwU,IAAO,IAAIvS,KAAKsS,EAAEK,OAAO,KAAO,IAAM9S,EAAK8F,MAAM/F,KAAK1C,OAAOmV,OAAOO,MAAMD,OAAO,KAEzHL,EAAEO,IAAI,EAAG,QAETJ,EAAcA,EAAc1U,QAAUwU,IAAO,IAAIvS,KAAKsS,EAAEK,OAAO,KAAO,IAAM9S,EAAK8F,MAAM/F,KAAK1C,OAAOmV,OAAO1T,KAAKgU,OAAO,KACtHD,EAAeA,EAAe3U,QAAUwU,IAAO,IAAIvS,KAAKsS,EAAEK,OAAO,KAAO,IAAM9S,EAAK8F,MAAM/F,KAAK1C,OAAOmV,OAAOO,MAAMD,OAAO,KAEzH9S,EAAKoG,SAAS,CACVwM,cAAeA,EACfC,eAAgBA,IAGpB7S,EAAK4S,cAAgBA,EACrB5S,EAAK6S,eAAiBA,EAEtB7S,EAAKiT,oBAjGUjT,EAqGnBiT,gBAAkB,WAA8C,IAA7CC,EAA6CxI,UAAAxM,OAAA,QAAAyN,IAAAjB,UAAA,GAAAA,UAAA,GAA7B1K,EAAK2G,MAAMuM,cAC1C,GAAKA,GAAkBA,EAAc,GAArC,CAIA,IAAIC,EAAY,CAAC,IAAIhT,KAAK+S,EAAc,GAAGhS,MAAMC,UAAW,IAAIhB,KAAK+S,EAAcA,EAAchV,OAAS,GAAGgD,MAAMC,WAE/GiS,EAAQ,GAERC,EAAcrT,EAAK4S,cACnBU,EAAetT,EAAK6S,eAExB,GAAKS,GAAiBD,EAAtB,CAIA,IAAIE,EAAcF,EAAY5R,OAAO6R,GAErCC,EAAYlS,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,IAE1CgS,EAAYzT,QAAQ,SAAC0T,GACbA,EAAOL,EAAU,IAAMK,EAAOL,EAAU,KACxCC,EAAMA,EAAMlV,QAAUsV,KAK1BH,EAAYvS,SAASsS,EAAM,IAC3BpT,EAAKoG,SAAS,CAAEqN,iBAAkB,CAAC,YAAa,eAEhDzT,EAAKoG,SAAS,CAAEqN,iBAAkB,CAAC,YAAa,eAIpDzT,EAAKoG,SAAS,CAAEsN,UAAWN,OAvIZpT,EA2InBuS,YAAc,WAAuC,IAAtCoB,EAAsCjJ,UAAAxM,OAAA,QAAAyN,IAAAjB,UAAA,GAAAA,UAAA,GAA7B1K,EAAK2G,MAAMiN,cAC3BC,EAAO,KACX,GAAK7T,EAAKoS,WAAV,CAGIyB,EAAO7T,EAAKoS,WAGhB,IAAIc,EAAgB,GAChBvS,GAAK,EACLmT,GAAM,IAAI3T,MAAOgB,UAEjB4S,EAAeC,KAAKC,MAAMN,EAAS,OACnCI,EAAe,IACfA,EAAe,GAInBF,EAAK/T,QAAQ,SAACkB,GACV,GAAI8S,EAAM9S,EAAUE,KAAOyS,IAEb,MADVhT,GACeA,EAAIoT,IAAiB,GAAG,CACnC,IAAIG,EAAiBlT,EACrBkS,EAAcA,EAAchV,QAAUgW,KAKlDlU,EAAKoG,SAAS,CACV8M,cAAeA,IAGnBlT,EAAKiT,gBAAgBC,KA3KNlT,EA+KnBmU,aAAe,SAACC,GACZ,IAAIC,EAASC,SAASF,EAAE9N,OAAOC,OAE/BvG,EAAKoG,SAAS,CAAEwN,cAAeS,IAC/BrU,EAAKuS,YAAY8B,GACjBrU,EAAKuU,UApLUvU,EAuLnBwU,cAAgB,SAAC1O,GACb,IAAI2O,EAAa3O,EAAM4O,QACvB,GAAmB,OAAfD,GAA6C,IAAtBA,EAAWvW,OAAtC,CAIA,IAAIyW,EAAejC,IAAO5M,EAAM4O,QAAQ,GAAGA,QAAQxT,MAAM4R,OAAO,eAE1D8B,EAAYH,EAAWxI,IAAI,SAAC4I,GAAD,OAC5B,WACG,GAAI7U,EAAK8F,MAAMgP,YAAa,CACxB,IAAIC,EAAS/U,EAAK8F,MAAMgP,YAAYE,QAAQH,EAAEI,SAC1CC,EAAYlV,EAAK8F,MAAM/F,KAAK1C,OAAO8X,QAAQJ,GAC/C,IAAKG,EACD,OAIJ,OACItN,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,kCAAkCpK,IAAKmT,EAAUE,IAAKC,MAAO,CAAEC,MAAOT,EAAEU,OAAQC,YAAa,MAAOC,aAAc,QAC7H7N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEC,MAAOT,EAAEU,OAAQG,QAAS,OAAQC,cAAe,MAAOC,eAAgB,kBAClFhO,EAAAtG,EAAAuG,cAAA,WAAMgN,EAAEtR,KAAR,MACAqE,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEQ,WAAY,MAASpB,EAAW,GAAGC,QAAQG,EAAEI,SAA3D,IAAsEC,EAAUY,OAEpFlO,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEU,MAAO,OAAQC,OAAQ,MAAOC,WAAY,eAfvE,KAuBL,OACIrO,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,8BACXvE,EAAAtG,EAAAuG,cAAA,WAAM8M,GAELC,KAzNT5U,EAAK2G,MAAQ,CACTiN,cAAe,MAEfhB,cAAe,GACfC,eAAgB,GAChBa,UAAW,GACXD,iBAAkB,CAAC,YAAa,cAGpCzT,EAAKkW,aAAc,EACnBlW,EAAKmW,YAAa,EAClBnW,EAAKoW,iBAAkB,EACvBpW,EAAKqW,mBAAoB,EAdVrW,mFAmBfjC,KAAKgT,YAAa,iDAIlBhT,KAAKgT,YAAa,mCA4Mb,IAAAnP,EAAA7D,KAECuY,EAAYvY,KAAK+H,MAAM/F,KAAK1C,OAAO8X,QAAQlJ,IAAI,SAAC4I,GAAD,OAEzCjT,EAAKkE,MAAMgP,aAAelT,EAAKkE,MAAMgP,YAAYhU,SAAS+T,EAAEO,KAC7C,YAAXP,EAAE5P,MAAiC,cAAX4P,EAAE5P,MAAmC,QAAX4P,EAAE5P,KAC7C2C,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,OAAOvR,KAAK,WAAW1B,KAAMsR,EAAEtR,KAAM0R,QAASJ,EAAEO,IAAKrT,IAAK8S,EAAEO,IAAKG,OAAQV,EAAES,MAAOmB,YAAa5B,EAAE6B,UAAWnF,KAAK,IAE/H3J,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,QAAQvR,KAAK,WAAW1B,KAAMsR,EAAEtR,KAAM0R,QAASJ,EAAEO,IAAKrT,IAAK8S,EAAEO,IAAKG,OAAQV,EAAES,MAAOmB,YAAa5B,EAAE6B,UAAWnF,KAAK,IAGnI3P,EAAKkE,MAAMgP,iBAAhB,EACY,YAAXD,EAAE5P,MAAiC,cAAX4P,EAAE5P,MAAmC,QAAX4P,EAAE5P,KAC7C2C,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,OAAOvR,KAAK,WAAW1B,KAAMsR,EAAEtR,KAAM0R,QAASJ,EAAEO,IAAKrT,IAAK8S,EAAEO,IAAKG,OAAQV,EAAES,MAAOmB,YAAa5B,EAAE6B,UAAWnF,KAAK,IAE/H3J,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,QAAQvR,KAAK,WAAW1B,KAAMsR,EAAEtR,KAAM0R,QAASJ,EAAEO,IAAKrT,IAAK8S,EAAEO,IAAKG,OAAQV,EAAES,MAAOmB,YAAa5B,EAAE6B,UAAWnF,KAAK,MAOnJoF,EAAiB,KACrB,GAAI5Y,KAAK4I,MAAMuM,eAAiBnV,KAAK4I,MAAMuM,cAAc,IACjDnV,KAAK+H,MAAM8Q,WAAY,CACvB,IAAIC,EAAQ7C,KAAK8C,MAAiC,IAA3B/Y,KAAK+H,MAAM8Q,WAAW,IACzCG,EAAQ/C,KAAK8C,MAAiC,GAA3B/Y,KAAK+H,MAAM8Q,WAAW,IAE7CD,EACI/O,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAWR,MAAOc,EAAOb,OAAQe,EAAOlD,KAAM9V,KAAK4I,MAAMuM,eAEpDoD,EAED1O,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAeS,UAAQ,EAACC,YAAY,EAAOC,aAAc,CAACnZ,KAAK4I,MAAM8M,iBAAiB,GAAI1V,KAAK4I,MAAM8M,iBAAiB,IAAK8B,OAAO,OAAO4B,YAAa,KAEtJvP,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CACI/C,KAAM,CAAE4D,KAAM,WACdnC,QAAQ,OACRhQ,KAAK,SACLoS,OAAQ,EAAC,IAAIlX,MAAOgB,UAAW,IAAIhB,KAAK,IAAIA,KAASpC,KAAK4I,MAAMiN,eAAezS,WAC/EiS,MAAOrV,KAAK4I,MAAM+M,UAClB4D,cAAe,SAAC9D,GAAD,OAAUd,IAAc,EAAPc,GAAUV,OAAO,kBAErDlL,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAOC,QAAQ,OAAOe,YAAY,OAAOF,OAAQ,CAAC,IAAK7D,KAAM,CAAE4D,KAAM,aACrExP,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAOC,QAAQ,QAAQgB,MAAM,EAAMD,YAAY,QAAQ/D,KAAM,CAAE4D,KAAM,aACrExP,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAS3S,QAAS7F,KAAKyW,iBASvC,OAEI5M,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,mBAEVwK,EAGD/O,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEU,MAAO,OAAQ0B,SAAU,SAAU/B,QAAS,OAAQC,cAAe,SAAU+B,SAAU,WAAYC,WAAY,OAAQC,UAAW,OAE5IhQ,EAAAtG,EAAAuG,cAAA,UAAQC,SAAU/J,KAAKoW,aAAclU,GAAG,0BAA0B4X,aAAc,MAAUxC,MAAO,CAAEoC,SAAU,QAASK,SAAU,OAAQ9B,OAAQ,SAC5IpO,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAO,MAAf,SACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAO,OAAf,MACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAO,OAAf,OACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAO,OAAf,OACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAO,QAAf,iBAzSG4B,aCwCZ4P,cA1CX,SAAAA,EAAYjS,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAga,IACf/X,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAka,GAAA9R,KAAAlI,KAAM+H,KACDa,MAAQ,CACTqR,YAAa,IAGjBhY,EAAKiY,iBAAmB,EANTjY,mFAUfjC,KAAKgT,YAAa,+CAIlB,IAAwB,IAApBhT,KAAKgT,WAAT,CAIA,IAAIjM,EAAU,IAAI3E,KAClB,GAAMpC,KAAK4I,MAAMqR,cAAgB,CAACja,KAAKma,OAAOC,YAAapa,KAAKma,OAAOE,eAAoBtT,EAAQ3D,UAAYpD,KAAKka,iBAAoB,IAAO,CAC3I,IAAII,EAAW,CAACta,KAAKma,OAAOC,YAAepa,KAAKma,OAAOC,YAAc,IAAO,GAAIpa,KAAKma,OAAOE,cAExFC,IAAata,KAAK4I,MAAMqR,cACxBja,KAAKqI,SAAS,CAAE4R,YAAaK,IAC7Bta,KAAKka,iBAAmBnT,EAAQ3D,4DAMxCpD,KAAKgT,YAAa,mCAGb,IAAAnP,EAAA7D,KACL,OACI6J,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,2BAA2BrB,IAAK,SAAA0Z,GAAO,OAAI1W,EAAKsW,OAASI,IAC7D1Q,EAAAtG,EAAAuG,cAAC0Q,EAAD,CAAczD,YAAa/W,KAAK+H,MAAMgP,YAAa8B,WAAY7Y,KAAK4I,MAAMqR,YAAahG,YAAajU,KAAK+H,MAAMkM,YAAajS,KAAMhC,KAAK+H,MAAM/F,eAtC7HoI,yEC+VjBqQ,cAtVX,SAAAA,EAAY1S,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAya,IACfxY,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAA2a,GAAAvS,KAAAlI,KAAM+H,KAiBV2S,UAlBmB,eAAAC,EAAA7a,OAAAyL,EAAA,EAAAzL,CAAA0L,EAAAjI,EAAAkI,KAkBP,SAAAC,EAAO9K,GAAP,OAAA4K,EAAAjI,EAAAoI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEE7J,EAAK+J,SAAS4O,cAAc3Y,EAAK8F,MAAM/F,KAAKE,GAAItB,GAFlD,OAAAgL,EAAAE,KAAA,sBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAIJzK,QAAQC,IAARwK,EAAAY,IAJIZ,EAAAG,OAAA,SAKG,UAAAH,EAAAY,IALH,wBAAAZ,EAAAM,SAAAR,EAAA,iBAlBO,gBAAAe,GAAA,OAAAkO,EAAAjO,MAAA1M,KAAA2M,YAAA,GAAA1K,EA2BnB4Y,iBAAmB,SAACC,GAChB7Y,EAAKoG,SAAS,CACV/I,OAAQwb,KA7BG7Y,EAmCnB8Y,WAAa,WAET9Y,EAAK+J,SAASgP,cAAc/Y,EAAK8F,MAAM/F,KAAKE,GAAID,EAAK2G,MAAMtJ,QAE3D2C,EAAK8F,MAAMkT,aAAahZ,EAAK2G,MAAMtJ,QAEnC2C,EAAK8F,MAAMmT,SAzCIjZ,EA4CnBkZ,iBAAmB,SAAC9E,GAChBlV,QAAQC,IAAI,UAAYiV,EAAE9N,OAAOrG,GAAK,KAAOmU,EAAE9N,OAAOC,OAEtD,IAAI4S,EAAanZ,EAAK2G,MAAMtJ,OAC5B8b,EAAWhE,QAAQrV,QAAQ,SAACsZ,GACpBA,EAAOhE,MAAQhB,EAAE9N,OAAOrG,KACxBmZ,EAAOC,MAAQC,WAAWlF,EAAE9N,OAAOC,UAI3CvG,EAAKoG,SAAS,CACV/I,OAAQ8b,KAvDGnZ,EA2DnBuZ,sBAAwB,SAACnF,GACrBlV,QAAQC,IAAI,UAAYiV,EAAE9N,OAAOrG,GAAK,KAAOmU,EAAE9N,OAAOC,OAEtD,IAAI4S,EAAanZ,EAAK2G,MAAMtJ,OAC5B8b,EAAWhE,QAAQrV,QAAQ,SAACsZ,GACpBA,EAAOhE,MAAQhB,EAAE9N,OAAOrG,KACxBmZ,EAAOI,WAAaF,WAAWlF,EAAE9N,OAAOC,UAIhDvG,EAAKoG,SAAS,CACV/I,OAAQ8b,KAtEGnZ,EA0EnByZ,mBAAqB,SAACrF,GAClBlV,QAAQC,IAAI,UAAYiV,EAAE9N,OAAOrG,GAAK,KAAOmU,EAAE9N,OAAOC,OAEtD,IAAI4S,EAAanZ,EAAK2G,MAAMtJ,OAC5B8b,EAAWhE,QAAQrV,QAAQ,SAACsZ,GACpBA,EAAOhE,MAAQhB,EAAE9N,OAAOrG,KACxBmZ,EAAO1C,UAAYtC,EAAE9N,OAAOC,SAIpCvG,EAAKoG,SAAS,CACV/I,OAAQ8b,KArFGnZ,EAyFnB0Z,kBAAoB,SAACtF,GACjB,IAAI+E,EAAanZ,EAAK2G,MAAMtJ,OAC5B8b,EAAWhE,QAAQrV,QAAQ,SAACsZ,GACpBA,EAAOhE,MAAQhB,EAAE9N,OAAOrG,KACxBmZ,EAAO9D,MAAQlB,EAAE9N,OAAOC,SAIhCvG,EAAKoG,SAAS,CACV/I,OAAQ8b,KAlGGnZ,EAsGnB2Z,iBAAmB,SAACvF,GAChBlV,QAAQC,IAAI,UAAYiV,EAAE9N,OAAOrG,GAAK,KAAOmU,EAAE9N,OAAOC,OAEtD,IAAI4S,EAAanZ,EAAK2G,MAAMtJ,OAC5B8b,EAAWhE,QAAQrV,QAAQ,SAACsZ,GACpBA,EAAOhE,MAAQhB,EAAE9N,OAAOrG,KACxBmZ,EAAOnU,KAAOmP,EAAE9N,OAAOC,SAI/BvG,EAAKoG,SAAS,CACV/I,OAAQ8b,KAjHGnZ,EAqHnB4Z,iBAAmB,SAACxF,GAChBlV,QAAQC,IAAI,UAAYiV,EAAE9N,OAAOrG,GAAK,KAAOmU,EAAE9N,OAAOC,OAEtD,IAAI4S,EAAanZ,EAAK2G,MAAMtJ,OAC5B8b,EAAWhE,QAAQrV,QAAQ,SAACsZ,GACpBA,EAAOhE,MAAQhB,EAAE9N,OAAOrG,KACxBmZ,EAAO7V,KAAO6Q,EAAE9N,OAAOC,SAI/BvG,EAAKoG,SAAS,CACV/I,OAAQ8b,KAhIGnZ,EAoInB6Z,qBAAuB,SAACtT,GACpB,IAAI4S,EAAanZ,EAAK2G,MAAMtJ,OAC5B8b,EAAW3G,OAAO1T,GAAKyH,EAEvBvG,EAAKoG,SAAS,CACV/I,OAAQ8b,KAzIGnZ,EA6InB8Z,sBAAwB,SAACvT,GACrB,IAAI4S,EAAanZ,EAAK2G,MAAMtJ,OAC5B8b,EAAW3G,OAAOO,IAAMxM,EAExBvG,EAAKoG,SAAS,CACV/I,OAAQ8b,KAlJGnZ,EAsJnBiZ,MAAQ,WACJjZ,EAAK8F,MAAMmT,SArJXjZ,EAAK2G,MAAQ,CACTtJ,OAAQ,MAGZ2C,EAAK+J,SAAW,IAAIvL,EANLwB,mFAUfjC,KAAKgT,YAAa,EAClBhT,KAAKgc,YAAchc,KAAK0a,UAAU1a,KAAK6a,iEAIvC7a,KAAKgT,YAAa,mCA4Ib,IAAAnP,EAAA7D,KAECic,EAAoBjc,KAAK+H,MAAM/F,KAAK1C,OAAO8X,QAAQlJ,IAAI,SAACmN,GAAD,OAEzDxR,EAAAtG,EAAAuG,cAAA,OAAK9F,IAAKqX,EAAOhE,IAAKjJ,UAAU,wBAAwBkJ,MAAO,CAAE4E,gBAAiB,YAC9ErS,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,WAE1C/N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAE6E,WAAY,OAAQC,SAAU,QAAS7E,MAAO,OAAQW,WAAY,UAAWmE,UAAW,OAAQpE,OAAQ,SAG1F,YAAhBoD,EAAOnU,KACC2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAehF,MAAO,CAAEoC,SAAU,QAASnC,MAAO8D,EAAO9D,SAC1C,cAAhB8D,EAAOnU,KACN2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAuBhF,MAAO,CAAEoC,SAAU,QAASnC,MAAO8D,EAAO9D,SAClD,aAAhB8D,EAAOnU,KACN2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAYhF,MAAO,CAAEoC,SAAU,QAASnC,MAAO8D,EAAO9D,SACvC,QAAhB8D,EAAOnU,KACN2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAahF,MAAO,CAAEoC,SAAU,QAASnC,MAAO8D,EAAO9D,SACxC,eAAhB8D,EAAOnU,KACN2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAWhF,MAAO,CAAEoC,SAAU,QAASnC,MAAO8D,EAAO9D,SACtC,QAAhB8D,EAAOnU,KACN2C,EAAAtG,EAAAuG,cAAA,OAAKyE,IAAKgO,IAAQlO,IAAI,WAAWiJ,MAAO,CAAEqC,SAAU,WAAYhC,QAAS,eAAgB0E,UAAW,MAAO9E,MAAO8D,EAAO9D,SAC1G,SAAhB8D,EAAOnU,KACN2C,EAAAtG,EAAAuG,cAAA,OAAKyE,IAAKiO,IAASnO,IAAI,WAAWiJ,MAAO,CAAEqC,SAAU,WAAYhC,QAAS,eAAgB0E,UAAW,MAAO9E,MAAO8D,EAAO9D,SAE1H1N,EAAAtG,EAAAuG,cAAA,YAGfuR,EAAOhE,KAIZxN,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,MAAOC,eAAgB,iBAEjEhO,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,WAC1C/N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,QAASyC,WAAY,SAA7C,QAGAtS,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEQ,WAAY,QACtBjO,EAAAtG,EAAAuG,cAAA,SAAOC,SAAUlG,EAAKgY,iBAAkB3Z,GAAImZ,EAAOhE,IAAK7R,KAAK,OAAO0B,KAAK,OAAO4S,aAAcuB,EAAO7V,KAAMiX,UAAU,KAAKnF,MAAO,CAAEoC,SAAU,QAASK,SAAU,YAIxKlQ,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,WAC1C/N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,QAASyC,WAAY,SAA7C,QAGAtS,EAAAtG,EAAAuG,cAAA,WACID,EAAAtG,EAAAuG,cAAA,UAAQC,SAAUlG,EAAK+X,iBAAkB1Z,GAAImZ,EAAOhE,IAAKyC,aAAcuB,EAAOnU,KAAMoQ,MAAO,CAAEoC,SAAU,QAASK,SAAU,OAAQ9B,OAAQ,SACtIpO,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,WAAd,WACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,aAAd,aACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,YAAd,YACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,OAAd,YACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,OAAd,OACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,cAAd,iBAMZqB,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,WAC1C/N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,QAASyC,WAAY,SAA7C,UAGAtS,EAAAtG,EAAAuG,cAAA,WACID,EAAAtG,EAAAuG,cAAA,UAAQC,SAAUlG,EAAK6X,mBAAoBxZ,GAAImZ,EAAOhE,IAAKyC,aAAcuB,EAAO1C,UAAWrB,MAAO,CAAEoC,SAAU,QAASK,SAAU,OAAQ9B,OAAQ,SAC7IpO,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,KAAd,KACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,KAAd,KACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,OAAd,OACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,KAAd,KACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,QAAd,QACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,OAAd,OACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAM,QAAd,WAOZqB,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,WAC1C/N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,QAASyC,WAAY,SAA7C,QAGAtS,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,MAAO5B,WAAY,QACvCjO,EAAAtG,EAAAuG,cAAA,SAAO5C,KAAK,SAAS6C,SAAUlG,EAAKsX,iBAAkBjZ,GAAImZ,EAAOhE,IAAK7R,KAAK,QAAQsU,aAAcuB,EAAOC,MAAOhE,MAAO,CAAEoC,SAAU,QAASK,SAAU,YAI7JlQ,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,WAC1C/N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,QAASyC,WAAY,SAA7C,QAGAtS,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,MAAO5B,WAAY,QACvCjO,EAAAtG,EAAAuG,cAAA,SAAO5C,KAAK,SAAS6C,SAAUlG,EAAK2X,sBAAuBtZ,GAAImZ,EAAOhE,IAAK7R,KAAK,aAAasU,aAAcuB,EAAOI,WAAYnE,MAAO,CAAEoC,SAAU,QAASK,SAAU,YAI5KlQ,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,WAC1C/N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,QAASyC,WAAY,SAA7C,SAGAtS,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,MAAO5B,WAAY,QACvCjO,EAAAtG,EAAAuG,cAAA,SAAOC,SAAUlG,EAAK8X,kBAAmBzZ,GAAImZ,EAAOhE,IAAK7R,KAAK,QAAQ0B,KAAK,QAAQ4S,aAAcuB,EAAO9D,MAAOkF,UAAU,KAAKnF,MAAO,CAAEoC,SAAU,QAASgD,QAAS,EAAG7C,UAAW,MAAOE,SAAU,OAAQsC,UAAW,iBAY7O,OAEIxS,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEW,OAAQ,OAAQoE,UAAW,OAAQrE,MAAO,OAAQ+B,SAAU,OAAQmC,gBAAiB,YAAavC,SAAU,QAASgD,aAAc,SAAU9E,eAAgB,SAAU+E,aAAc,SAAUC,OAAQ,IACjNhT,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEwF,OAAQ,OAAQ9E,MAAO,MAAOC,OAAQ,MAAO8E,OAAQ,oBAAqBL,QAAS,OAAQxE,WAAY,UAAWX,MAAO,YAEnI1N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,MAAOC,eAAgB,kBACjEhO,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,QAASyC,WAAY,UAC7CtS,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,MAAO5B,WAAY,MAAOqE,WAAY,SAA9D,YACAtS,EAAAtG,EAAAuG,cAAA,OAAKK,QAASnK,KAAKkb,MAAO5D,MAAO,CAAEoC,SAAU,QAASnC,MAAO,UAAW4E,WAAY,OAAQa,OAAQ,YAApG,MAEF,WACE,GAAInZ,EAAK+E,MAAMtJ,OACX,OACIuK,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,mCAAmCoV,MAAO,CAAEwF,OAAQ,MAAO7E,OAAQ,QACvEpO,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,6BAA6BoV,MAAO,CAAE2F,UAAW,WAGnD,WACE,GAAIpZ,EAAK+E,MAAMtJ,OAAOmV,OAClB,OACI5K,EAAAtG,EAAAuG,cAAA,WACID,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,2BAAf,UAEAvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,wBAAwBkJ,MAAO,CAAE4E,gBAAiB,YAC7DrS,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,sBACXvE,EAAAtG,EAAAuG,cAAA,iBAAQD,EAAAtG,EAAAuG,cAACoT,EAAA3Z,EAAD,CACJ4Z,UAAW,KACXjb,GAAG,YACHsG,MAAO3E,EAAK+E,MAAMtJ,OAAOmV,OAAO1T,GAChCgJ,SAAUlG,EAAKiY,qBAAqBhN,KAAKjL,MAE7CgG,EAAAtG,EAAAuG,cAAA,kBAASD,EAAAtG,EAAAuG,cAACoT,EAAA3Z,EAAD,CACL4Z,UAAW,KACXjb,GAAG,aACHsG,MAAO3E,EAAK+E,MAAMtJ,OAAOmV,OAAOO,IAChCjL,SAAUlG,EAAKkY,sBAAsBjN,KAAKjL,SAlBpE,GA2BFgG,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,2BAAf,WAEC6N,EAIDpS,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,MAAOC,eAAgB,gBAAiBgC,UAAW,QAC7FhQ,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,+BAA+BiI,QAAS,kBAAMtG,EAAKkX,eAA3D,QAA8ElR,EAAAtG,EAAAuG,cAAA,WAA9E,gBAzCtB,SAsDD,UA/UMM,sBCslBZgT,cAhlBX,SAAAA,EAAYrV,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAod,IACfnb,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAsd,GAAAlV,KAAAlI,KAAM+H,KAiEVsV,qBAAuB,WACnBpb,EAAK+Q,YAAa,GAnEH/Q,EAsEnB6R,mBAAqB,WAEjB,GAAI7R,EAAK8F,MAAM/F,OAASC,EAAKD,KAAM,CAC/Bb,QAAQC,IAAI,eACZa,EAAKD,KAAOC,EAAK8F,MAAM/F,KACvBC,EAAKqb,qBAAuB,KAK5B,IAHA,IAAIC,EAAoB,GACpBC,EAAe,GAEnBC,EAAA,EAAAC,EAA2B5d,OAAOuQ,QAAQpO,EAAK8F,MAAM/F,KAAK1C,OAAO8X,SAAjEqG,EAAAC,EAAAvd,OAAAsd,IAA2E,KAAAxO,EAAAyO,EAAAD,GAAApR,EAAAvM,OAAA6d,EAAA,EAAA7d,CAAAmP,EAAA,GAA1DzG,GAA0D6D,EAAA,GAAAA,EAAA,IACvEkR,EAAkB/U,EAAM6O,KAAO7O,EAAMiT,WACrC+B,EAAahV,EAAM6O,KAAO7O,EAAM8S,MAGpCrZ,EAAKoG,SAAS,CACVkV,kBAAmBA,EACnBC,aAAcA,IAItB,GAAIvb,EAAK8F,MAAMkM,YAAa,CACxB,IAAKhS,EAAK8F,MAAMkM,YAAYhS,EAAK8F,MAAM/F,KAAKE,IACxC,OAGJ,IAAI0b,EAAgB3b,EAAK8F,MAAMkM,YAAYhS,EAAK8F,MAAM/F,KAAKE,IAAID,EAAK8F,MAAMkM,YAAYhS,EAAK8F,MAAM/F,KAAKE,IAAI/B,OAAS,GAAGA,OAElH8B,EAAK2b,gBAAkBA,GACvB3b,EAAK2b,cAAgBA,EACrB3b,EAAK4b,gBAAgB5b,EAAK8F,MAAMkM,cACxBhS,EAAK2G,MAAMkV,aAEnB7b,EAAK2b,cAAgBA,EACrB3b,EAAK4b,gBAAgB5b,EAAK8F,MAAMkM,aAChChS,EAAKoG,SAAS,CAAEyV,YAAY,OAzGrB7b,EA+GnB4b,gBAAkB,SAACE,GAEf,IAAI1J,EAAa,GACjB0J,EAAS9b,EAAK8F,MAAM/F,KAAKE,IAAIH,QAAQ,SAACuS,GAClCD,EAAaA,EAAW3Q,OAAO4Q,KAEnCD,EAAW/Q,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEJ,KAAOK,EAAEL,KAAQ,GAAK,IAEnDlB,EAAKoG,SAAS,CACV2V,SAAU3J,EAAWA,EAAWlU,OAAS,GACzC8d,aAAc5J,EAAWA,EAAWlU,OAAS,KAGjD,IAAI4V,GAAM,IAAI3T,MAAOgB,UAEjB8a,EAAsB,GACtBC,EAAyB,GACzBC,EAAyB,GACzBC,GAAkB,EAElBC,EAAc,GACdC,EAAoB,GACpBC,EAAa,GACbC,EAAmB,GACnBC,EAAa,GACbC,EAAY,GAEZC,EAAoB,EACpBC,EAAmB,EAEnBC,EAAc,GACdC,EAAgB,GAIhBC,EAAc,GAmGlB,GAlGI/c,EAAK2G,MAAMqW,eAAiBhd,EAAK8F,MAAM/F,MAAQC,EAAK8F,MAAM/F,KAAK1C,OAAO8X,UAAYnV,EAAK2G,MAAMoW,cAC7F/c,EAAK8F,MAAM/F,KAAK1C,OAAO8X,QAAQrV,QAAQ,SAACsZ,EAAQrX,GAExCgb,EAAYhb,KAASqX,EAAOhE,MAC5B2H,EAAYhb,GAAOqX,EAAOhE,OAIlCpV,EAAKoG,SAAS,CACV2W,YAAaA,IAGb/c,EAAK2G,MAAMsW,cAAgBjd,EAAK8F,MAAM/F,MACtCC,EAAKoG,SAAS,CACV8W,aAAcH,EACdE,YAAajd,EAAK8F,MAAM/F,QAKpCqS,EAAWtS,QAAQ,SAACkB,GAChB,GAAI8S,EAAM9S,EAAUE,KAAO,MAMvB,IAAK,IAAMic,KALXR,GAAqB,EAErBE,EAAYA,EAAY3e,QAAU8C,EAGhBA,EAEd,GAAI+b,EAAYjc,SAASqc,GAAM,CAC3B,IAAIpI,EAASgI,EAAY/H,QAAQmI,KAG5Bd,EAAYtH,IAAWuE,WAAWtY,EAAUmc,KAASd,EAAYtH,MAClEsH,EAAYtH,GAAU/T,EAAUmc,GAChCb,EAAkBvH,GAAU/T,EAAUE,QAGrCqb,EAAWxH,IAAWuE,WAAWtY,EAAUmc,KAASZ,EAAWxH,MAChEwH,EAAWxH,GAAU/T,EAAUmc,GAC/BX,EAAiBzH,GAAU/T,EAAUE,MAGpCub,EAAW1H,KACZ0H,EAAW1H,GAAU,GAEzB0H,EAAW1H,GAAUuE,WAAWtY,EAAUmc,IAAQ7D,WAAWmD,EAAW1H,IAGlE/U,EAAK2G,MAAMyW,cAAgBpd,EAAK2G,MAAM0W,gBAAoBrd,EAAKqb,yBAAyB,IAAIlb,MAAOmd,UAAYtd,EAAKqb,qBAAuB,OAC7Ie,GAAkB,EAGbH,EAAoBkB,KACrBlB,EAAoBkB,GAAO,EAC3BjB,EAAuBiB,GAAO,EAC9BhB,EAAuBgB,GAAO,GAElClB,EAAoBkB,GAAOlB,EAAoBkB,GAAO,EAIjDnc,EAAUmc,GAAQnd,EAAK2G,MAAM4U,aAAa4B,GAA6C,EAApCnd,EAAK2G,MAAM2U,kBAAkB6B,IAChFnc,EAAUmc,GAAQnd,EAAK2G,MAAM4U,aAAa4B,GAA6C,EAApCnd,EAAK2G,MAAM2U,kBAAkB6B,GACjFhB,EAAuBgB,GAAOhB,EAAuBgB,GAAO,GAEpDnc,EAAUmc,GAAQnd,EAAK2G,MAAM4U,aAAa4B,GAASnd,EAAK2G,MAAM2U,kBAAkB6B,IACvFnc,EAAUmc,GAAQnd,EAAK2G,MAAM4U,aAAa4B,GAASnd,EAAK2G,MAAM2U,kBAAkB6B,MACjFjB,EAAuBiB,GAAOjB,EAAuBiB,GAAO,IAQhF,GAAKrJ,EAAM9S,EAAUE,KAAQ,QAAmB4S,EAAM9S,EAAUE,KAAO,MAMnE,IAAK,IAAMic,KALXP,GAAoB,EAEpBE,EAAcA,EAAc5e,QAAU8C,EAGpBA,EAEd,GAAI+b,EAAYjc,SAASqc,GAAM,CAC3B,IAAII,EAASR,EAAY/H,QAAQmI,GAG5BT,EAAUa,KACXb,EAAUa,GAAU,GAExBb,EAAUa,GAAUjE,WAAWtY,EAAUmc,IAAQ7D,WAAWoD,EAAUa,OAOtC,IAA5C1f,OAAOwE,KAAK4Z,GAAqB/d,QAAgBke,EAAiB,CAElEld,QAAQC,IAAI,2BAEZa,EAAKqb,sBAAuB,IAAIlb,MAAOmd,UAEvC,QAAAE,EAAA,EAAAC,EAA2B5f,OAAOuQ,QAAQ8N,GAA1CsB,EAAAC,EAAAvf,OAAAsf,IAAmE,KAAAE,EAAAD,EAAAD,GAAAG,EAAA9f,OAAA6d,EAAA,EAAA7d,CAAA6f,EAAA,GAAvD3b,EAAuD4b,EAAA,GAAAA,EAAA,GAC/DzB,EAAuBna,GAAOiS,KAAKC,MAAOiI,EAAuBna,GAAOka,EAAoBla,GAAQ,KAGxG,QAAA6b,EAAA,EAAAC,EAA2BhgB,OAAOuQ,QAAQ+N,GAA1CyB,EAAAC,EAAA3f,OAAA0f,IAAmE,KAAAE,EAAAD,EAAAD,GAAAG,EAAAlgB,OAAA6d,EAAA,EAAA7d,CAAAigB,EAAA,GAAvD/b,EAAuDgc,EAAA,GAAAA,EAAA,GAC/D5B,EAAuBpa,GAAOiS,KAAKC,MAAOkI,EAAuBpa,GAAOka,EAAoBla,GAAQ,KAGxG7C,QAAQC,IAAI,gBAAiB8c,GAC7B/c,QAAQC,IAAI,cAAe+c,GAC3Bhd,QAAQC,IAAI,cAAegd,GAE3Bnc,EAAKoG,SAAS,CACViX,eAAgBlB,EAChBiB,aAAclB,IAMtBO,EAAW3c,QAAQ,SAACke,EAAKjc,GACrB0a,EAAW1a,GAAO0a,EAAW1a,GAAO4a,IAGxCD,EAAU5c,QAAQ,SAACke,EAAKjc,GACpB2a,EAAU3a,GAAO2a,EAAU3a,GAAO6a,IAGtC5c,EAAKoG,SAAS,CACViW,YAAaA,EACbC,kBAAmBA,EACnBC,WAAYA,EACZC,iBAAkBA,EAClBC,WAAYA,EACZC,UAAWA,KA7RA1c,EAiSnBie,WAAa,SAAC7J,GACV,IAAI+I,EAAM/I,EAAE8J,cAAcC,aAAa,cAEnCpJ,EAAS/U,EAAK2G,MAAMoW,YAAY/H,QAAQmI,GAExCiB,EAAepe,EAAK2G,MAAMuW,aAE1BkB,EAAatd,SAASqc,GACtBiB,EAAarJ,GAAU,KAEvBqJ,EAAarJ,GAAUoI,EAG3Bnd,EAAKoG,SAAS,CAAE8W,aAAckB,IAC9Bpe,EAAKqe,eA/SUre,EAkTnBse,kBAAoB,WACZte,EAAK2G,MAAM4X,cACXve,EAAKoG,SAAS,CAAEmY,eAAe,IAE/Bve,EAAKoG,SAAS,CAAEmY,eAAe,KAnTnCve,EAAK2G,MAAQ,CACT6X,qBAAsB,+BAEtBzB,YAAa,GACbC,cAAc,EAEdX,YAAa,GACbC,kBAAmB,GACnBC,WAAY,GACZC,iBAAkB,GAClBC,WAAY,GACZC,UAAW,GAEXQ,aAAc,GACdD,aAAa,EAEbpB,YAAY,EAEZ0C,eAAe,GAGnBve,EAAK+J,SAAW,IAAIvL,EAxBLwB,mFAiCf,GAJAjC,KAAKgT,YAAa,EAIdhT,KAAK+H,MAAM/F,OAAShC,KAAK4I,MAAM2U,kBAAmB,CAIlD,IAHA,IAAIA,EAAoB,GACpBC,EAAe,GAEnBkD,EAAA,EAAAC,EAA2B7gB,OAAOuQ,QAAQrQ,KAAK+H,MAAM/F,KAAK1C,OAAO8X,SAAjEsJ,EAAAC,EAAAxgB,OAAAugB,IAA2E,KAAAE,EAAAD,EAAAD,GAAAG,EAAA/gB,OAAA6d,EAAA,EAAA7d,CAAA8gB,EAAA,GAA1DpY,GAA0DqY,EAAA,GAAAA,EAAA,IACvEtD,EAAkB/U,EAAM6O,KAAO7O,EAAMiT,WACrC+B,EAAahV,EAAM6O,KAAO7O,EAAM8S,MAGpCtb,KAAKqI,SAAS,CACVkV,kBAAmBA,EACnBC,aAAcA,IAMtB,GAAIxd,KAAK+H,MAAMkM,aAAejU,KAAK4I,MAAMoW,aAAehf,KAAK4I,MAAM4U,aAAc,CAC7E,IAAKxd,KAAK+H,MAAMkM,YAAYjU,KAAK+H,MAAM/F,KAAKE,IACxC,OAGJ,IAAI0b,EAAgB5d,KAAK+H,MAAMkM,YAAYjU,KAAK+H,MAAM/F,KAAKE,IAAIlC,KAAK+H,MAAMkM,YAAYjU,KAAK+H,MAAM/F,KAAKE,IAAI/B,OAAS,GAAGA,OAElHH,KAAK4d,gBAAkBA,IACvB5d,KAAK4d,cAAgBA,EACrB5d,KAAK6d,gBAAgB7d,KAAK+H,MAAMkM,cAEpCjU,KAAKsgB,gDA6PJ,IAAAzc,EAAA7D,KAEC8gB,EAAiB9gB,KAAK4I,MAAMoW,YAAY9Q,IAAI,SAACkR,GAAD,OAC9CvV,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,qCAAqCpK,IAAKob,GAEnD,WAEE,IAAIpI,EAASnT,EAAK+E,MAAMoW,YAAY/H,QAAQmI,GACxCjI,EAAYtT,EAAKkE,MAAM/F,KAAK1C,OAAO8X,QAAQJ,GAC3C+J,EAAa,GACbC,EAAgB,MAOpB,GALInd,EAAK+E,MAAMuW,aAAapc,SAASqc,KACjC2B,EAAa,EACbC,EAAgB,OAGfnd,EAAKkE,MAAM/F,KAAK1C,OAAO8X,QAAQJ,GAIpC,OACInN,EAAAtG,EAAAuG,cAAA,OAAKwE,aAAY8Q,EAAKpb,IAAKob,EAAKjV,QAAStG,EAAKqc,WAAY5I,MAAO,CAAEU,MAAO,QAASqE,UAAW,OAAQ1E,QAAS,OAAQC,cAAe,MAAOC,eAAgB,WAAY6B,SAAU,SAAUsD,OAAQ,UAAW9E,WAAY,UAAW+I,QAASF,EAAYxJ,MAAO1T,EAAKkE,MAAM/F,KAAK1C,OAAO8X,QAAQJ,GAAQO,QACtS1N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAE4J,WAAYF,IAA1B,IAA8C7J,EAAU3R,MAG7B,YAAnB2R,EAAUjQ,KACH2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAehF,MAAO,CAAEC,MAAO,OAAQmC,SAAU,UAC9B,aAAnBvC,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAYhF,MAAO,CAAEC,MAAO,OAAQmC,SAAU,UAC3B,QAAnBvC,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAahF,MAAO,CAAEC,MAAO,OAAQmC,SAAU,UAC5B,eAAnBvC,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAWhF,MAAO,CAAEC,MAAO,OAAQmC,SAAU,UAC1B,cAAnBvC,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAuBhF,MAAO,CAAEC,MAAO,OAAQmC,SAAU,UACtC,QAAnBvC,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAAA,OAAKyE,IAAKgO,IAAQlO,IAAI,WAAWiJ,MAAO,CAAEqC,SAAU,WAAYhC,QAAS,eAAgB0E,UAAW,UACjF,SAAnBlF,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAAA,OAAKyE,IAAKiO,IAASnO,IAAI,YAAYiJ,MAAO,CAAEqC,SAAU,WAAYhC,QAAS,eAAgB0E,UAAW,UAEtGxS,EAAAtG,EAAAuG,cAAA,aApCzB,GA2CA,WACE,IAAIkN,EAASnT,EAAK+E,MAAMoW,YAAY/H,QAAQmI,GACxCjI,EAAYtT,EAAKkE,MAAM/F,KAAK1C,OAAO8X,QAAQJ,GAC3CmK,EAAoB,OAExB,GAAKhK,EAcL,OAVKA,EAAUmE,OAA6B,IAApBnE,EAAUmE,QAAiBnE,EAAUsE,YAAuC,IAAzBtE,EAAUsE,aAE7E0F,EADEhK,EAAUmE,MAAgC,EAAvBnE,EAAUsE,WAAmB5X,EAAK+E,MAAMoV,SAASoB,IAAWjI,EAAUmE,MAAgC,EAAvBnE,EAAUsE,WAAmB5X,EAAK+E,MAAMoV,SAASoB,GACjI,UACXjI,EAAUmE,MAASnE,EAAUsE,WAAe5X,EAAK+E,MAAMoV,SAASoB,IAAWjI,EAAUmE,MAASnE,EAAUsE,WAAe5X,EAAK+E,MAAMoV,SAASoB,GAChI,UAEA,WAKxBvV,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,sCAAsCkJ,MAAO,CAAEY,WAAYiJ,IAI9Dtd,EAAK+E,MAAMoV,SAASoB,GAAOvb,EAAK+E,MAAMqV,aAAamB,GAC5CvV,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,OAAQnC,MAAO,YAAa1N,EAAAtG,EAAAuG,cAAA,QAAMsF,KAAK,MAAMC,aAAW,gBAA5B,WACpDxL,EAAK+E,MAAMoV,SAASoB,GAAOvb,EAAK+E,MAAMqV,aAAamB,GACnDvV,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,OAAQnC,MAAO,YAAa1N,EAAAtG,EAAAuG,cAAA,QAAMsF,KAAK,MAAMC,aAAW,eAA5B,WAEpDxF,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,OAAQ0H,WAAY,WAAYvX,EAAAtG,EAAAuG,cAAA,QAAMsF,KAAK,MAAMC,aAAW,eAA5B,WAKrE,WACE,IAAI2H,EAASnT,EAAK+E,MAAMoW,YAAY/H,QAAQmI,GACxCjI,EAAYtT,EAAKkE,MAAM/F,KAAK1C,OAAO8X,QAAQJ,GAC/C,GAAKG,EAIL,OAAOtN,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAE+J,KAAM,IAAMpL,KAAKC,MAAiC,GAA3BrS,EAAK+E,MAAMoV,SAASoB,IAAa,GAAIjI,EAAUY,MAP7F,GAYFlO,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEU,MAAO,MAAOE,WAAY,UAEtC,WACE,IAAIoJ,EAAkB,EAClBC,EAAoB,EACpBC,EAAkB,IAStB,OARI3d,EAAK+E,MAAMyW,eACXiC,EAAkBzd,EAAK+E,MAAMyW,aAAaD,IAE1Cvb,EAAK+E,MAAM0W,iBACXiC,EAAoB1d,EAAK+E,MAAM0W,eAAeF,IAElDoC,EAAkBA,EAAkBF,EAAkBC,EAGlD1X,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,SAAUK,OAAQ,OAAQD,MAAO,QAC3EnO,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAE+J,KAAME,EAAmBrJ,WAAY,aACnDrO,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAE+J,KAAMC,EAAiBpJ,WAAY,aACjDrO,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAE+J,KAAMG,EAAiBtJ,WAAY,cAhB3D,GAqBFrO,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEU,MAAO,MAAOE,WAAY,WArElD,GA2EFrO,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,8BAA8BkJ,MAAO,CAAEmK,aAAc,QAChE5X,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,8BAA8BkJ,MAAO,CAAEK,QAAS,OAAQC,cAAe,MAAOC,eAAgB,kBACvG,WACE,IAAIb,EAASnT,EAAK+E,MAAMoW,YAAY/H,QAAQmI,GACxCjI,EAAYtT,EAAKkE,MAAM/F,KAAK1C,OAAO8X,QAAQJ,GAC/C,GAAKG,EAIL,OAAItT,EAAK+E,MAAM+V,UAAU3H,GACdf,KAAKC,MAAqC,GAA/BrS,EAAK+E,MAAM+V,UAAU3H,IAAgB,GAAKG,EAAUY,UAD1E,EAPF,GAaA,WACE,IAAIf,EAASnT,EAAK+E,MAAMoW,YAAY/H,QAAQmI,GAE5C,GAAIvb,EAAK+E,MAAM8V,WAAW1H,IAAWnT,EAAK+E,MAAM+V,UAAU3H,GAEtD,OAAInT,EAAK+E,MAAM8V,WAAW1H,GAAUnT,EAAK+E,MAAM+V,UAAU3H,GAC9CnN,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEC,MAAO,SAAU1N,EAAAtG,EAAAuG,cAAA,QAAMsF,KAAK,MAAMC,aAAW,gBAA5B,WAC/BxL,EAAK+E,MAAM8V,WAAW1H,GAAUnT,EAAK+E,MAAM+V,UAAU3H,GACrDnN,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEC,MAAO,SAAU1N,EAAAtG,EAAAuG,cAAA,QAAMsF,KAAK,MAAMC,aAAW,eAA5B,WAE/BxF,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAE8J,WAAY,WAAYvX,EAAAtG,EAAAuG,cAAA,QAAMsF,KAAK,MAAMC,aAAW,eAA5B,WAVvD,IAiBJ,WACE,IAAI2H,EAASnT,EAAK+E,MAAMoW,YAAY/H,QAAQmI,GACxCjI,EAAYtT,EAAKkE,MAAM/F,KAAK1C,OAAO8X,QAAQJ,GAC/C,GAAKG,EAIL,OAAItT,EAAK+E,MAAM8V,WAAW1H,GACff,KAAKC,MAAsC,GAAhCrS,EAAK+E,MAAM8V,WAAW1H,IAAgB,GAAKG,EAAUY,UAD3E,EAPF,IAcNlO,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,8BAA8BkJ,MAAO,CAAE4E,gBAAiB,UAAWuF,aAAc,QAC5F5X,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,+BACT,WACE,IAAI4I,EAASnT,EAAK+E,MAAMoW,YAAY/H,QAAQmI,GAE5C,GAAIvb,EAAK+E,MAAM2V,kBAEX,OADQ5J,IAAO9Q,EAAK+E,MAAM2V,kBAAkBvH,IACnCjC,OAAO,SALtB,IAUJ,WACE,IAAIiC,EAASnT,EAAK+E,MAAMoW,YAAY/H,QAAQmI,GACxCjI,EAAYtT,EAAKkE,MAAM/F,KAAK1C,OAAO8X,QAAQJ,GAC/C,GAAKG,EAIL,OAAItT,EAAK+E,MAAM0V,YACJrI,KAAKC,MAAuC,GAAjCrS,EAAK+E,MAAM0V,YAAYtH,IAAgB,GAAKG,EAAUY,UAD5E,EAPF,IAaNlO,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,8BAA8BkJ,MAAO,CAAE4E,gBAAiB,UAAWuF,aAAc,QAC5F5X,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,+BACT,WACE,IAAI4I,EAASnT,EAAK+E,MAAMoW,YAAY/H,QAAQmI,GAE5C,GAAIvb,EAAK+E,MAAM6V,iBAEX,OADQ9J,IAAO9Q,EAAK+E,MAAM6V,iBAAiBzH,IAClCjC,OAAO,SALtB,IAUJ,WACE,IAAIiC,EAASnT,EAAK+E,MAAMoW,YAAY/H,QAAQmI,GACxCjI,EAAYtT,EAAKkE,MAAM/F,KAAK1C,OAAO8X,QAAQJ,GAC/C,GAAKG,EAIL,OAAItT,EAAK+E,MAAM4V,WACJvI,KAAKC,MAAsC,GAAhCrS,EAAK+E,MAAM4V,WAAWxH,IAAgB,GAAKG,EAAUY,UAD3E,EAPF,OAkBd,OACIlO,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,qBACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,6BACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,+BACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,uBACXvE,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,MAAOyJ,KAAM,IACvDxX,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAWpO,KAAK4I,MAAM6X,uBAC3B5W,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,oBAAoBlC,KAAK+H,MAAM/F,KAAKwD,OAEhDqE,EAAAtG,EAAAuG,cAAA,OAAKK,QAAS,kBAAMtG,EAAK0c,qBAAqBjJ,MAAO,CAAEI,aAAc,OAAQH,MAAO,UAAW4E,WAAY,OAAQa,OAAQ,YACvHnT,EAAAtG,EAAAuG,cAAC4X,EAAA,EAAD,CAAYpK,MAAO,CAAEC,MAAO,UAAWmC,SAAU,OAAQG,UAAW,WAG5EhQ,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,4BACXvE,EAAAtG,EAAAuG,cAAC6X,EAAD,CAAmB5K,YAAa/W,KAAK4I,MAAMuW,aAAclL,YAAajU,KAAK+H,MAAMkM,YAAajS,KAAMhC,KAAK+H,MAAM/F,SAIrH,WACE,GAAI6B,EAAK+E,MAAM4X,cACX,OACI3W,EAAAtG,EAAAuG,cAAC8X,EAAD,CAAc5f,KAAM6B,EAAKkE,MAAM/F,KAAMiZ,aAAcpX,EAAKkE,MAAMkT,aAAcC,MAAOrX,EAAK0c,oBAHlG,GAQF1W,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,2BACXvE,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,6BACF,WACE,GAAI2B,EAAK+E,MAAMoV,SACX,OACInU,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,kCACJ2H,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,oCACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,oCAAoCkJ,MAAO,CAAEC,MAAO,OAAQS,MAAO,QAAS+B,SAAU,WACrGlQ,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,oCAAoCkJ,MAAO,CAAEU,MAAO,OAAQ+B,SAAU,UACrFlQ,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,oCAAoCkJ,MAAO,CAAEU,MAAO,OAAQ+B,SAAU,SAArF,QACAlQ,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,oCAAoCkJ,MAAO,CAAEU,MAAO,OAAQ+B,SAAU,SAArF,aACAlQ,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,oCAAoCkJ,MAAO,CAAEU,MAAO,OAAQ+B,SAAU,SAArF,cAGH+G,GAZf,cAxjBA1W,aCsFfyX,cA/Fd,SAAAA,EAAY9Z,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6hB,IAClB5f,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAA+hB,GAAA3Z,KAAAlI,KAAM+H,KAeP+L,mBAAqB,WACf7R,EAAK+Q,YAjBQ/Q,EAsBnBgE,WAAa,SAACjC,GAMb/B,EAAKoG,SAAS,CAAEmK,eAAgB,UA5BdvQ,EA+BnB6f,aAAe,SAACC,EAAM7f,GACrBD,EAAK8F,MAAM+Z,aAAaC,EAAM7f,IAhCZD,EAmCnB+f,oBAAsB,WACrB7Y,MAAM,2CApCYlH,EAuCnBggB,SAAW,SAACjgB,GACNA,GACJC,EAAK8F,MAAMma,QAAQ,MAGpBjgB,EAAK8F,MAAMma,QAAQlgB,IA5CDC,EA+CnBgO,aAAe,SAACvL,GACfvD,QAAQC,IAAI,iBAAmBsD,GAC/BzC,EAAK8F,MAAMkI,aAAavL,IA/CxBzC,EAAK2G,MAAQ,CACZ4J,eAAgB,OAChBxQ,KAAMC,EAAK8F,MAAM/F,MAJAC,mFASlBjC,KAAKgT,YAAa,iDAIlBhT,KAAKgT,YAAa,mCAwCV,IAAAnP,EAAA7D,KAER,OAEC6J,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,aACP2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,aACP2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,kBAEL,WACD,GAAwB,OAApB2B,EAAKkE,MAAM/F,KACd,OACC6H,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEW,OAAQ,UAHvB,GAaA,WACD,GAAIpU,EAAKkE,MAAM/F,KACd,OACC6H,EAAAtG,EAAAuG,cAACqY,EAAD,CAAiBngB,KAAM6B,EAAKkE,MAAM/F,KAAMiZ,aAAcpX,EAAKkE,MAAMkT,aAAc6G,aAAcje,EAAKie,aAAc7R,aAAcpM,EAAKoM,aAAcgE,YAAapQ,EAAKkE,MAAMkM,YAAa1K,KAAM1F,EAAKkE,MAAMwB,OAHxM,aA5Eea,aC4WRgY,cAtWX,SAAAA,EAAYra,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoiB,IACfngB,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAsiB,GAAAla,KAAAlI,KAAM+H,KA8EV+L,mBAAqB,WAEjB,GAAI7R,EAAK8F,MAAMkM,aAAehS,EAAK8F,MAAMsa,QAAS,CAC9C,IAAIC,EAAkB,GAClBC,GAAa,EACjBtgB,EAAK8F,MAAMsa,QAAQtgB,QAAQ,SAACmS,GAGxB,GAAKjS,EAAK8F,MAAMkM,YAAYC,GAI5B,GAAKjS,EAAKugB,kBAAsBvgB,EAAKugB,iBAAiBtO,IAASjS,EAAK8F,MAAMkM,YAAYC,IAAWjS,EAAKugB,iBAAiBtO,KAAUjS,EAAK8F,MAAMkM,YAAYC,GAAMjS,EAAK8F,MAAMkM,YAAYC,GAAM/T,OAAS,GAAGA,OACnMmiB,EAAgBpO,GAAQjS,EAAK8F,MAAMkM,YAAYC,GAAMjS,EAAK8F,MAAMkM,YAAYC,GAAM/T,OAAS,GAAGA,WADlG,CAIAoiB,GAAa,EAEbD,EAAgBpO,GAAQjS,EAAK8F,MAAMkM,YAAYC,GAAMjS,EAAK8F,MAAMkM,YAAYC,GAAM/T,OAAS,GAAGA,OAE9F,IAAIsiB,EAAgB,GACpBxgB,EAAK8F,MAAMkM,YAAYC,GAAMnS,QAAQ,SAACuS,GAClCmO,EAAgBA,EAAc/e,OAAO4Q,KAGpCrS,EAAKugB,kBAAoBvgB,EAAKugB,iBAAiBtO,KAAUuO,EAActiB,SACxEsiB,EAAcnf,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEJ,KAAOK,EAAEL,KAAQ,GAAK,IACtDlB,EAAKoS,WAAWH,GAAQuO,QAlBxBH,EAAgBpO,GAAQ,IAuB5BqO,IACAtgB,EAAKugB,iBAAmBF,EAExBrgB,EAAKuS,iBAlHEvS,EAyHnBuS,YAAc,WAAuC,IAAtCoB,EAAsCjJ,UAAAxM,OAAA,QAAAyN,IAAAjB,UAAA,GAAAA,UAAA,GAA7B1K,EAAK2G,MAAMiN,cAC3B6M,EAAY,KAChB,GAAKzgB,EAAKoS,WAAV,CAGIqO,EAAYzgB,EAAKoS,WAGrB,IAAI0B,GAAM,IAAI3T,MAAOgB,UACjB+R,EAAgB,GAChBwN,EAAwB,GAG5B1gB,EAAK8F,MAAMsa,QAAQtgB,QAAQ,SAACG,GACxB,GAAKwgB,EAAUxgB,GAAf,CAIA,IAAI0gB,EAAmB,GAEnBhgB,GAAK,EACT8f,EAAUxgB,GAAIH,QAAQ,SAACkB,GAEnB,IAAI4f,EAAc,GAEd7M,EAAeC,KAAKC,MAAMjU,EAAK2G,MAAMiN,cAAgB,OAKzD,GAJIG,EAAe,IACfA,EAAe,GAGfD,EAAM9S,EAAUE,KAAOyS,IAGb,MAFVhT,GAEeA,EAAIoT,IAAiB,GAAG,CAGnC,IAFA,IAAIG,EAAiBlT,EAErBwa,EAAA,EAAAC,EAA2B5d,OAAOuQ,QAAQ8F,GAA1CsH,EAAAC,EAAAvd,OAAAsd,IAA2D,KAAAxO,EAAAyO,EAAAD,GAAApR,EAAAvM,OAAA6d,EAAA,EAAA7d,CAAAmP,EAAA,GAA/CjL,EAA+CqI,EAAA,GAA1C7D,EAA0C6D,EAAA,GAC3C,SAARrI,EACA6e,EAAY7e,EAAM,IAAM9B,GAAMsG,EAE9Bqa,EAAY1f,KAAOqF,EAI3Bma,EAAsBA,EAAsBxiB,QAAU0iB,EAEtDD,EAAiBA,EAAiBziB,QAAUgW,KAKxDhB,EAAcjT,GAAM0gB,KAGxBD,EAAsBrf,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEJ,KAAOK,EAAEL,KAAQ,GAAK,IAE9DlB,EAAKoG,SAAS,CACVsa,sBAAuBA,EACvBxN,cAAeA,MAnLJlT,EAwLnBmU,aAAe,SAACC,GACZpU,EAAKoG,SAAS,CAAEwN,cAAeQ,EAAE9N,OAAOC,QACxCvG,EAAKuS,YAAY6B,EAAE9N,OAAOC,OAC1BvG,EAAK8F,MAAMqO,aAAaC,EAAE9N,OAAOC,QA3LlBvG,EAgMnBwU,cAAgB,SAAC1O,GACb,IAAI2O,EAAa3O,EAAM4O,QACvB,GAAmB,OAAfD,GAA6C,IAAtBA,EAAWvW,OAAtC,CAIA,IAAIyW,EAAejC,IAAO5M,EAAM4O,QAAQ,GAAGA,QAAQxT,MAAM4R,OAAO,eAE1D8B,EAAYH,EAAWxI,IAAI,SAACiJ,GAC9B,IAAI2L,EAAM3L,EAAU3R,KAAKgC,MAAM,KAAK,GAChCub,EAAO5L,EAAU3R,KAAKgC,MAAM,KAAK,GAErC,KAAIvF,EAAK8F,MAAMwB,MACPtH,EAAK8F,MAAMwB,KAAKyZ,OACZ/gB,EAAK8F,MAAMwB,KAAKyZ,MAAMC,QAClBhhB,EAAK8F,MAAMwB,KAAKyZ,MAAMC,OAAOb,UACzBngB,EAAK8F,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASc,cAAyF,IAAzEjhB,EAAK8F,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASc,YAAY/L,EAAUD,UAJtI,CAYA,IAAIlV,EAAO,KACXC,EAAK8F,MAAMjG,UAAUC,QAAQ,SAACohB,GAC1B,OAAIA,EAAEjhB,KAAO4gB,OACT9gB,EAAOmhB,QAGP,IAIR,IAAI9H,EAAS,KAOb,OANArZ,EAAK1C,OAAO8X,QAAQrV,QAAQ,SAACqhB,GACrBA,EAAE/L,MAAQ0L,IACV1H,EAAS+H,KAKbvZ,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,wBAAwBpK,IAAKmT,EAAUD,QAASI,MAAO,CAAEC,MAAO8D,EAAO9D,MAAOE,YAAa,MAAOC,aAAc,QAC3H7N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEC,MAAO8D,EAAO9D,MAAOI,QAAS,OAAQC,cAAe,MAAOC,eAAgB,kBACtFhO,EAAAtG,EAAAuG,cAAA,WAAMuR,EAAO7V,KAAb,MACAqE,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEQ,WAAY,MAASX,EAAUR,QAAQQ,EAAUD,SAA/D,IAA0EmE,EAAOtD,OAErFlO,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEU,MAAO,OAAQC,OAAQ,MAAOC,WAAY,iBAKpE,OACIrO,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,oBACXvE,EAAAtG,EAAAuG,cAAA,WAAM8M,GAEJC,KAtPV5U,EAAK2G,MAAQ,CACTiN,cAAe,MAEfhB,cAAe,GACfC,eAAgB,GAChBa,UAAW,GACXD,iBAAkB,CAAC,YAAa,cAGpCzT,EAAKoS,WAAa,GAElBpS,EAAKohB,eAAiB,EACtBphB,EAAKqhB,cAAgB,EAdNrhB,mFAkBC,IAAA4B,EAAA7D,KAiBhB,GAhBAA,KAAKgT,YAAa,EAEdhT,KAAK+H,MAAMwB,MACPvJ,KAAK+H,MAAMwB,KAAKyZ,OACZhjB,KAAK+H,MAAMwB,KAAKyZ,MAAMC,QAClBjjB,KAAK+H,MAAMwB,KAAKyZ,MAAMC,OAAOb,UACzBpiB,KAAK+H,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASmB,YAAevjB,KAAK+H,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASmB,aAAevjB,KAAK4I,MAAMiN,eACrH7V,KAAKqI,SAAS,CACVwN,cAAe7V,KAAK+H,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASmB,aAQzEvjB,KAAK+H,MAAMkM,aAAejU,KAAK+H,MAAMsa,QAAS,CAC9C,IAAIC,EAAkB,GAClBC,GAAa,EACjBviB,KAAK+H,MAAMsa,QAAQtgB,QAAQ,SAACmS,GAIxB,GAAKrQ,EAAKkE,MAAMkM,YAAYC,GAI5B,GAAKrQ,EAAK2e,kBAAsB3e,EAAK2e,iBAAiBtO,IAASrQ,EAAKkE,MAAMkM,YAAYC,IAAWrQ,EAAK2e,iBAAiBtO,KAAUrQ,EAAKkE,MAAMkM,YAAYC,GAAMrQ,EAAKkE,MAAMkM,YAAYC,GAAM/T,OAAS,GAAGA,OACnMmiB,EAAgBpO,GAAQrQ,EAAKkE,MAAMkM,YAAYC,GAAMrQ,EAAKkE,MAAMkM,YAAYC,GAAM/T,OAAS,GAAGA,WADlG,CAIAoiB,GAAa,EAEbD,EAAgBpO,GAAQrQ,EAAKkE,MAAMkM,YAAYC,GAAMrQ,EAAKkE,MAAMkM,YAAYC,GAAM/T,OAAS,GAAGA,OAE9F,IAAIsiB,EAAgB,GACpB5e,EAAKkE,MAAMkM,YAAYC,GAAMnS,QAAQ,SAACuS,GAClCmO,EAAgBA,EAAc/e,OAAO4Q,KAGpCzQ,EAAK2e,kBAAoB3e,EAAK2e,iBAAiBtO,KAAUuO,EAActiB,SACxEsiB,EAAcnf,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEJ,KAAOK,EAAEL,KAAQ,GAAK,IACtDU,EAAKwQ,WAAWH,GAAQuO,QAlBxBH,EAAgBpO,GAAQ,IAuB5BqO,IACAviB,KAAKwiB,iBAAmBF,EAExBtiB,KAAKwU,+DAObxU,KAAKgT,YAAa,mCAoLb,IAAAhF,EAAAhO,KAEDwjB,EAAgB,MAapB,GAZIxjB,KAAK+H,MAAMwB,MACPvJ,KAAK+H,MAAMwB,KAAKyZ,OACZhjB,KAAK+H,MAAMwB,KAAKyZ,MAAMC,QAClBjjB,KAAK+H,MAAMwB,KAAKyZ,MAAMC,OAAOb,UACzBpiB,KAAK+H,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASmB,aACtCC,EAAgBxjB,KAAK+H,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASmB,YAOtEvjB,KAAK4I,MAAM+Z,sBAAuB,CAClC,IAAIpK,EAAYvY,KAAK+H,MAAMjG,UAAUoM,IAAI,SAAAlM,GAAI,OAAIA,EAAK1C,OAAO8X,QAAQlJ,IAAI,SAACmN,GACtE,IAAIoI,EAAWpI,EAAO7V,KAAO,IAAMxD,EAAKE,GAAK,IAAMmZ,EAAOtD,KAAO,IAAMsD,EAAOhE,IAC1EqM,EAAUrI,EAAOhE,IAAM,IAAMrV,EAAKE,GAEtC,KAAI8L,EAAKjG,MAAMwB,MACPyE,EAAKjG,MAAMwB,KAAKyZ,OACZhV,EAAKjG,MAAMwB,KAAKyZ,MAAMC,QAClBjV,EAAKjG,MAAMwB,KAAKyZ,MAAMC,OAAOb,UACzBpU,EAAKjG,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASc,cAA+E,IAA/DlV,EAAKjG,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASc,YAAYQ,IAS5H,MAAoB,YAAhBrI,EAAOnU,MAAsC,cAAhBmU,EAAOnU,KAC7B2C,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,cAAckL,cAAc,EAAMzc,KAAK,WAAW1B,KAAMie,EAAUvM,QAASwM,EAAS1f,IAAK0f,EAASlM,OAAQ6D,EAAO9D,MAAOmB,YAAa2C,EAAO1C,UAAWnF,KAAK,IAC1J,eAAhB6H,EAAOnU,MAAyC,QAAhBmU,EAAOnU,MAAkC,aAAhBmU,EAAOnU,KAChE2C,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,UAAUkL,cAAc,EAAMzc,KAAK,WAAW1B,KAAMie,EAAUvM,QAASwM,EAAS1f,IAAK0f,EAASlM,OAAQ6D,EAAO9D,MAAOmB,YAAa2C,EAAO1C,UAAWnF,KAAK,IACtJ,uBAAhB6H,EAAOtD,KACPlO,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,MAAMkL,cAAc,EAAMzc,KAAK,WAAW1B,KAAMie,EAAUvM,QAASwM,EAAS1f,IAAK0f,EAASlM,OAAQ6D,EAAO9D,MAAOmB,YAAa2C,EAAO1C,UAAWnF,KAAK,IAClJ,uBAAhB6H,EAAOtD,KACPlO,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,MAAMkL,cAAc,EAAMzc,KAAK,WAAW1B,KAAMie,EAAUvM,QAASwM,EAAS1f,IAAK0f,EAASlM,OAAQ6D,EAAO9D,MAAOmB,YAAa2C,EAAO1C,UAAWnF,KAAK,IAElK3J,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,MAAMkL,cAAc,EAAMzc,KAAK,WAAW1B,KAAMie,EAAUvM,QAASwM,EAAS1f,IAAK0f,EAASlM,OAAQ6D,EAAO9D,MAAOmB,YAAa2C,EAAO1C,UAAWnF,KAAK,QAK7KoF,EAAiB,KACrB,GAAI5Y,KAAK+H,MAAM8Q,WAAY,CACvB,IAAIC,EAAQ7C,KAAK8C,MAAiC,GAA3B/Y,KAAK+H,MAAM8Q,WAAW,IACzCG,EAAQ/C,KAAK8C,MAAiC,GAA3B/Y,KAAK+H,MAAM8Q,WAAW,IAE7CD,EACI/O,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAWR,MAAOc,EAAOb,OAAQe,EAAOlD,KAAM9V,KAAK4I,MAAM+Z,uBAEpDpK,EAED1O,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAeS,UAAQ,EAACC,YAAY,EAAOC,aAAc,CAACnZ,KAAK4I,MAAM8M,iBAAiB,GAAI1V,KAAK4I,MAAM8M,iBAAiB,IAAK8B,OAAO,OAAO4B,YAAa,KAEtJvP,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CACI/C,KAAM,CAAE4D,KAAM,WACdnC,QAAQ,OACRhQ,KAAK,SACLoS,OAAQ,EAAC,IAAIlX,MAAOgB,UAAW,IAAIhB,KAAK,IAAIA,KAASpC,KAAK4I,MAAMiN,eAAezS,WAC/EiS,MAAOrV,KAAK4I,MAAM+M,UAClB4D,cAAe,SAAC9D,GAAD,OAAUd,IAAc,EAAPc,GAAUV,OAAO,kBAErDlL,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAOC,QAAQ,cAAce,YAAY,OAAOF,OAAQ,CAAC,IAAK7D,KAAM,CAAE4D,KAAM,aAC5ExP,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAOC,QAAQ,UAAUe,YAAY,QAAQC,MAAM,EAAMH,OAAQ,CAAC,EAAG,KAAM7D,KAAM,CAAE4D,KAAM,aACzFxP,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAOC,QAAQ,MAAMe,YAAY,QAAQC,MAAM,EAAMH,OAAQ,CAAC,EAAG,KAAM7D,KAAM,CAAE4D,KAAM,YACrFxP,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAOC,QAAQ,MAAMe,YAAY,QAAQC,MAAM,EAAMH,OAAQ,CAAC,EAAG,KAAM7D,KAAM,CAAE4D,KAAM,WACrFxP,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAS3S,QAAS7F,KAAKyW,kBAOvC,OAEI5M,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,mBAEVwK,EAGD/O,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEU,MAAO,OAAQ0B,SAAU,SAAU/B,QAAS,OAAQC,cAAe,SAAU+B,SAAU,WAAYC,WAAY,OAAQC,UAAW,OAE5IhQ,EAAAtG,EAAAuG,cAAA,UAAQC,SAAU/J,KAAKoW,aAAclU,GAAG,sBAAsB4X,aAAc0J,EAAelM,MAAO,CAAEoC,SAAU,QAASK,SAAU,OAAQ9B,OAAQ,SAC7IpO,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAO,MAAf,SACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAO,OAAf,MACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAO,OAAf,OACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAO,OAAf,OACAqB,EAAAtG,EAAAuG,cAAA,UAAQtB,MAAO,QAAf,iBA9VD4B,aC8RRwZ,cAzRX,SAAAA,EAAY7b,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4jB,IACf3hB,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAA8jB,GAAA1b,KAAAlI,KAAM+H,KASV8b,kBAAoB,WAGhB,GAFA5hB,EAAK+Q,YAAa,EAEd/Q,EAAK8F,MAAMjG,WAAaG,EAAK8F,MAAMwB,KAAM,CACzC,GAAItH,EAAK8F,MAAMjG,YAAcG,EAAKH,UAC9B,OAEJG,EAAKH,UAAYG,EAAK8F,MAAMjG,UAI5B,IAFA,IAAIiV,EAAc,GAElB0G,EAAA,EAAAC,EAAoB5d,OAAOuQ,QAAQpO,EAAK8F,MAAMjG,WAA9C2b,EAAAC,EAAAvd,OAAAsd,IAA0D,KAAAxO,EAAAyO,EAAAD,GAA9CzZ,EAA8ClE,OAAA6d,EAAA,EAAA7d,CAAAmP,EAAA,MAElDjN,EAAOC,EAAK8F,MAAMjG,UAAUkC,GAG5B8f,EAAkB,GACtB7hB,EAAK8F,MAAMjG,UAAUkC,GAAK1E,OAAO8X,QAAQrV,QAAQ,SAACsZ,EAAQrX,GAEtD,GAAI8f,EAAgB9f,KAASqX,EAAOhE,IAAK,CAErC,IAAI0M,EAAiB1I,EAAOhE,IAAM,IAAMrV,EAAKE,GAE7C,GAAID,EAAK8F,MAAMwB,KAAKyZ,OACZ/gB,EAAK8F,MAAMwB,KAAKyZ,MAAMC,QAClBhhB,EAAK8F,MAAMwB,KAAKyZ,MAAMC,OAAOb,UACzBngB,EAAK8F,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASc,cACoC,IAAtEjhB,EAAK8F,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASc,YAAYa,GAClD,OAOpBD,EAAgBA,EAAgB3jB,QAAU4jB,KAKlDhN,EAAY/U,EAAKE,IAAM4hB,EAI3B7hB,EAAKoG,SAAS,CACV0O,YAAaA,EACbiN,eAAgBjN,IAIxB9U,EAAKgiB,uBA5DUhiB,EA+DnBob,qBAAuB,WACnBpb,EAAK+Q,YAAa,GAhEH/Q,EAmHnBie,WAAa,SAAC7J,GACV,IAAIP,EAAOO,EAAE8J,cAAcC,aAAa,cAGpC8D,EAAWjiB,EAAK8F,MAAMwB,KAE1B,GAAI2a,EAASlB,OACLkB,EAASlB,MAAMC,QACXiB,EAASlB,MAAMC,OAAOb,UAClB8B,EAASlB,MAAMC,OAAOb,SAASc,cAC0B,IAArDgB,EAASlB,MAAMC,OAAOb,SAASc,YAAYpN,GAG3C,OAFAoO,EAASlB,MAAMC,OAAOb,SAASc,YAAYpN,IAAQ,OACnD7T,EAAKkiB,aAAaD,GAOtCA,EAASlB,MAAMC,OAAOb,SAASc,YAAYpN,IAAQ,EACnD7T,EAAKkiB,aAAaD,IAvIHjiB,EA2InBmU,aAAe,SAACgO,GAEZ,IAAIF,EAAWjiB,EAAK8F,MAAMwB,KAC1B2a,EAASlB,MAAMC,OAAOb,SAASmB,WAAaa,EAC5CniB,EAAKkiB,aAAaD,IA/IHjiB,EAkJnBkiB,aAAe,SAACrO,GACZ7T,EAAK8F,MAAMsc,gBAAgBvO,IAjJ3B7T,EAAK2G,MAAQ,CACT5G,KAAMC,EAAK8F,MAAM/F,KACjBsiB,iBAAkB,CAAC,IAAK,KACxBpK,iBAAkB,GALPjY,oFAsEf,GAFAjC,KAAKikB,sBAEAjkB,KAAK4I,MAAMyZ,SAET,GAAIriB,KAAK4I,MAAMyZ,QAAQliB,SAAWH,KAAK+H,MAAMjG,UAAU3B,OAG1D,YAGJ,GAAIH,KAAK+H,MAAMjG,aAAe9B,KAAK4I,MAAMyZ,SAAYriB,KAAK4I,MAAMyZ,SAAYriB,KAAK4I,MAAMyZ,QAAQliB,SAAWH,KAAK+H,MAAMjG,UAAU3B,QAAW,CACtI,IAAIkiB,EAAUriB,KAAK4I,MAAMyZ,QACpBA,IACDA,EAAU,IAGd,QAAA5C,EAAA,EAAAC,EAAoB5f,OAAOuQ,QAAQrQ,KAAK+H,MAAMjG,WAA9C2d,EAAAC,EAAAvf,OAAAsf,IAA0D,KAAAE,EAAAD,EAAAD,GAA9Czb,EAA8ClE,OAAA6d,EAAA,EAAA7d,CAAA6f,EAAA,MAEjD0C,GAAYA,EAAQtf,SAAS/C,KAAK+H,MAAMjG,UAAUkC,GAAK9B,MACxDmgB,EAAQA,EAAQliB,QAAUH,KAAK+H,MAAMjG,UAAUkC,GAAK9B,IAI5DlC,KAAKqI,SAAS,CACVga,QAASA,mDAMjB,IAAItb,EAAU,IAAI3E,KAElB,GAAMpC,KAAK4I,MAAM0b,mBAAqB,CAACtkB,KAAKma,OAAOC,YAAapa,KAAKma,OAAOE,eAAoBtT,EAAQ3D,UAAYpD,KAAK4I,MAAMsR,iBAAoB,IAAO,CAEtJ,IAAII,EAAW,CAACta,KAAKma,OAAOC,YAAepa,KAAKma,OAAOC,YAAc,IAAO,GAAIpa,KAAKma,OAAOE,aAAgBra,KAAKma,OAAOE,aAAe,IAAO,GAE1IC,IAAata,KAAK4I,MAAM0b,kBACpBtkB,KAAKgT,YACLhT,KAAKqI,SAAS,CACVic,iBAAkBhK,EAClBJ,iBAAkBnT,EAAQ3D,8CA2CrC,IAAAS,EAAA7D,KAED8gB,EAAiB,GA8FrB,OA7FI9gB,KAAK4I,MAAMmO,cACX+J,EAAiB9gB,KAAK+H,MAAMjG,UAAUoM,IAAI,SAAAlM,GAAI,OAAIA,EAAK1C,OAAO8X,QAAQlJ,IAAI,SAACmN,EAAQrX,GAC/E,OACI6F,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,iCAAiCpK,IAAKqX,EAAOhE,KAEtD,WAEE,IAAI+H,EAAM/D,EAAOhE,IACbL,EAAShT,EACTmT,EAAYnV,EAAK1C,OAAO8X,QAAQJ,GAChCuN,EAAUnF,EAAM,IAAMpd,EAAKE,GAE3B6e,EAAa,EACbC,EAAgB,MAepB,OAbInd,EAAKkE,MAAMwB,MACP1F,EAAKkE,MAAMwB,KAAKyZ,OACZnf,EAAKkE,MAAMwB,KAAKyZ,MAAMC,QAClBpf,EAAKkE,MAAMwB,KAAKyZ,MAAMC,OAAOb,UACzBve,EAAKkE,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASc,cAA+E,IAA/Drf,EAAKkE,MAAMwB,KAAKyZ,MAAMC,OAAOb,SAASc,YAAYqB,KACxGxD,EAAa,GACbC,EAAgB,OAQhCnX,EAAAtG,EAAAuG,cAAA,OAAKwE,aAAYiW,EAASvgB,IAAKob,EAAKjV,QAAStG,EAAKqc,WAAY5I,MAAO,CAAEU,MAAO,QAASqE,UAAW,OAAQ1E,QAAS,OAAQC,cAAe,MAAOC,eAAgB,WAAY6B,SAAU,SAAUsD,OAAQ,UAAW9E,WAAY,UAAW+I,QAASF,EAAYxJ,MAAOvV,EAAK1C,OAAO8X,QAAQJ,GAAQO,QAC/R1N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAE4J,WAAYF,IAA1B,IAA8C7J,EAAU3R,MAG7B,YAAnB2R,EAAUjQ,KACH2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAehF,MAAO,CAAEC,MAAO,OAAQmC,SAAU,UAC9B,aAAnBvC,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAYhF,MAAO,CAAEC,MAAO,OAAQmC,SAAU,UAC3B,QAAnBvC,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAahF,MAAO,CAAEC,MAAO,OAAQmC,SAAU,UAC5B,eAAnBvC,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAWhF,MAAO,CAAEC,MAAO,OAAQmC,SAAU,UAC1B,cAAnBvC,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAACwS,EAAA,EAAD,CAAuBhF,MAAO,CAAEC,MAAO,OAAQmC,SAAU,UACtC,QAAnBvC,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAAA,OAAKyE,IAAKgO,IAAQlO,IAAI,WAAWiJ,MAAO,CAAEqC,SAAU,WAAYhC,QAAS,eAAgB0E,UAAW,UACjF,SAAnBlF,EAAUjQ,KACV2C,EAAAtG,EAAAuG,cAAA,OAAKyE,IAAKiO,IAASnO,IAAI,YAAYiJ,MAAO,CAAEqC,SAAU,WAAYhC,QAAS,eAAgB0E,UAAW,UAEtGxS,EAAAtG,EAAAuG,cAAA,aA3CzB,GAkDA,WACE,IAAIsV,EAAM/D,EAAOhE,IACbL,EAAShT,EACTmT,EAAYnV,EAAK1C,OAAO8X,QAAQJ,GAChCmK,EAAoB,OAYxB,OAVItd,EAAKkE,MAAMyc,cAAgB3gB,EAAKkE,MAAMyc,aAAaxiB,EAAKE,MAAQiV,EAAUmE,OAA6B,IAApBnE,EAAUmE,SAAiBnE,EAAUsE,YAAuC,IAAzBtE,EAAUsE,cAE5I0F,EADEhK,EAAUmE,MAAgC,EAAvBnE,EAAUsE,WAAmB5X,EAAKkE,MAAMyc,aAAaxiB,EAAKE,IAAIkd,IAAWjI,EAAUmE,MAAgC,EAAvBnE,EAAUsE,WAAmB5X,EAAKkE,MAAMyc,aAAaxiB,EAAKE,IAAIkd,GAC3J,UACXjI,EAAUmE,MAASnE,EAAUsE,WAAe5X,EAAKkE,MAAMyc,aAAaxiB,EAAKE,IAAIkd,IAAWjI,EAAUmE,MAASnE,EAAUsE,WAAe5X,EAAKkE,MAAMyc,aAAaxiB,EAAKE,IAAIkd,GAC1J,UAEA,WAKxBvV,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,kCAAkCkJ,MAAO,CAAEY,WAAYiJ,IAEhE,WACE,GAAKtd,EAAKkE,MAAMyc,aAAaxiB,EAAKE,IAAlC,CAGA,IAAI8U,EAAShT,EACTmT,EAAYnV,EAAK1C,OAAO8X,QAAQJ,GAEpC,OAAOnN,EAAAtG,EAAAuG,cAAA,WAAMmM,KAAKC,MAA8C,GAAxCrS,EAAKkE,MAAMyc,aAAaxiB,EAAKE,IAAIkd,IAAa,GAAIjI,EAAUY,OAPtF,IAnBZ,SAuCdlO,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,SAAUqF,UAAW,OAAQwH,UAAW,WAClF5a,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEU,MAAO,QAASC,OAAQ,OAAQyM,UAAW,QAAU7jB,IAAK,SAAA0Z,GAAO,OAAI1W,EAAKsW,OAASI,IAC7F1Q,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,wBACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,wBACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,kBACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,4BACT,WACE,GAAIvK,EAAK+E,MAAMyZ,SAAWxe,EAAK+E,MAAM0b,kBAAoBzgB,EAAK+E,MAAMob,eAChE,OAAOna,EAAAtG,EAAAuG,cAAC6a,EAAD,CAAU9L,WAAYhV,EAAK+E,MAAM0b,iBAAkBrQ,YAAapQ,EAAKkE,MAAM6c,aAAcZ,eAAgBngB,EAAK+E,MAAMob,eAAgBliB,UAAW+B,EAAKkE,MAAMjG,UAAWugB,QAASxe,EAAK+E,MAAMyZ,QAASjM,aAAcvS,EAAKuS,aAAc7M,KAAM1F,EAAKkE,MAAMwB,OAFjQ,QAUtBM,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,2BACXvE,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,6BAEJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,sBAEH4e,aA/QL1W,aCoHTya,cAtHX,SAAAA,EAAY9c,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6kB,IACf5iB,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAA+kB,GAAA3c,KAAAlI,KAAM+H,KAoBV+L,mBAAqB,WACb7R,EAAK8F,MAAM+c,gBAAkB7iB,EAAK8F,MAAM+c,iBAAmB7iB,EAAK2G,MAAMkc,iBACtE3jB,QAAQC,IAAI,kBAAmBa,EAAK8F,MAAM+c,gBAC1C7iB,EAAKoG,SAAS,CACVyc,eAAgB7iB,EAAK8F,MAAM+c,mBAzBpB7iB,EA8BnBwU,cAAgB,SAAC1O,GACb,IAAI2O,EAAa3O,EAAM4O,QACvB,GAAmB,OAAfD,GAA6C,IAAtBA,EAAWvW,OAAtC,CAIA,IAAIyW,EAAejC,IAAO5M,EAAM4O,QAAQ,GAAGA,QAAQxT,MAAM4R,OAAO,aAE1D8B,EAAYH,EAAWxI,IAAI,SAAC4I,GAAD,OAGrBjN,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEoC,SAAU,OAAQnC,MAAOT,EAAEU,QAAUxT,IAAK8S,EAAEI,SAAUJ,EAAEI,QAAQ1P,MAAM,KAAK,GAAzF,IAA8FsP,EAAEI,QAAQ1P,MAAM,KAAK,GAAnH,MAA0HkP,EAAW,GAAGC,QAAQG,EAAEI,YAK9J,OACIrN,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,0BACXvE,EAAAtG,EAAAuG,cAAA,WAAM8M,GAELC,KAhDT5U,EAAK2G,MAAQ,GAFE3G,mFAQfjC,KAAKgT,YAAa,EACdhT,KAAK+H,MAAM/F,MAAQhC,KAAKgT,YACpBhT,KAAK+H,MAAM/F,KAAKE,KAAOlC,KAAK0B,SAC5B1B,KAAK0B,OAAS1B,KAAK+H,MAAM/F,KAAKE,mDAOtClC,KAAKgT,YAAa,mCA0ClB,IAAIuF,EAAY,KAChB,GAAIvY,KAAK+H,MAAMgd,WAAY,CAIvBxM,EAAYvY,KAAK+H,MAAMgd,WAAW7W,IAAI,SAAC8W,GAAD,OAE9BpiB,EAC+B,SAA3BoiB,EAASxd,MAAM,KAAK,GACbqC,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,OAAOvR,KAAK,WAAW1B,KAAMwf,EAAU9N,QAAS8N,EAAUhhB,IAAKghB,EAAUxN,OAAQ,UAAWmB,UAAW,GAAKnF,KAAK,IACpG,QAA3BwR,EAASxd,MAAM,KAAK,GACpBqC,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,OAAOvR,KAAK,WAAW1B,KAAMwf,EAAU9N,QAAS8N,EAAUhhB,IAAKghB,EAAUxN,OAAQ,UAAWmB,UAAW,GAAKnF,KAAK,IAE/H3J,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAMC,QAAQ,OAAOvR,KAAK,WAAW1B,KAAMwf,EAAU9N,QAAS8N,EAAUhhB,IAAKghB,EAAUxN,OAAQ,UAAWmB,UAAW,EAAGnF,KAAK,MASpJ,IAAIyR,EAAsB,KAC1B,GAAIjlB,KAAK4I,MAAMkc,gBAAkB9kB,KAAK4I,MAAMkc,eAAe,IACnD9kB,KAAK+H,MAAM8Q,WAAY,CACvB,IAAIC,EAAQ7C,KAAK8C,MAAiC,EAA3B/Y,KAAK+H,MAAM8Q,WAAW,IACzCG,EAAQ/C,KAAK8C,MAAiC,GAA3B/Y,KAAK+H,MAAM8Q,WAAW,IAE7CoM,EACIpb,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAWR,MAAOc,EAAOb,OAAQe,EAAOlD,KAAM9V,KAAK4I,MAAMkc,gBAEpDvM,EAED1O,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CACItB,QAAQ,OACRhQ,KAAK,SACLoS,OAAQ,CAAC,IAAIlX,KAAKpC,KAAK4I,MAAMkc,eAAe,GAAG3hB,MAAMC,UAAW,IAAIhB,KAAKpC,KAAK4I,MAAMkc,eAAe9kB,KAAK4I,MAAMkc,eAAe3kB,OAAS,GAAGgD,MAAMC,WAC/ImW,cAAe,SAAC2L,GAAD,OAAcvQ,IAAOuQ,GAAUnQ,OAAO,cACrD0E,MAAM,IACV5P,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAOC,QAAQ,OAAOe,YAAY,OAAOF,OAAQ,CAAC,GAAI,MACtDzP,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAOC,QAAQ,QAAQe,YAAY,UACnC3P,EAAAtG,EAAAuG,cAAC0O,EAAA,EAAD,CAAS3S,QAAS7F,KAAKyW,iBAOvC,OAEI5M,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,uBACV6W,UAjHW7a,aCiNb+a,cAhNX,SAAAA,EAAYpd,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmlB,IACfljB,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAqlB,GAAAjd,KAAAlI,KAAM+H,KAYV8b,kBAAoB,WAChB5hB,EAAK+Q,YAAa,EACd/Q,EAAK8F,MAAMqd,cACXnjB,EAAKojB,sBAAsBpjB,EAAK8F,MAAMqd,cAM1CnjB,EAAKgiB,uBAtBUhiB,EA+CnBob,qBAAuB,WACnBpb,EAAK+Q,YAAa,GAhDH/Q,EAqHnBqjB,mBAAqB,SAACC,GAClBtjB,EAAKoG,SAAS,CACVmd,WAAYD,IAGhBtjB,EAAKwjB,aAAaF,IAxHlBtjB,EAAK2G,MAAQ,CACT0b,iBAAkB,CAAC,IAAK,KACxBpK,iBAAkB,EAElBxY,OAAQ,uBACRC,KAAM,OACNC,MAAO,MARIK,oFA0BfjC,KAAKikB,oEAIL,IAAIld,EAAU,IAAI3E,KAElB,GAAMpC,KAAK4I,MAAM0b,mBAAqB,CAACtkB,KAAKma,OAAOC,YAAapa,KAAKma,OAAOE,eAAoBtT,EAAQ3D,UAAYpD,KAAK4I,MAAMsR,iBAAoB,IAAO,CAEtJ,IAAII,EAAW,CAACta,KAAKma,OAAOC,YAAepa,KAAKma,OAAOC,YAAc,IAAO,GAAIpa,KAAKma,OAAOE,aAAgBra,KAAKma,OAAOE,aAAe,IAAO,GAE1IC,IAAata,KAAK4I,MAAM0b,kBACpBtkB,KAAKgT,YACLhT,KAAKqI,SAAS,CACVic,iBAAkBhK,EAClBJ,iBAAkBnT,EAAQ3D,sDAW7B3B,EAAgBI,GAC7B7B,KAAK+H,MAAM2d,iBAAiBjkB,EAAgBzB,KAAK4I,MAAMlH,OAAQ1B,KAAK4I,MAAMjH,KAAM3B,KAAK4I,MAAMhH,MAAOC,mDAG9E,IAAAgC,EAAA7D,KACpBmB,QAAQC,IAAI,0BAA2BpB,KAAK+H,MAAMqd,cAEpCplB,KAAK+H,MAAMqd,aAAzB,IAEIO,EAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/EC,EAAU,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACjE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACtD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE5DC,EAAoB,GACpBd,EAAa,GAPF,CAAC,KAAM,MASbhjB,QAAQ,SAACJ,GACdgkB,EAAU5jB,QAAQ,SAACH,GACfgkB,EAAQ7jB,QAAQ,SAACF,GAGb,IADA,IAAIikB,EAAsB,GAC1BrI,EAAA,EAAAC,EAAgC5d,OAAOuQ,QAAQxM,EAAKkE,MAAMqd,cAA1D3H,EAAAC,EAAAvd,OAAAsd,IAAyE,KAAAxO,EAAAyO,EAAAD,GAAApR,EAAAvM,OAAA6d,EAAA,EAAA7d,CAAAmP,EAAA,GAA7DvN,EAA6D2K,EAAA,GAArD0Z,EAAqD1Z,EAAA,GACrE,GAAI0Z,EAAQpkB,IAASokB,EAAQpkB,GAAMC,IAAUmkB,EAAQpkB,GAAMC,GAAOC,GAG9D,QAAA4d,EAAA,EAAAC,EAAiC5f,OAAOuQ,QAAQ0V,EAAQpkB,GAAMC,GAAOC,IAArE4d,EAAAC,EAAAvf,OAAAsf,IACI,IADwE,IAAAE,EAAAD,EAAAD,GAAAG,EAAA9f,OAAA6d,EAAA,EAAA7d,CAAA6f,EAAA,GAAhEqG,EAAgEpG,EAAA,GAAtDqG,EAAsDrG,EAAA,GACxEC,EAAA,EAAAC,EAA2BhgB,OAAOuQ,QAAQ4V,GAA1CpG,EAAAC,EAAA3f,OAAA0f,IAAmD,KAAAE,EAAAD,EAAAD,GAAAG,EAAAlgB,OAAA6d,EAAA,EAAA7d,CAAAigB,EAAA,GAAvCX,EAAuCY,EAAA,GAAlCxX,EAAkCwX,EAAA,GAC3CkG,EAAgB9G,EAAM,IAAM1d,EAAS,IAAMskB,EAC/CF,EAAoBI,GAAiB1d,EAEhCuc,EAAWhiB,SAASmjB,KACrBnB,EAAWA,EAAW5kB,QAAU+lB,IAQpD,GAAgD,IAA5CpmB,OAAOwE,KAAKwhB,GAAqB3lB,OAAc,CAE/C,IAAIgmB,EAAQ,IAAI/jB,KAAKT,EAAO,IAAMC,EAAQ,IAAMC,GAAK0d,UACrDuG,EAAoB3iB,KAAOgjB,EAC3BN,EAAkBA,EAAkB1lB,QAAU2lB,SAO9D9lB,KAAKqI,SAAS,CACV0c,WAAYA,EACZD,eAAgBe,gDAUpB7lB,KAAK+H,MAAMqe,kBAAkBpmB,KAAK4I,MAAMlH,OAAQ1B,KAAK4I,MAAMjH,KAAM3B,KAAK4I,MAAMhH,MAAO5B,KAAKslB,yDAW/EC,GAGTpkB,QAAQC,IAAI,gBAAiBmkB,GAC7B,QAAA7E,EAAA,EAAAC,EAA8B7gB,OAAOuQ,QAAQkV,GAA7C7E,EAAAC,EAAAxgB,OAAAugB,IAAqD,CAMjD,IANiD,IAAAE,EAAAD,EAAAD,GAAAG,EAAA/gB,OAAA6d,EAAA,EAAA7d,CAAA8gB,EAAA,GAAzC/e,EAAyCgf,EAAA,GAApCwF,EAAoCxF,EAAA,GAC7CyF,EAAiB,GACjBC,EAAiB,GACjBC,EAAa,GACbC,EAAc,GAElBC,EAAA,EAAAC,EAAgC7mB,OAAOuQ,QAAQgW,GAA/CK,EAAAC,EAAAxmB,OAAAumB,IACI,IADsD,IAAAE,EAAAD,EAAAD,GAAAG,EAAA/mB,OAAA6d,EAAA,EAAA7d,CAAA8mB,EAAA,GAAxCE,GAAwCD,EAAA,GAAAA,EAAA,IACtDE,EAAA,EAAAC,EAA+BlnB,OAAOuQ,QAAQyW,GAA9CC,EAAAC,EAAA7mB,OAAA4mB,IACI,IADsD,IAAAE,EAAAD,EAAAD,GAAAG,EAAApnB,OAAA6d,EAAA,EAAA7d,CAAAmnB,EAAA,GAArCliB,GAAqCmiB,EAAA,GAAAA,EAAA,IACtDC,EAAA,EAAAC,EAAiCtnB,OAAOuQ,QAAQtL,GAAhDoiB,EAAAC,EAAAjnB,OAAAgnB,IAAwD,KAAAE,EAAAD,EAAAD,GAAAG,EAAAxnB,OAAA6d,EAAA,EAAA7d,CAAAunB,EAAA,GAA5CE,EAA4CD,EAAA,GAAjC9e,EAAiC8e,EAAA,GAElC,SAAdC,IAKCjB,EAAeiB,GAGhBjB,EAAeiB,GAAajB,EAAeiB,GAAa,EAFxDjB,EAAeiB,GAAa,EAM3BhB,EAAegB,GAGhBhB,EAAegB,GAAahM,WAAWgL,EAAegB,IAAchM,WAAW/S,GAF/E+d,EAAegB,GAAatR,KAAKC,MAAgB,GAAT1N,GAAe,KAMtDie,EAAYc,IAAcd,EAAYc,GAAa/e,KACpDie,EAAYc,GAAatR,KAAKC,MAAgB,GAAT1N,GAAe,MAInDge,EAAWe,IAAcf,EAAWe,GAAa/e,KAClDge,EAAWe,GAAatR,KAAKC,MAAgB,GAAT1N,GAAe,KAMnE,QAAAgf,EAAA,EAAAC,EAA2B3nB,OAAOuQ,QAAQkW,GAA1CiB,EAAAC,EAAAtnB,OAAAqnB,IAA2D,KAAAE,EAAAD,EAAAD,GAAAG,EAAA7nB,OAAA6d,EAAA,EAAA7d,CAAA4nB,EAAA,GAA/C1jB,EAA+C2jB,EAAA,GAA1Cnf,EAA0Cmf,EAAA,GACvDpB,EAAeviB,GAAOiS,KAAKC,MAAO1N,EAAQ8d,EAAetiB,GAAQ,IAAM,GAI3E,IAAIvC,EAAiB,GACrBA,EAAemmB,KAAOnB,EACtBhlB,EAAeomB,IAAMrB,EACrB/kB,EAAeqmB,QAAUvB,EACzBvmB,KAAK0lB,iBAAiBjkB,EAAgBI,qCAKrC,IAAAmM,EAAAhO,KAEL,OACI6J,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEK,QAAS,OAAQC,cAAe,WAC1C/N,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEU,MAAO,QAAS0M,UAAW,QAAU7jB,IAAK,SAAA0Z,GAAO,OAAIvM,EAAKmM,OAASI,IAC7E1Q,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,wBACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,wBACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,kBACXvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,4BACXvE,EAAAtG,EAAAuG,cAACie,EAAD,CAAelP,WAAY7Y,KAAK4I,MAAM0b,iBAAkBQ,eAAgB9kB,KAAK4I,MAAMkc,eAAgBC,WAAY/kB,KAAK4I,MAAMmc,kBAM9Ilb,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,oCAzMFhE,oDCiKd4d,eA5JX,SAAAA,EAAYjgB,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgoB,IACf/lB,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAAkoB,GAAA9f,KAAAlI,KAAM+H,KAOVkgB,aAAe,WACXhmB,EAAK8F,MAAMmgB,eAAe,aATXjmB,EAYnBkmB,WAAa,WACTlmB,EAAK8F,MAAMmgB,eAAe,WAbXjmB,EAgBnBmmB,aAAe,WACXnmB,EAAK8F,MAAMmgB,eAAe,aAjBXjmB,EAoBnBomB,UAAY,WACRpmB,EAAK8F,MAAMmgB,eAAe,UArBXjmB,EAwBnBigB,QAAU,SAACjY,GACPhI,EAAK8F,MAAMjG,UAAUC,QAAQ,SAACC,GACtBA,EAAKE,KAAO+H,EAAG1B,OAAO0E,QAAQzE,OAC9BvG,EAAK8F,MAAMma,QAAQlgB,MA3BZC,EAgCnBqmB,cAAgB,WACZrmB,EAAK8F,MAAMugB,iBA/BXrmB,EAAK2G,MAAQ,GAFE3G,wEAsCV,IAAA4B,EAAA7D,KAEDuoB,EAA0B,KAyF9B,OAxFIvoB,KAAK+H,MAAMjG,YACXymB,EAA0BvoB,KAAK+H,MAAMjG,UAAUoM,IAAI,SAAClM,GAEhD,IAAIwmB,EAAiB,KACjB3kB,EAAKkE,MAAMyc,aAAaxiB,EAAKE,MAC7BsmB,EAAiB3kB,EAAKkE,MAAMyc,aAAaxiB,EAAKE,KAGlD,IAAIumB,EAAazmB,EAAKwD,KAAKgC,MAAM,KAC7BkhB,EAAW,GAEX1mB,EAAKwD,KAAKrF,QAAU,EACpBsoB,EAAW1mB,QAAQ,SAAC4mB,GAChBD,GAAYC,EAAMlY,OAAO,KAG7BiY,EAAW1mB,EAAKwD,KAGpB,IAAIojB,EAAiB,UACjBC,EAAa,KACjB,GAAIhlB,EAAKkE,MAAMyc,aAAaxiB,EAAKE,IAAK,CAClC,IAAI6T,GAAM,IAAI3T,MAAOgB,UACjBgO,EAAgB,IAAIhP,KAA6C,IAAxCyB,EAAKkE,MAAMyc,aAAaxiB,EAAKE,IAAIiB,MAE1DU,EAAKuN,eAAkBA,IAAkBvN,EAAKuN,cAAcpP,EAAKE,MACjE2B,EAAKuN,cAAcpP,EAAKE,IAAMkP,GAKlC,IAAI0X,EAAa/S,EAA8C,IAAxClS,EAAKkE,MAAMyc,aAAaxiB,EAAKE,IAAIiB,KACpD2lB,EAAa,IACbF,EAAiB,UACVE,EAAa,IACpBF,EAAiB,UACVE,EAAa,IACpBF,EAAiB,UACVE,EAAa,MACpBF,EAAiB,WAKrBC,EAAalU,IAAOvD,GAAe2X,UAKvC,OACIlf,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,sBAAsBpK,IAAKhC,EAAKE,GAAIiI,QAAStG,EAAKqe,QAAS5T,aAAYtM,EAAKE,IACvF2H,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,yBAAyBE,aAAYtM,EAAKE,IACrD2H,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAE0R,cAAe,SACxBH,GAELhf,EAAAtG,EAAAuG,cAAA,OAAKwN,MAAO,CAAEC,MAAOqR,EAAgBhP,WAAY,QAAjD,WAIJ/P,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,2BAA2BE,aAAYtM,EAAKE,IACtDwmB,GAEH,WACE,GAAIF,GAAkBA,EAAeS,SACjC,OACIpf,EAAAtG,EAAAuG,cAAA,OAAKjJ,IAAKgD,EAAKqlB,cAAe9a,UAAU,2BAA2BE,aAAYtM,EAAKE,IAC/E+T,KAAKC,MAAgC,GAA1BsS,EAAeS,UAAiB,GADhD,SAHV,GAWA,WACE,GAAIT,GAAkBA,EAAeW,SACjC,OACItf,EAAAtG,EAAAuG,cAAA,OAAKjJ,IAAKgD,EAAKulB,kBAAmBhb,UAAU,+BAA+BE,aAAYtM,EAAKE,IACvF+T,KAAKC,MAAgC,GAA1BsS,EAAeW,UAAiB,GADhD,KAHV,OAiBdtf,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,WACJ2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,eAAeiI,QAASnK,KAAKmoB,YACjCte,EAAAtG,EAAAuG,cAAA,OAAKyE,IAAK8a,KAAYhb,IAAI,WAAWiJ,MAAO,CAAEyC,SAAU,YAG3DwO,EAED1e,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,sBAAsBkJ,MAAO,CAAEY,WAAY,WAAa/N,QAASnK,KAAKooB,cACjFve,EAAAtG,EAAAuG,cAACwf,GAAA,EAAD,CAAoBhS,MAAO,CAAEC,MAAO,OAAQmC,SAAU,OAAQwH,WAAY,SAD9E,MAIArX,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,sBAAsBkJ,MAAO,CAAEY,WAAY,WAAa/N,QAASnK,KAAKioB,cACjFpe,EAAAtG,EAAAuG,cAACyf,GAAA,EAAD,CAAajS,MAAO,CAAEC,MAAO,OAAQmC,SAAU,OAAQwH,WAAY,UAGvErX,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,uBACfvE,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,wBAAwBjE,QAASnK,KAAKsoB,eAArD,kBArJKle,aCyQNof,eA1Pd,SAAAA,EAAYzhB,GAAO,IAAA9F,EAAA,OAAAnC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwpB,IAClBvnB,EAAAnC,OAAAkI,EAAA,EAAAlI,CAAAE,KAAAF,OAAAmI,EAAA,EAAAnI,CAAA0pB,GAAAthB,KAAAlI,KAAM+H,KAmCP0hB,QAAU,SAACnoB,GACVW,EAAKoG,SAAS,CAAEkB,KAAMjI,KArCJW,EAyCnBynB,qBAAuB,SAACpoB,GACvBW,EAAKoG,SAAS,CAAEkB,KAAMjI,IAEtBH,QAAQC,IAAI,qBAAsBE,GAElCW,EAAK+J,SAASyd,QAAQnoB,IA9CJW,EAkDnByjB,iBAAmB,SAACjkB,EAAgBC,EAAQC,EAAMC,EAAOC,GAGxDV,QAAQC,IAAI,2BAA4BK,GACxCQ,EAAK+J,SAAS0Z,iBAAiBjkB,EAAgBC,EAAQC,EAAMC,EAAOC,IAtDlDI,EAyDnB0nB,qBAAuB,SAACvE,GACvBnjB,EAAKoG,SAAS,CAAE+c,aAAcA,KA1DZnjB,EA6DnBmkB,kBAAoB,SAAC1kB,EAAQC,EAAMC,EAAOhB,GACzCqB,EAAK+J,SAAS4d,cAAcloB,EAAQC,EAAMC,EAAOhB,IA9D/BqB,EAkEnBgZ,aAAe,SAAC4O,GACf,IAAIC,EAAW7nB,EAAK2G,MAAMmhB,YAC1BD,EAASxqB,OAASuqB,EAElB5nB,EAAKoG,SAAS,CAAE0hB,YAAaD,KAtEX7nB,EAyEnBgC,aAAe,SAACnC,GACfX,QAAQC,IAAI,cAAeU,GAE3BA,EAAUC,QAAQ,SAACC,GAClBC,EAAK+J,SAASge,gBAAgBhoB,EAAKE,GAAID,EAAKgoB,mBAG7ChoB,EAAKoG,SAAS,CAAEvG,UAAWA,IAE3BG,EAAK+J,SAASke,gBAAgBpoB,EAAWG,EAAKkoB,kBAlF5BloB,EAqFnBwC,gBAAkB,SAACyO,GAClBjR,EAAKoG,SAAS,CAAE6K,aAAcA,KAtFZjR,EAyFnBkoB,gBAAkB,SAACC,EAAQC,GAC1B,GAAoB,OAAhBA,EAAJ,CAGA,IAAIC,EAAcroB,EAAK2G,MAAM4b,aAC7B8F,EAAYF,EAAO9nB,YAAc+nB,EAEjCpoB,EAAKoG,SAAS,CAAEmc,aAAc8F,MAhGZroB,EAmGnBgoB,gBAAkB,SAACM,EAAe1oB,EAAKiU,GACtC,IAAI0U,EAAevoB,EAAK2G,MAAMgc,aAE1B6F,EAAmB,GAEvB5oB,EAAM0U,SAAS1U,GAEX2oB,EAAaD,KAChBE,EAAmBD,EAAaD,IAG7BE,EAAiB5oB,KACpB4oB,EAAiB5oB,GAAO,MAGzB4oB,EAAiB5oB,GAAOiU,EAExB0U,EAAaD,GAAiBE,EAE9BxoB,EAAKoG,SAAS,CAAEuc,aAAc4F,KAtHZvoB,EA2HnByoB,YAAc,WAEHzoB,EAAKhC,SAASI,GAAGQ,MAAMC,MAAM,SAASA,MAAMmB,EAAK2G,MAAMjI,KAE7DI,GAAG,QAAS,SAACC,GAChBiB,EAAKoG,SAAS,CAAEC,SAAUtH,EAASC,MAAMqH,YACvC,SAAUpH,GACZC,QAAQC,IAAI,6BAA+BF,EAAYG,SAlItCY,EAuInBqmB,cAAgB,WACfrmB,EAAKoG,SAAS,CACb1H,IAAK,OAENsB,EAAKhC,SAASM,KAAKoqB,UAAUvjB,KAAK,WAEjCjG,QAAQC,IAAR,cACAwU,OAAOgV,SAASC,WACdjjB,MAAM,SAAUC,GAElB1G,QAAQC,IAAR,sBAAAsC,OAAkCmE,OAjJjB5F,EAqJnBimB,eAAiB,SAAC4C,EAAU5oB,GAC3BD,EAAKoG,SAAS,CACb0iB,YAAaD,EACbf,YAAa,KACbroB,OAAQQ,EACRwC,UAAW,QA1JMzC,EA8JnBgmB,aAAe,WACiB,aAA3BhmB,EAAK2G,MAAMmiB,YACd9oB,EAAKoG,SAAS,CACb0iB,YAAa,WACbrmB,UAAW,OAGZzC,EAAKoG,SAAS,CACb3D,UAAW,QAtKKzC,EA2KnBomB,UAAY,WACoB,UAA3BpmB,EAAK2G,MAAMmiB,YACd9oB,EAAKoG,SAAS,CACb0iB,YAAa,QACbhB,YAAa,OAGd9nB,EAAKoG,SAAS,CACb0hB,YAAa,QAnLG9nB,EAyLnBigB,QAAU,SAAClgB,GACVb,QAAQC,IAAI,cAAeY,GAC3BC,EAAKoG,SAAS,CACb0hB,YAAa/nB,EACb+oB,YAAa,WA7LI9oB,EAiMnBgO,aAAe,SAACvL,GACfvD,QAAQC,IAAI,mBAAoBsD,GAChCzC,EAAKoG,SAAS,CACb0iB,YAAa,WACbrmB,UAAWA,KAnMZzC,EAAK2G,MAAQ,CACZmiB,YAAa,SACbpqB,IAAK,KACL2H,SAAU,GACV5D,UAAW,KACXqlB,YAAa,KACbroB,OAAQ,KAERwR,aAAc,GACdsR,aAAc,GAEdI,aAAc,IAGf3iB,EAAK+J,SAAW,IAAIvL,EAEpBwB,EAAKhC,SAAW,IAAIJ,EAEpBoC,EAAKhC,SAASM,KAAK+I,mBAAmB,SAACC,GAClCA,IACHtH,EAAKoG,SAAS,CAAE1H,IAAK4I,EAAKhI,MAC1BU,EAAKyoB,cAELzoB,EAAK+J,SAASgf,gBAAgBzhB,EAAKhI,IAAKU,EAAK0nB,sBAE7C1nB,EAAK+J,SAASif,QAAQ1hB,EAAKhI,IAAKU,EAAKwnB,SACrCxnB,EAAK+J,SAASkf,aAAajpB,EAAKgC,cAChChC,EAAK+J,SAASmf,gBAAgBlpB,EAAKwC,oBA7BnBxC,wEAyMV,IAAA4B,EAAA7D,KAER,OACC6J,EAAAtG,EAAAuG,cAAA,OAAKsE,UAAU,OACdvE,EAAAtG,EAAAuG,cAAA,UAAQsE,UAAU,YAEf,WACD,GAAIvK,EAAK+E,MAAMjI,IACd,OAAOkJ,EAAAtG,EAAAuG,cAACshB,GAAD,CAAQL,YAAalnB,EAAK+E,MAAMmiB,YAAa7C,eAAgBrkB,EAAKqkB,eAAgBhG,QAASre,EAAKqe,QAASoG,cAAezkB,EAAKykB,cAAe9D,aAAc3gB,EAAK+E,MAAM4b,aAAc1iB,UAAW+B,EAAK+E,MAAM9G,YAFhN,GAMF+H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,kBAGP2H,EAAAtG,EAAAuG,cAAA,OAAK5H,GAAG,oBACL,WACD,GAAI2B,EAAK+E,MAAMjI,KAAOkD,EAAK+E,MAAM9G,WAAa+B,EAAK+E,MAAMW,MAAQ1F,EAAK+E,MAAMgc,cAAgB/gB,EAAK+E,MAAM4b,aACtG,OAAQ3gB,EAAK+E,MAAMmiB,aAClB,IAAK,QACJ,OAAOlhB,EAAAtG,EAAAuG,cAACuhB,EAAD,CAAUpQ,aAAcpX,EAAKoX,aAAchL,aAAcpM,EAAKoM,aAAciS,QAASre,EAAKqe,QAAS3Y,KAAM1F,EAAK+E,MAAMW,KAAMvH,KAAM6B,EAAK+E,MAAMmhB,YAAaroB,OAAQmC,EAAK+E,MAAMlH,OAAQI,UAAW+B,EAAK+E,MAAM9G,UAAW0iB,aAAc3gB,EAAK+E,MAAM4b,aAAcvQ,YAAapQ,EAAK+E,MAAMgc,eAC3R,IAAK,WACJ,OAAO/a,EAAAtG,EAAAuG,cAACwhB,EAAD,CAAarb,aAAcpM,EAAKoM,aAAcvL,UAAWb,EAAK+E,MAAMlE,UAAWwO,aAAcrP,EAAK+E,MAAMsK,eAChH,IAAK,WACJ,OAAOrJ,EAAAtG,EAAAuG,cAACyhB,EAAD,CAAgB7F,iBAAkB7hB,EAAK6hB,iBAAkBU,kBAAmBviB,EAAKuiB,kBAAmB7c,KAAM1F,EAAK+E,MAAMW,KAAM6b,aAAcvhB,EAAK+E,MAAMwc,eAC5J,QACC,OAAOvb,EAAAtG,EAAAuG,cAAC0hB,EAAD,CAAWnH,gBAAiBxgB,EAAK6lB,qBAAsB5nB,UAAW+B,EAAK+E,MAAM9G,UAAWyH,KAAM1F,EAAK+E,MAAMW,KAAMqb,aAAc/gB,EAAK+E,MAAMgc,aAAcJ,aAAc3gB,EAAK+E,MAAM4b,oBAIxL,OAAQ3gB,EAAK+E,MAAMmiB,aAClB,IAAK,SACJ,OAAOlhB,EAAAtG,EAAAuG,cAAC2hB,EAAD,CAAQC,WAAY7nB,EAAKqkB,iBACjC,IAAK,SACJ,OAAOre,EAAAtG,EAAAuG,cAAC6hB,EAAD,CAAQhhB,WAAY9G,EAAKqkB,iBACjC,QACC,OAAOre,EAAAtG,EAAAuG,cAAC2hB,EAAD,CAAQC,WAAY7nB,EAAKqkB,kBApBlC,cA3NS9d,aCZEwhB,QACW,cAA7BhW,OAAOgV,SAASiB,UAEe,UAA7BjW,OAAOgV,SAASiB,UAEhBjW,OAAOgV,SAASiB,SAASC,MACvB,2DCZNC,IAASvV,OAAO3M,EAAAtG,EAAAuG,cAACkiB,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjlB,KAAK,SAAAklB,GACjCA,EAAaC,mCEnInBrtB,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.1b563efd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corner-logo.5ece3763.png\";","import firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport 'firebase/auth' \r\nimport 'firebase/storage' \r\n\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyBJuUseKfGN_MjNEWg722WY1FsO2xZ1AuE\",\r\n    authDomain: \"grovv-22cbd.firebaseapp.com\",\r\n    databaseURL: \"https://grovv-22cbd.firebaseio.com\",\r\n    projectId: \"grovv-22cbd\",\r\n    storageBucket: \"grovv-22cbd.appspot.com\",\r\n    messagingSenderId: \"30272449560\"\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config);\r\n        }\r\n\r\n        this.db = firebase.database();\r\n        this.auth = firebase.auth();\r\n        this.storage = firebase.storage();\r\n    }\r\n}\r\n\r\nexport default Firebase;\r\n","import Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass DbHelper {\r\n\r\n    constructor() {\r\n\r\n        this.firebase = new Firebase();\r\n\r\n        this.userID = 'wR4QKyZ77mho1fL0FQWSMBQ170S2' // Hardcoded to bradyn's for now\r\n\r\n    }\r\n\r\n    // ............ //\r\n    //    USER      //\r\n    // ............ //\r\n    // Get Reset Value\r\n    getUser(UID, setData) {\r\n\r\n        // Config data isResetting in firebase \r\n        var ref = this.firebase.db.ref().child('users').child(UID)\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            if (snapshot.val() === null) {\r\n                setData(false);\r\n                return;\r\n            }\r\n\r\n            setData(snapshot.val())\r\n\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"get user failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n\r\n    // Set Grow Config in firebase\r\n    setUser(u) {\r\n        var ref = this.firebase.db.ref().child('users').child(u.uid)\r\n        console.log(\"DBU\", u)\r\n        ref.set(u)\r\n    }\r\n\r\n    // .................. //\r\n    // ADD LIFETIME DATA  //\r\n    // .................. //\r\n    getLifetimeData(userID, setData) {\r\n        console.log(\"Get Lifetime Data\")\r\n\r\n        var ref = this.firebase.db.ref().child('lifetime').child(this.userID)\r\n\r\n        ref.on('value', (snapshot) => {\r\n            setData(snapshot.val())\r\n        }, function (errorObject) {\r\n            console.log(\"Get Lifetime Data failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n\r\n    postLifetimeData(lifetimeObject, growID, year, month, day) {\r\n        console.log(\"Post Lifetime Data\", lifetimeObject)\r\n\r\n        var ref = this.firebase.db.ref().child('lifetime').child(this.userID).child(growID).child(year).child(month).child(day)\r\n        ref.set(lifetimeObject)\r\n    }\r\n\r\n    getMonthChunk(growID, year, month, setData) {\r\n        console.log(\"getMonthCHunk!\" + growID + \" \" + year + \" \" + month)\r\n\r\n\r\n        var ref = this.firebase.db.ref().child('grow_data').child(this.userID).child(growID).child('sensor_data').child(year).child(month)\r\n        ref.on('value', (snapshot) => {\r\n            setData(snapshot.val())\r\n        }, function (errorObject) {\r\n            console.log(\"getMonthChunk: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // .......... //\r\n    // LIVE DATA  //\r\n    // .......... //\r\n    // Get live data from firebase\r\n    // TODO: FIx when database is changed\r\n    async getLiveGrowData(userGrows, setData) {\r\n\r\n        userGrows.forEach((grow) => {\r\n            // Grow Live Data in firebase\r\n            var ref = this.firebase.db.ref().child('grow_data').child(this.userID).child(grow.id).child('live_data')\r\n\r\n            ref.on('value', (snapshot) => {\r\n                setData(grow.id, snapshot.val())\r\n            }, function (errorObject) {\r\n                console.log(\"follow \" + grow + \" live failed: \" + errorObject.code);\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // ....... //\r\n    // GRAPHS  //\r\n    // ....... //\r\n\r\n    // Get 3 day data window from firebase\r\n    async getThreeDays(growID, setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('grow_data').child(this.userID).child(growID).child('sensor_data')\r\n\r\n\r\n        var date = new Date();\r\n        var year = date.getFullYear().toString()\r\n        var month = (date.getMonth() + 1).toString()\r\n        if (month.length < 2) {\r\n            month = '0' + month\r\n        }\r\n\r\n        var days = []\r\n        var tempDay = null\r\n        var dy = date.getDate()\r\n        if ((dy - 2) >= 1) {\r\n            tempDay = dy - 2\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if ((dy - 1) >= 1) {\r\n            tempDay = dy - 1\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if (dy.toString().length < 2) {\r\n            dy = '0' + dy\r\n        }\r\n        days[days.length] = dy\r\n\r\n        var i = 0;\r\n\r\n        var staticTwoDayData = []\r\n        var getTwoDaysAddedDays = []\r\n\r\n        days.forEach((day) => {\r\n            if (day.toString() === dy.toString()) {\r\n                return;\r\n            }\r\n\r\n            ref.child(year).child(month).child(day).on(\"value\", (snapshot) => {\r\n                if (!getTwoDaysAddedDays.includes(day)) {\r\n                    getTwoDaysAddedDays[getTwoDaysAddedDays.length] = day\r\n                } else {\r\n                    return;\r\n                }\r\n                snapshot.forEach((child) => {\r\n                    child.forEach((gChild) => {\r\n                        i++;\r\n                        if (i % 10 === 0 || i === 0) {\r\n                            var dataPoint = gChild.val()\r\n                            var dataTime = new Date(dataPoint.time).getTime()\r\n                            dataPoint.time = dataTime\r\n                            staticTwoDayData[staticTwoDayData.length] = dataPoint;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                if ((getTwoDaysAddedDays.length === days.length - 1)) {\r\n\r\n\r\n                    ref.child(year).child(month).child(dy).on(\"value\", (snapshot) => {\r\n\r\n                        var tempCurrentData = [];\r\n\r\n\r\n                        snapshot.forEach((child) => {\r\n                            child.forEach((gChild) => {\r\n                                i++;\r\n                                if (i % 10 === 0 || i === 0) {\r\n                                    var dataPoint = gChild.val()\r\n                                    var dataTime = new Date(dataPoint.time).getTime()\r\n                                    dataPoint.time = dataTime\r\n                                    tempCurrentData[tempCurrentData.length] = dataPoint;\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        tempCurrentData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n                        console.log(\"DBHELPER Test 3-day Datapoints to return... grow:\" + growID)\r\n                        console.log(tempCurrentData.length);\r\n                        console.log(tempCurrentData[0]);\r\n                        console.log(tempCurrentData[tempCurrentData.length - 1]);\r\n\r\n                        var fullData = staticTwoDayData.concat(tempCurrentData);\r\n\r\n                        fullData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n\r\n                        setData(fullData);\r\n\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Get 3 day data window from firebase\r\n    getThreeDayData(growID, setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('grow_data').child(this.userID).child(growID).child('sensor_data')\r\n\r\n\r\n        var date = new Date();\r\n        var year = date.getFullYear().toString()\r\n        var month = (date.getMonth() + 1).toString()\r\n        if (month.length < 2) {\r\n            month = '0' + month\r\n        }\r\n\r\n        var days = []\r\n        var tempDay = null\r\n        var dy = date.getDate()\r\n        if ((dy - 2) >= 1) {\r\n            tempDay = dy - 2\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if ((dy - 1) >= 1) {\r\n            tempDay = dy - 1\r\n            if (tempDay.toString().length < 2) {\r\n                tempDay = '0' + tempDay\r\n            }\r\n            days[days.length] = tempDay\r\n        }\r\n        if (dy.toString().length < 2) {\r\n            dy = '0' + dy\r\n        }\r\n        days[days.length] = dy\r\n\r\n        days.forEach((day) => {\r\n\r\n            ref.child(year).child(month).child(day).on(\"value\", (snapshot) => {\r\n\r\n                // TODO: on child added listener instead, this this var stored outside the \"on()\" event\r\n                var dayData = []\r\n\r\n                snapshot.forEach((child) => {\r\n                    child.forEach((gChild) => {\r\n                        var dataPoint = gChild.val()\r\n\r\n                        dataPoint.time = dataPoint.time * 1000\r\n\r\n                        dayData[dayData.length] = dataPoint;\r\n                    });\r\n                });\r\n\r\n                dayData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n                setData(growID, day, dayData);\r\n            });\r\n        });\r\n    }\r\n\r\n    // ............ //\r\n    // GROW CONFIG  //\r\n    // ............ //\r\n    // Get Reset Value\r\n    getGrowConfig(growID, setData) {\r\n\r\n        // Config data isResetting in firebase \r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            if (snapshot.val() === null) {\r\n                setData(false);\r\n                return;\r\n            }\r\n\r\n            setData(snapshot.val())\r\n\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch isResetting failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n\r\n    // Set Grow Config in firebase\r\n    setGrowConfig(growID, config) {\r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config')\r\n        ref.update(config)\r\n    }\r\n\r\n\r\n    // .................. //\r\n    // GROW CONFIG RESET  //\r\n    // .................. //\r\n\r\n    // Get Reset Value\r\n    getResetValue(growID, setData) {\r\n\r\n        // Config data isResetting in firebase \r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config').child('isResetting')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            if (snapshot.val() === null) {\r\n                setData(false);\r\n                return;\r\n            }\r\n\r\n            setData(snapshot.val())\r\n\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch isResetting failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // Get Reset Value\r\n    resetGrow(growID) {\r\n        // Config data isResetting in firebase \r\n        var ref = this.firebase.db.ref().child('grows').child(this.userID).child(growID).child('config').child('isResetting')\r\n\r\n        ref.set(true)\r\n    }\r\n\r\n\r\n\r\n    // ........... //\r\n    // GROW PAGE   //\r\n    // ........... //\r\n\r\n    // Get live data from firebase\r\n    getUserGrows(setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('users').child(this.userID).child('grows')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var userGrowIDs = [];\r\n\r\n            snapshot.forEach((child) => {\r\n                if (!child.val().sensors_live) {\r\n                    userGrowIDs[userGrowIDs.length] = child.key\r\n                }\r\n            });\r\n\r\n            var setUserGrows = []\r\n\r\n            userGrowIDs.forEach((key) => {\r\n                var growRef = this.firebase.db.ref().child('grows').child(this.userID).child(key)\r\n\r\n                growRef.once('value', (snapshot) => {\r\n\r\n                    if (!setUserGrows.includes(snapshot.val())) {\r\n                        setUserGrows[setUserGrows.length] = snapshot.val()\r\n                    }\r\n\r\n                    setUserGrows.sort((a, b) => (a.createdAt > b.createdAt) ? 1 : -1)\r\n\r\n                    setData(setUserGrows)\r\n\r\n                }, function (errorObject) {\r\n                    console.log(\"watch user grows grow failed: \" + errorObject.code);\r\n                });\r\n            })\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch user grows failed: \" + errorObject.code);\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    // ............ //\r\n    // GROW JRNLS  //\r\n    // ............ //\r\n\r\n    // Get live data from firebase\r\n    getLinkedJournals(journals, setData) {\r\n\r\n        var ref = this.firebase.db.ref().child('users').child(this.userID).child('journals')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var journalsList = [];\r\n\r\n            snapshot.forEach((child) => {\r\n                if (journals) {\r\n                    Object.keys(journals).forEach(function (key) {\r\n                        if (child.val().id === key) {\r\n                            journalsList.push(child.val())\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            journalsList.sort((a, b) => (a.updatedAt < b.updatedAt) ? 1 : -1)\r\n\r\n            setData(journalsList)\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"GrowDetails watch user journals failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // ............ //\r\n    // WATCH JRNLS  //\r\n    // ............ //\r\n\r\n    // Watch Journals\r\n    getUserJournals(setUserJournals) {\r\n        var ref = this.firebase.db.ref().child('users').child(this.userID).child('journals')\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var journalsList = [];\r\n\r\n            snapshot.forEach((child) => {\r\n                journalsList.push(child.val())\r\n            });\r\n\r\n            console.log(\"Journals List: \", journalsList)\r\n\r\n            journalsList.sort((a, b) => (a.updatedAt < b.updatedAt) ? 1 : -1)\r\n\r\n            setUserJournals(journalsList)\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"watch user journals failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // Watch Entries\r\n    watchJournalEntries(journalID, setJournalEntries) {\r\n\r\n        var ref = this.firebase.db.ref().child('journals').child(this.userID).child(journalID).child('entries')\r\n\r\n        console.log('watchin... ' + journalID)\r\n\r\n        ref.on('value', (snapshot) => {\r\n\r\n            var tempEntriesList = []\r\n            snapshot.forEach((child) => {\r\n                tempEntriesList.push(child.val())\r\n            });\r\n\r\n            tempEntriesList.sort((a, b) => (a.datetime_true > b.datetime_true) ? 1 : -1)\r\n\r\n            var tempDotsList = [];\r\n            tempEntriesList.forEach((entry) => {\r\n                if (!tempDotsList.includes(entry.datetime_short)) {\r\n                    tempDotsList[tempDotsList.length] = entry.datetime_short;\r\n                }\r\n            });\r\n\r\n            var tempDeepDotsList = [];\r\n            tempDotsList.forEach((dotDate) => {\r\n                var dotValue = []\r\n                tempEntriesList.forEach((entry) => {\r\n                    if (dotDate === entry.datetime_short) {\r\n                        dotValue[dotValue.length] = entry;\r\n                    }\r\n                });\r\n\r\n                tempDeepDotsList[tempDeepDotsList.length] = dotValue;\r\n            });\r\n\r\n            setJournalEntries(tempEntriesList, tempDeepDotsList)\r\n\r\n        }, function (errorObject) {\r\n            console.log(\"follow journal failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    // ............ //\r\n    // JRNL CREATE  //\r\n    // ............ //\r\n\r\n    // Get live data from firebase\r\n    async createJournal(journalName, openJournal) {\r\n        // ref for actual journal\r\n        var ref = this.firebase.db.ref().child('journals').child(this.userID).push()\r\n        // user object ref to journal key\r\n        var userRef = this.firebase.db.ref().child('users').child(this.userID).child('journals').child(ref.key)\r\n\r\n        var journalID = ref.key\r\n        var nowDate = new Date()\r\n\r\n        ref.update({ 'id': journalID, 'name': journalName, 'updatedAt': nowDate.getTime(), 'createdAt': nowDate.getTime(), 'previewImage': 'https://via.placeholder.com/160x120?text=NO+PREVIEW' })\r\n        userRef.update({ 'id': journalID, 'name': journalName, 'updatedAt': nowDate.getTime(), 'createdAt': nowDate.getTime(), 'previewImage': 'https://via.placeholder.com/160x120?text=NO+PREVIEW' })\r\n\r\n        openJournal(journalID)\r\n    }\r\n\r\n\r\n    // ................ //\r\n    // SAVE JRNL ENTRY  //\r\n    // ................ //\r\n\r\n    // Get live data from firebase\r\n    saveJournalEntry(journalID, entryID, trueDate, title, content, growStage, postDate, images, closeModal) {\r\n        // Journal data in firebase // TODO scalable.\r\n        var ref = this.firebase.db.ref().child('journals').child(this.userID).child(journalID).child('entries')\r\n\r\n        var editDate = new Date().getTime()\r\n\r\n        var temptTrueDate = trueDate\r\n        var shortMonth = (temptTrueDate.getMonth() + 1) + \"-\"\r\n        if (shortMonth.length === 2) {\r\n            shortMonth = \"0\" + shortMonth;\r\n        }\r\n        var shortDateVar = shortMonth + temptTrueDate.getDate() + \"-\" + temptTrueDate.getFullYear()\r\n\r\n        if (!entryID) {\r\n            // ref for actual journal\r\n            var refPush = ref.push()\r\n            entryID = refPush.key\r\n        }\r\n\r\n        if (!postDate) {\r\n            postDate = new Date()\r\n        }\r\n\r\n        if (!trueDate) {\r\n            trueDate = new Date()\r\n        }\r\n\r\n\r\n        ref.child(entryID).update({\r\n            'id': entryID,\r\n            'title': title,\r\n            'published': true,\r\n            'content': content,\r\n            'grow_stage': growStage,\r\n            'datetime_post': postDate.getTime(),\r\n            'datetime_edit': editDate,\r\n            'datetime_true': trueDate.getTime(),\r\n            'datetime_short': shortDateVar,\r\n            'journal_id': journalID,\r\n            'images': images\r\n        })\r\n\r\n        console.log('set journal entry ' + entryID)\r\n\r\n        // update updatedAt\r\n        var jRef = this.firebase.db.ref().child('journals').child(this.userID).child(journalID)\r\n        var userRef = this.firebase.db.ref().child('users').child(this.userID).child('journals').child(journalID)\r\n        var nowDate = new Date()\r\n        jRef.child('updatedAt').set(nowDate.getTime())\r\n        userRef.child('updatedAt').set(nowDate.getTime())\r\n\r\n\r\n        closeModal(entryID);\r\n    }\r\n\r\n    // .................. //\r\n    // JRNL ENTRY IMAGES  //\r\n    // .................. //\r\n\r\n    // Upload Image\r\n    async handleImageUpload(file, setImages) {\r\n        // Get storage reference and push file blob \r\n        var storageRef = this.firebase.storage.ref().child('journals').child(this.userID);\r\n\r\n        console.log(\"filename:\" + file.name)\r\n\r\n        var dateNow = new Date()\r\n\r\n        const metadata = { contentType: file.type };\r\n        const storageTask = storageRef.child(dateNow.getTime() + file.name).put(file, metadata);\r\n        storageTask\r\n            .then(snapshot => snapshot.ref.getDownloadURL())\r\n            .then(url => {\r\n                // Create thumb url from url (thumbs automatically created via cloud function on upload)\r\n                var urlSplit = url.split(\"%2F\")\r\n                var thumbURL = urlSplit[0] + \"%2F\" + urlSplit[1] + \"%2Fthumb_\" + urlSplit[2]\r\n\r\n                // URL AND THUMBURL\r\n                setImages(url, thumbURL)\r\n\r\n            })\r\n    }\r\n\r\n    // Delete Image\r\n    handleImageDelete(url) {\r\n        // Create a reference to the file to delete\r\n        var desertRef = this.firebase.storage.refFromURL(url)\r\n\r\n        // Delete the file\r\n        desertRef.delete().then(function () {\r\n            // File deleted successfully\r\n            console.log(\"deleted \" + url + \"successfully :)\")\r\n        }).catch(function (error) {\r\n            // Uh-oh, an error occurred!\r\n            console.log(\"delete \" + url + \"error :(\")\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default DbHelper;","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            SHOWFIELDS: false\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n\r\n        this.firebase.auth.onAuthStateChanged((user) => {\r\n            if (!user) {\r\n                this.showSigninFields();\r\n            }\r\n        });\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    validateEmail(testEmail) {\r\n        var emailRegex = /^\\S+@\\S+$/;\r\n        return emailRegex.test(String(testEmail).toLowerCase());\r\n    }\r\n\r\n    validatePassword(testPswd) {\r\n        var paswdRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;\r\n        return paswdRegex.test(String(testPswd));\r\n    }\r\n\r\n    enterSubmit() {\r\n        console.log(\"SignIn submit enter pressed\");\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        console.log(`SignUp submit enter pressed - username ${username}`);\r\n        if (!this.validateEmail(username)) {\r\n            alert('Bad email me thinks :(')\r\n            return;\r\n        }\r\n        // if (!this.validatePassword(password)) {\r\n        //     alert('Bad password. Must be 7-15 characters with at least 1 numeric digit and a special character.')\r\n        //     return;\r\n        // }\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.hideSigninFields();\r\n\r\n        this.firebase.auth.signInWithEmailAndPassword(username, password).catch(function (error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(`${errorCode}: ${errorMessage}`)\r\n            alert(`${errorCode}: ${errorMessage}`)\r\n            this.setState({ SHOWFIELDS: true });\r\n            return;\r\n            // ...\r\n        });\r\n\r\n        console.log(`username ${username} - logged in`)\r\n        // this.props.signIn();\r\n        return;\r\n\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        console.log(\"SignIn submit pressed\");\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        console.log(`SignUp submit pressed - username ${username}`);\r\n        if (!this.validateEmail(username)) {\r\n            alert('Bad email me thinks :(')\r\n            return;\r\n        }\r\n        // if (!this.validatePassword(password)) {\r\n        //     alert('Bad password. Must be 7-15 characters with at least 1 numeric digit and a special character.')\r\n        //     return;\r\n        // }\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n        this.hideSigninFields();\r\n\r\n        this.firebase.auth.signInWithEmailAndPassword(username, password).catch(function (error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(`${errorCode}: ${errorMessage}`)\r\n            alert(`${errorCode}: ${errorMessage}`)\r\n            this.setState({ SHOWFIELDS: true });\r\n            return;\r\n            // ...\r\n        });\r\n\r\n        console.log(`username ${username} - logged in`)\r\n        // this.props.signIn();\r\n        return;\r\n\r\n    }\r\n\r\n    hideSigninFields = () => {\r\n        this.setState({ SHOWFIELDS: false });\r\n    }\r\n\r\n    showSigninFields = () => {\r\n        this.setState({ SHOWFIELDS: true });\r\n    }\r\n\r\n    // handleGotoSignUp = () => {\r\n    //     this.props.gotoSignUp(\"signup\");\r\n    //     console.log(\"Goto signup pressed\");\r\n    // }\r\n\r\n    render() {\r\n\r\n        if (this.state.SHOWFIELDS) {\r\n            return (\r\n                <div id=\"signin-div\">\r\n                    <h3>Sign In</h3>\r\n                    <div>\r\n                        Email:\r\n                        <input id=\"signin-username\" value={this.state.username} onChange={this.handleUsernameChange} />\r\n                    </div>\r\n                    <div>\r\n                        Password:\r\n                        <input type=\"password\" id=\"signin-password\" value={this.state.password} \r\n                        onChange={this.handlePasswordChange}\r\n                        onKeyPress={(ev) => {\r\n                            console.log(`Pressed keyCode ${ev.key}`);\r\n                            if (ev.key === 'Enter' || ev.key === '13') {\r\n                              // Do code here\r\n                              this.enterSubmit()\r\n                            }\r\n                          }} />\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"submit-signin-btn\" onClick={this.handleSubmit} > Sign in! </button>\r\n                    </div>\r\n                    {/* <div>\r\n                        <button id=\"goto-signup-btn\" onClick={this.handleGotoSignUp} > Sign up! </button>\r\n                    </div> */}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    One Moment...\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default SignIn;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            SHOWFIELDS: false\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n\r\n        this.firebase.auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                this.postUserToFirebase(user.uid, user.email);\r\n            } else {\r\n                this.showSignupFields();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    postUserToFirebase(uid, username) {\r\n        let date = new Date()\r\n        let timestamp = date.getTime()\r\n\r\n        // A user entry.\r\n        var userData = {\r\n            uid: uid,\r\n            username: username,\r\n            createdAt: timestamp,\r\n            updatedAt: timestamp,\r\n        };\r\n\r\n        // Write the new post's data simultaneously in the posts list and the user's post list.\r\n        var updates = {};\r\n        updates['/users/' + uid] = userData;\r\n\r\n        return this.firebase.db.ref().update(updates);\r\n    }\r\n\r\n    validateEmail(testEmail) {\r\n        var emailRegex = /^\\S+@\\S+$/;\r\n        return emailRegex.test(String(testEmail).toLowerCase());\r\n    }\r\n\r\n    validatePassword(testPswd) {\r\n        var paswdRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;\r\n        return paswdRegex.test(String(testPswd));\r\n    }\r\n\r\n    hideSignupFields = () => {\r\n        this.setState({ SHOWFIELDS: false });\r\n    }\r\n\r\n    showSignupFields = () => {\r\n        this.setState({ SHOWFIELDS: true });\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        console.log(`SignUp submit pressed - username ${username}`);\r\n        if (!this.validateEmail(username)) {\r\n            alert('Bad email me thinks :(')\r\n            this.setState({\r\n                username: ''\r\n            });\r\n            return;\r\n        }\r\n        if (!this.validatePassword(password)) {\r\n            alert('Bad password. Must be 7-15 characters with at least 1 numeric digit and a special character.')\r\n            this.setState({\r\n                password: ''\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.firebase.auth.createUserWithEmailAndPassword(username, password).catch(function (error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(`${errorCode}: ${errorMessage}`)\r\n            return;\r\n            // ...\r\n        });\r\n        \r\n        return;\r\n    }\r\n\r\n    handleGotoSignIn = () => {\r\n        this.props.gotoSignIn(\"signin\");\r\n        console.log(\"Goto signin pressed\");\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.SHOWFIELDS) {\r\n            return (\r\n                <div id=\"signup-div\">\r\n                    <h3>Sign Up</h3>\r\n                    <div>\r\n                        Email:\r\n                        <input id=\"signup-username\" value={this.state.username} onChange={this.handleUsernameChange} />\r\n                    </div>\r\n                    <div>\r\n                        Password:\r\n                        <input type=\"password\" id=\"signup-password\" value={this.state.password} onChange={this.handlePasswordChange} />\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"submit-signup-btn\" onClick={this.handleSubmit} > Sign up! </button>\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"goto-signin-btn\" onClick={this.handleGotoSignIn} > Sign in! </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    One Moment...\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Dropzone from 'react-dropzone';\r\n\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\n\r\nclass JournalAddEditModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            content: '',\r\n            images: [],\r\n            addedImages: [],\r\n            journalID: this.props.journalID,\r\n            postDate: new Date(),\r\n            trueDate: new Date(),\r\n            growStage: 'veg', // pre, seedling, veg, flower, post\r\n            published: false,\r\n            entryID: ''\r\n        };\r\n\r\n        this.dbHelper = new DbHelper();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.editPost) {\r\n\r\n            var tempTrueDate = null\r\n            if (this.props.editPost.datetime_true) {\r\n                tempTrueDate = new Date(this.props.editPost.datetime_true)\r\n            } else {\r\n                tempTrueDate = this.state.trueDate\r\n            }\r\n\r\n            var tempPostDate = null\r\n            if (this.props.editPost.datetime_post) {\r\n                tempPostDate = new Date(this.props.editPost.datetime_post)\r\n            } else {\r\n                tempPostDate = this.state.postDate\r\n            }\r\n  \r\n\r\n            var tempContent = this.props.editPost.content\r\n            var tempTitle = this.props.editPost.title\r\n            var tempImages = this.props.editPost.images\r\n            if (tempImages === null || tempImages === undefined) {\r\n                tempImages = []\r\n            }\r\n            var tempGrowStage = null\r\n            if (this.props.editPost.grow_stage) {\r\n                tempGrowStage = this.props.editPost.grow_stage\r\n            } else {\r\n                tempGrowStage = this.state.growStage\r\n            }\r\n\r\n            var tempPostId = this.props.editPost.id\r\n\r\n            this.setState({\r\n                title: tempTitle,\r\n                content: tempContent,\r\n                trueDate: tempTrueDate,\r\n                postDate: tempPostDate,\r\n                growStage: tempGrowStage,\r\n                images: tempImages,\r\n                entryID: tempPostId,\r\n                published: true\r\n            });\r\n        }\r\n    }\r\n\r\n    handleTitleChange = (event) => {\r\n        this.setState({ title: event.target.value });\r\n    }\r\n\r\n    handleContentChange = (event) => {\r\n        this.setState({ content: event.target.value });\r\n    }\r\n\r\n    cancelModal = () => {\r\n\r\n        this.deleteAllAddedImages();\r\n\r\n        this.props.closeModal(this.state.entryID);\r\n    }\r\n\r\n    saveEntry = async () => {\r\n        if (this.state.content === '' && this.state.images.length === 0) {\r\n            alert(\"Needs content or images!\")\r\n            return;\r\n        }\r\n        this.setState({ published: true });\r\n\r\n        var title = null;\r\n        if (this.state.title === '' || !this.state.title) {\r\n            title = ''\r\n        } else {\r\n            title = this.state.title\r\n        }\r\n\r\n        var content = null;\r\n        if (this.state.content === '' || !this.state.content) {\r\n            content = ''\r\n        } else {\r\n            content = this.state.content\r\n        }\r\n\r\n        this.dbHelper.saveJournalEntry(\r\n            this.state.journalID,\r\n            this.state.entryID,\r\n            this.state.trueDate,\r\n            title,\r\n            content,\r\n            this.state.growStage,\r\n            this.state.postDate,\r\n            this.state.images,\r\n            this.closeModal\r\n        )\r\n    }\r\n\r\n    closeModal = (entryID) => {\r\n        this.props.closeModal(entryID);\r\n    }\r\n\r\n    onImageDrop(files) {\r\n\r\n        console.log(files);\r\n\r\n        files.forEach((file) => {\r\n            this.handleImageUpload(file);\r\n            console.log(\"upload \" + file);\r\n        })\r\n\r\n    }\r\n\r\n    displayFullImage = () => {\r\n\r\n        console.log(\"JournalAddEditModal todo\")\r\n    }\r\n\r\n\r\n    handleImageUpload = async (file) => {\r\n        try {\r\n            await this.dbHelper.handleImageUpload(file, this.setImages)\r\n        } catch (e) {\r\n            console.log(e);\r\n            return 'caught ' + e\r\n        }\r\n    }\r\n\r\n    setImages = (url, thumbURL) => {\r\n        var tempImages = this.state.images;\r\n        var tempAddedImages = this.state.addedImages;\r\n        tempImages.push({ 'url': url, 'thumb': thumbURL })\r\n        tempAddedImages.push({ 'url': url, 'thumb': thumbURL })\r\n        this.setState({\r\n            images: tempImages,\r\n            addedImages: tempAddedImages\r\n        });\r\n    }\r\n\r\n    deleteImage = (ev) => {\r\n        let val = ev.target.dataset.value;\r\n        console.log(val);\r\n        console.log(this.state.images);\r\n\r\n        let tempImages = []\r\n\r\n        this.state.images.forEach((img) => {\r\n            if (img.url.toString() === val) {\r\n                this.handleImageDelete(img.url);\r\n                this.handleImageDelete(img.thumb)\r\n            } else {\r\n                tempImages.push(img)\r\n            }\r\n        })\r\n\r\n        this.setState({ images: tempImages });\r\n\r\n    }\r\n\r\n    deleteAllAddedImages = () => {\r\n        let imagesToDelete = this.state.addedImages;\r\n        // this.setState({ images: [] });\r\n\r\n        imagesToDelete.forEach((img) => {\r\n            this.handleImageDelete(img.url);\r\n            this.handleImageDelete(img.thumb);\r\n        })\r\n    }\r\n\r\n    handleImageDelete = (url) => {\r\n        this.dbHelper.handleImageDelete(url);\r\n    }\r\n\r\n    handleDateChange = (dt) => {\r\n        this.setState({ trueDate: dt });\r\n    }\r\n\r\n    handleGrowStageChange = (event) => {\r\n        this.setState({ growStage: event.target.value });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        console.log(\"true DATE!!\")\r\n        console.log(this.state.trueDate)\r\n\r\n        if (this.state.images) {\r\n            var renderedThumbnails = this.state.images.map((image, i) => <div className=\"Temp-Image-Div\"><img key={i} alt=\"grow img\" data-value={image.url} src={image.url} className=\"Journal-Entry-Preview-Thumbnail\" onClick={this.displayFullImage} /><div data-value={image.url} onClick={this.deleteImage} className=\"Delete-Image-Btn\">X</div></div>)\r\n        }\r\n\r\n        return (\r\n            <div id=\"Journal-Modal-Space\">\r\n                <div id=\"Journal-Edit-Entry-Modal\">\r\n                    <div id=\"Journal-Edit-Topline\">\r\n                        {/* DATE PICKER  */}\r\n                        <DatePicker\r\n                            id=\"journal-edit-datepicker\"\r\n                            selected={this.state.trueDate}\r\n                            onChange={this.handleDateChange} />\r\n                        {/* STAGE PICKER  */}\r\n                        <select id=\"journal-edit-grow-stage\" onChange={this.handleGrowStageChange} value={this.state.growStage}>\r\n                            <option value=\"post\">Post</option>\r\n                            <option value=\"flower\">Flower</option>\r\n                            <option value=\"veg\">Veg</option>\r\n                            <option value=\"seedling\">Seedling</option>\r\n                            <option value=\"pre\">Pre</option>\r\n                        </select>\r\n                        {/* TITLE INPUT  */}\r\n                        <input className=\"journal-modal-edit-title\" placeholder=\"enter title...\" value={this.state.title} onChange={this.handleTitleChange} />\r\n                    </div>\r\n                    {/* BODY INPUT  */}\r\n                    <textarea className=\"journal-modal-edit-body\" placeholder=\"enter body content...\" value={this.state.content} onChange={this.handleContentChange} />\r\n                    {/* BODY INPUT  */}\r\n                    <div className=\"journal-add-images-area\">\r\n\r\n                        <Dropzone\r\n                            className=\"journal-add-images-dropzone\"\r\n                            onDrop={this.onImageDrop.bind(this)}\r\n                            accept=\"image/*\"\r\n                            multiple={true}>\r\n                            {({ getRootProps, getInputProps }) => {\r\n                                return (\r\n                                    <div {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n                                        {\r\n                                            <p id=\"Image-Drop-Text\">Try dropping some <br></br> images <span role=\"img\" aria-label=\"camera\">&#x1f4f7;</span> here, <br></br>or click to <br></br> select files.</p>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        </Dropzone>\r\n\r\n                        {(() => {\r\n                            if (renderedThumbnails) {\r\n                                return (\r\n                                    <div className=\"Journal-Edit-Post-Images\">\r\n                                        {renderedThumbnails}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                    </div>\r\n\r\n                    <div id=\"journal-cancel-save-btns\">\r\n                        <button className=\"journal-cancel-btn\" onClick={this.cancelModal}>Cancel</button>\r\n                        <button className=\"journal-save-entry-btn\" onClick={this.saveEntry}>Save Entry</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalAddEditModal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nclass FullImageModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageList: this.props.imageList,\r\n            currentImage: this.props.currentFullImage,\r\n            fullSizeList: []\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.imageList) {\r\n            var tempFullSizeList = []\r\n            this.props.imageList.forEach((image) => {\r\n                tempFullSizeList[tempFullSizeList.length] = image.url\r\n            });\r\n            this.setState({ fullSizeList: tempFullSizeList });\r\n        }\r\n\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.closeModal('');\r\n    }\r\n\r\n    nextImage = () => {\r\n\r\n        this.state.fullSizeList.forEach((imageUrl, i) => {\r\n            if (imageUrl === this.state.currentImage) {\r\n                if (i < this.state.fullSizeList.length - 1) {\r\n                    this.setState({ currentImage: this.state.fullSizeList[i + 1] });\r\n                }\r\n                return;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    previousImage = () => {\r\n\r\n        this.state.fullSizeList.forEach((imageUrl, i) => {\r\n            if (imageUrl === this.state.currentImage) {\r\n                if (i > 0) {\r\n                    this.setState({ currentImage: this.state.fullSizeList[i - 1] });\r\n                }\r\n                return;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"FULLIMAGE MODAL!\")\r\n        console.log(this.state.imageList)\r\n        console.log(this.state.currentImage)\r\n\r\n        return (\r\n            <div id=\"Full-Image-Modal-Space\">\r\n                <img id=\"Full-Image-Image\" alt=\"full size\" src={this.state.currentImage} />\r\n                <button onClick={this.closeModal} id=\"Full-Image-Close-Btn\">x</button>\r\n                <button onClick={this.previousImage} id=\"Full-Image-Last-Btn\">&#8804;</button>\r\n                <button onClick={this.nextImage} id=\"Full-Image-Next-Btn\">&#8805;</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FullImageModal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\n\r\nclass JournalCreateModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            journalName: '',\r\n            journalID: this.props.journalID\r\n        };\r\n\r\n\t\tthis.dbHelper = new DbHelper();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleJournalNameChange = (event) => {\r\n        this.setState({ journalName: event.target.value });\r\n    }\r\n\r\n    cancelModal = () => {\r\n        this.props.setJournalID(null);\r\n    }\r\n\r\n    createJournal = async () => {\r\n        if (this.state.journalName === '') {\r\n            alert(\"Journal needs a name!\")\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await this.dbHelper.createJournal(this.state.journalName, this.openJournal)\r\n        } catch (e) {\r\n            console.log(e);\r\n            return 'caught ' + e\r\n        }\r\n\r\n    }\r\n\r\n    openJournal = (journalID) => {\r\n        this.setState({ journalID: journalID });\r\n        this.props.setJournalID(journalID);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"Journal-Modal-Space\">\r\n                <div id=\"Journal-Create-Modal\">\r\n                    {/* TITLE INPUT  */}\r\n                    <input className=\"journal-modal-journal-name\" placeholder=\"enter journal name...\" value={this.state.journalName} onChange={this.handleJournalNameChange} />\r\n                    <div id=\"journal-create-btns\">\r\n                        <button className=\"journal-cancel-create-btn\" onClick={this.cancelModal}>Cancel</button>\r\n                        <button className=\"journal-create-journal-btn\" onClick={this.createJournal}>Create Journal</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalCreateModal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nclass JournalTimelineButton extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            journalName: '',\r\n            journalID: this.props.journalID,\r\n            monthDayDate: ''\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.entry) {\r\n            var timelineDate = new Date(this.props.entry.datetime_true)\r\n            var shortMonth = (timelineDate.getMonth() + 1) + \"-\"\r\n            if (shortMonth.length === 2) {\r\n                shortMonth = \"0\" + shortMonth;\r\n            }\r\n            var shortDateVar = shortMonth + timelineDate.getDate()\r\n            this.setState({ monthDayDate: shortDateVar });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setEntries = () => {\r\n        this.props.setEntries(this.props.entries);\r\n    }\r\n\r\n    render() {\r\n        var growStage = this.props.entry.grow_stage\r\n        var idVar = \"Timeline-Dot-\" + growStage.charAt(0).toUpperCase() + growStage.slice(1)\r\n\r\n        // Check if the button corresponds to the active entry\r\n        var isActiveEntry = false;\r\n        if (this.props.currentEntryID === this.props.entry.id) {\r\n            isActiveEntry = true;\r\n        }\r\n\r\n        var array = (this.props.entry.datetime_short).split(\"-\");\r\n        var datetimeShortMD = array[0] + \"-\" + array[1]\r\n\r\n        var dateString = new Date(this.props.entry.datetime_true).toDateString()\r\n\r\n        var previewImage = null;\r\n        if (this.props.entries[0].images) {\r\n            previewImage = this.props.entries[0].images[0].thumb;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {(() => {\r\n                    if (isActiveEntry) {\r\n                        return (\r\n                            <div className=\"Timeline-Dot-Connector\">\r\n                                <div className=\"Dot-Connector-Text-rotate-180\">\r\n\r\n                                    {datetimeShortMD}\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()}\r\n                <button data-value={this.props.entries} id={idVar} className=\"Timeline-Dot\" onClick={this.setEntries}>\r\n\r\n                    {(() => {\r\n                        if (!isActiveEntry) {\r\n                            return (\r\n                                <div className=\"Dot-Preview-rotate-180\">\r\n                                    <div className=\"Dot-Preview-Window\">\r\n                                        <div className=\"Dot-Preview-Date-String\">\r\n                                            {dateString}\r\n                                        </div>\r\n\r\n                                        {(() => {\r\n                                            if (previewImage) {\r\n                                                return <img alt=\"journal preview\" src={previewImage} className=\"Preview-Image-Thumbnail\" onClick={this.displayFullImage} />\r\n                                            }\r\n                                        })()}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n\r\n\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalTimelineButton;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\n\r\nclass JournalBoxItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            journal: this.props.journal\r\n        };\r\n\r\n    }\r\n\r\n    openJournal = () => {\r\n        this.props.openJournal(this.props.journal)\r\n    }\r\n\r\n    render() {\r\n\r\n        var createdAt = new Date(this.props.journal.createdAt).toDateString()\r\n\r\n        // TODO... simplify below.\r\n        var updatedAtDate = new Date(this.props.journal.updatedAt)\r\n        var updatedAtHoursString = updatedAtDate.getHours().toString()\r\n        if (updatedAtHoursString.length === 1) {\r\n            updatedAtHoursString = \"0\" + updatedAtHoursString\r\n        }\r\n        var updatedAtMinutesString = updatedAtDate.getMinutes().toString()\r\n        if (updatedAtMinutesString.length === 1) {\r\n            updatedAtMinutesString = \"0\" + updatedAtMinutesString\r\n        }\r\n        var updatedAt = updatedAtDate.toDateString() + \" - \" + updatedAtHoursString + \":\" + updatedAtMinutesString\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"Journal-Box-Item\" data-value={this.props.journal.id} onClick={this.openJournal}>\r\n                <div className=\"Journal-Box-Item-Main\">\r\n                    <div className=\"Journal-Box-Item-Header\">\r\n                        <div>\r\n                            {this.props.journal.name}\r\n                        </div>\r\n                        <div className=\"Journal-Box-Created\">\r\n                            updated: <i><b>{updatedAt}</b></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"Journal-Box-Info\">\r\n                        created: <i><b>{createdAt}</b></i>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <img alt=\"preview\" src={this.props.journal.previewImage} className=\"Journal-Box-Preview-Image\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalBoxItem;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nclass JournalEntry extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.currentEntry) {\r\n            if (this.state.currentEntry.id === prevProps.currentEntry.id) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            currentEntry: prevProps.currentEntry\r\n        });\r\n\r\n    }\r\n\r\n    displayFullImage = (ev) => {\r\n        this.props.displayFullImage(this.props.currentEntry.images)\r\n        this.props.currentFullImage(ev.target.dataset.value)\r\n        // let val = ev.target.dataset.value;\r\n        // window.open(val);\r\n    }\r\n\r\n    editEntryByID = (ev) => {\r\n        this.props.editEntryByID(ev.target.dataset.value);\r\n    }\r\n\r\n    render() {\r\n\r\n        var renderedThumbnails = null;\r\n        if (this.props.currentEntry) {\r\n            if (this.props.currentEntry.images) {\r\n                renderedThumbnails = this.props.currentEntry.images.map((image, i) => <img key={i} alt=\"grow img\" data-value={image.url} src={image.thumb} className=\"Journal-Entry-Thumbnail\" onClick={this.displayFullImage} />)\r\n            }\r\n        }\r\n\r\n        var datetimeTrue = null;\r\n        if (this.props.currentEntry && (this.props.currentEntry !== '')) {\r\n            datetimeTrue = new Date(this.props.currentEntry.datetime_true)\r\n        }\r\n\r\n        return (\r\n            <div className=\"Journal-Post-View\">\r\n\r\n                <div className=\"Journal-Post-Header\">\r\n                    <div className=\"Journal-Post-Date\">\r\n                        {datetimeTrue.toDateString()}\r\n                    </div>\r\n\r\n                    <div className=\"Journal-Post-Title\">\r\n                        {this.props.currentEntry.title}\r\n                    </div>\r\n\r\n                    <button className=\"Journal-Edit-Post-Btn\" data-value={this.props.currentEntry.id} onClick={this.editEntryByID}>\r\n                        edit &#9998;\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"Journal-Post-Content\">\r\n                    {this.props.currentEntry.content}\r\n                </div>\r\n\r\n\r\n                {(() => {\r\n                    if (renderedThumbnails) {\r\n                        return (\r\n                            <div className=\"Journal-Post-Images-Wrapper\">\r\n                                <div className=\"Journal-Post-Images\">\r\n                                    {renderedThumbnails}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalEntry;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport JournalAddEditModal from './JournalAddEditModal'\r\nimport FullImageModal from './FullImageModal'\r\nimport JournalCreateModal from './JournalCreateModal'\r\nimport JournalTimelineButton from './JournalTimelineButton'\r\nimport JournalBoxItem from './JournalBoxItem'\r\nimport JournalEntry from './JournalEntry'\r\n\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\n\r\nclass GrowJournal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayContent: \"main\",\r\n            displayEntries: [], // list of entries at selected date\r\n            currentEntry: null,\r\n            currentEntryID: null,\r\n            testContent: '',\r\n            timelineEntries: [],\r\n            journalID: this.props.journalID,\r\n            fullImageModalImages: null,\r\n            currentFullImage: null\r\n        };\r\n\r\n        this.dbHelper = new DbHelper();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n\r\n        if (this.props.journalID) {\r\n            this.watchEntries(this.props.journalID)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    watchEntries = (journalID = this.props.journalID) => {\r\n        this.dbHelper.watchJournalEntries(journalID, this.setJournalEntries)\r\n    }\r\n\r\n    setJournalEntries = (entriesList, dotsList) => {\r\n        if (entriesList.length > 0) {\r\n            this.setState({\r\n                currentEntry: entriesList[entriesList.length - 1],\r\n                currentEntryID: entriesList[entriesList.length - 1].id,\r\n                timelineEntries: entriesList,\r\n                timelineDots: dotsList,\r\n                displayEntries: dotsList[dotsList.length - 1]\r\n            });\r\n        } else {\r\n            this.setState({\r\n                currentEntry: null,\r\n                currentEntryID: null,\r\n                timelineEntries: [],\r\n                timelineDots: [],\r\n                displayEntries: []\r\n            });\r\n        }\r\n\r\n        this.setEntries(dotsList[dotsList.length - 1]);\r\n    }\r\n\r\n    addTimelineEntry = () => {\r\n        this.setState({ displayContent: \"add\" });\r\n    }\r\n\r\n    editEntryByID = (entryID) => {\r\n        console.log(\"edit: \" + entryID)\r\n        console.log(entryID)\r\n\r\n        this.state.timelineEntries.forEach((timelineEntry) => {\r\n            if (timelineEntry.id === entryID) {\r\n                this.setState({\r\n                    currentEntry: timelineEntry,\r\n                    currentEntryID: timelineEntry.id,\r\n                    displayContent: \"edit\"\r\n                });\r\n                return;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    openFullImageModal = (images) => {\r\n\r\n        this.setState({\r\n            displayContent: \"full-image\",\r\n            fullImageModalImages: images\r\n        });\r\n    }\r\n\r\n    openFullImage = (imageUrl) => {\r\n\r\n        console.log(\"imageURL\")\r\n        console.log(imageUrl)\r\n\r\n        this.setState({\r\n            currentFullImage: imageUrl\r\n        });\r\n    }\r\n\r\n\r\n    closeModal = (key) => {\r\n\r\n        if (!key || key === '') {\r\n            this.setState({ displayContent: \"main\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ displayContent: \"main\" });\r\n        this.state.timelineEntries.forEach((timelineEntry) => {\r\n            if (timelineEntry.id === key) {\r\n                this.setState({\r\n                    currentEntry: timelineEntry,\r\n                    currentEntryID: timelineEntry.id\r\n                });\r\n                return;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    setJournalID = (id) => {\r\n        if (id === null) {\r\n            this.setState({\r\n                displayContent: \"main\",\r\n            });\r\n            this.props.setJournalID(null)\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            displayContent: \"main\",\r\n            journalID: id\r\n        });\r\n        this.props.setJournalID(id)\r\n        this.watchEntries(id)\r\n    }\r\n\r\n    setEntries = (entries) => {\r\n        if (!entries) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            currentEntry: entries[0],\r\n            currentEntryID: entries[0].id,\r\n            displayEntries: entries\r\n        });\r\n\r\n    }\r\n\r\n    handleJournalChange = (ev) => {\r\n        console.log(\"JOURNAL CHANGE!!!!\")\r\n        console.log(ev.target.value)\r\n        this.setState({\r\n            currentEntry: null,\r\n            currentEntryID: null,\r\n            displayEntries: []\r\n        });\r\n        this.props.setJournalID(ev.target.value)\r\n        this.watchEntries(ev.target.value)\r\n    }\r\n\r\n    openCreateJournalModal = () => {\r\n        this.setState({ displayContent: \"create-journal\" });\r\n    }\r\n\r\n    openJournal = (journal) => {\r\n        this.setState({\r\n            journalID: journal.id\r\n        });\r\n        this.props.setJournalID(journal.id);\r\n        this.watchEntries(journal.id);\r\n    }\r\n\r\n    render() {\r\n\r\n        var renderedJournalOptions = '';\r\n        if (this.props.userJournals.length > 0) {\r\n            renderedJournalOptions = this.props.userJournals.map((journal) => <option key={journal.id} value={journal.id}>{journal.name}</option>)\r\n        }\r\n\r\n        var renderedUserJournals = null;\r\n        if (this.props.userJournals) {\r\n            renderedUserJournals = this.props.userJournals.map((journal) =>\r\n                <div key={journal.id} className=\"Journal-Box-Item-Container\">\r\n                    <JournalBoxItem journal={journal} openJournal={this.openJournal} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        var renderedJournalEntries = null;\r\n        if (this.state.displayEntries) {\r\n            renderedJournalEntries = this.state.displayEntries.map((entry) =>\r\n                <JournalEntry key={entry.id} editEntryByID={this.editEntryByID} currentEntry={entry} currentFullImage={this.openFullImage} displayFullImage={this.openFullImageModal} />\r\n            )\r\n        }\r\n\r\n        var renderedTimelineDots = null;\r\n        if (this.state.timelineDots) {\r\n            renderedTimelineDots = this.state.timelineDots.map((dot) =>\r\n                <JournalTimelineButton key={dot[0].datetime_short} currentEntryID={this.state.currentEntryID} setEntries={this.setEntries} entry={dot[0]} entries={dot} />\r\n            )\r\n        }\r\n\r\n        return (\r\n\r\n\r\n            <div id=\"Journal-Page\">\r\n                <div id=\"Journal-Main\">\r\n                    <div id=\"Grow-Journal-Main-Area\">\r\n\r\n                        {(() => {\r\n                            if (renderedUserJournals && !this.props.journalID) {\r\n                                return (\r\n                                    <div id=\"Journal-Box-Area-Scroll\">\r\n\r\n\r\n                                        <div id=\"Grow-Journal-Header-Area\">\r\n                                            <div id=\"Grow-Journal-Header-Text\">Grow Journals</div>\r\n                                            <button className=\"New-Journal-Btn\" onClick={this.openCreateJournalModal}>\r\n                                                +\r\n                                            </button>\r\n                                        </div>\r\n\r\n\r\n                                        <div id=\"Journal-Box-Area\">\r\n                                            {renderedUserJournals}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            } else if (!this.props.journalID) {\r\n                                return (\r\n                                    <div id=\"Grow-Journal-Header-Area\">\r\n                                        <div id=\"Grow-Journal-Header-Text\">Grow Journals</div>\r\n                                        <button className=\"New-Journal-Btn\" onClick={this.openCreateJournalModal}>\r\n                                            +\r\n                                        </button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n\r\n                        {(() => {\r\n                            if (renderedJournalOptions && this.props.journalID) {\r\n                                return (\r\n                                    <div className=\"Grow-Journal-Title-Div\">\r\n                                        <select id=\"Grow-Journal-Title-Select\" onChange={this.handleJournalChange} value={this.props.journalID}>\r\n                                            {renderedJournalOptions}\r\n                                        </select>\r\n                                        <button className=\"New-Journal-Btn\" onClick={this.openCreateJournalModal}>\r\n                                            +\r\n                                        </button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                        {(() => {\r\n                            if (this.props.journalID) {\r\n                                return (\r\n                                    <div id=\"Journal-Posts-Container\">\r\n                                        {(() => {\r\n                                            if (renderedJournalEntries) {\r\n                                                return (\r\n                                                    <div>\r\n                                                        {renderedJournalEntries}\r\n                                                    </div>\r\n                                                )\r\n                                            } else {\r\n                                                return (\r\n                                                    <div className=\"Journal-Post-View\" >\r\n                                                        Let's get some journal entries...\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        })()}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    {(() => {\r\n                        if (this.props.journalID) {\r\n                            return (\r\n                                <div id=\"Timeline-Container\">\r\n\r\n                                    <div id=\"Timeline-Inner-Container\">\r\n                                        <div id=\"Timeline-Line\" />\r\n                                        \r\n                                        <div id=\"Timeline-Spots\">\r\n\r\n                                            {renderedTimelineDots}\r\n\r\n                                            <button id=\"Timeline-Add-Dot\" onClick={this.addTimelineEntry}>+</button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            )\r\n\r\n                        }\r\n                    })()}\r\n\r\n                </div>\r\n\r\n\r\n                {/* MODAL */}\r\n\r\n                {(() => {\r\n\r\n                    switch (this.state.displayContent) {\r\n                        case 'add':\r\n                            return <JournalAddEditModal journalID={this.props.journalID} closeModal={this.closeModal} editPost=\"new\" />;\r\n                        case 'edit':\r\n                            return <JournalAddEditModal journalID={this.props.journalID} closeModal={this.closeModal} editPost={this.state.currentEntry} />;\r\n                        case 'full-image':\r\n                            return <FullImageModal closeModal={this.closeModal} imageList={this.state.fullImageModalImages} currentFullImage={this.state.currentFullImage} />;\r\n                        case 'create-journal':\r\n                            return <JournalCreateModal journalID={this.props.journalID} setJournalID={this.setJournalID} />;\r\n                        case 'main':\r\n                            return <div />;\r\n                        default:\r\n                            return <div />;\r\n                    }\r\n\r\n                })()}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowJournal;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\r\n\r\nimport moment from 'moment'\r\n\r\n\r\n\r\n\r\nclass GraphSensors extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayWindow: 43200000, // 1800000, 10800000, 43200000, 86400000, 259200000\r\n\r\n            lightsOnArray: [],\r\n            lightsOffArray: [],\r\n            tickArray: [],\r\n            lightBackgrounds: ['#7344e740', '#fff93640']\r\n        };\r\n\r\n        this.displayTemp = true\r\n        this.displayFan = true\r\n        this.displayHumidity = true\r\n        this.displayHumidifier = true\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n        if (this.props.grow && this.growConfig !== this.props.grow.config) {\r\n            this.growConfig = this.props.grow.config\r\n            this.generateTickSourceArrays()\r\n        }\r\n\r\n        if (this.props.rawGrowData && this.props.grow) {\r\n\r\n            var gwID = this.props.grow.id\r\n            var rawData = this.props.rawGrowData\r\n\r\n            if (rawData[gwID] && ((!this.rawRef) || rawData[gwID][rawData[gwID].length - 1] !== this.rawRef)) {\r\n                this.rawRef = rawData[gwID][rawData[gwID].length - 1]\r\n\r\n                var concatData = []\r\n\r\n                rawData[gwID].forEach((list) => {\r\n                    concatData = concatData.concat(list)\r\n                })\r\n\r\n                if (this.dataLength !== concatData.length) {\r\n                    this.dataLength = concatData.length\r\n                    concatData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n                    // process data\r\n                    this.concatData = concatData\r\n                    this.processData()\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    generateTickSourceArrays = () => {\r\n        if (!this.props.grow.config.LIGHTS) {\r\n            return;\r\n        }\r\n\r\n        var m = moment(new Date())\r\n        m.subtract(3, 'days')\r\n\r\n        var lightsOnArray = []\r\n        var lightsOffArray = []\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.off)).format('x')\r\n\r\n        m.add(1, 'days')\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.off)).format('x')\r\n\r\n        m.add(1, 'days')\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.off)).format('x')\r\n\r\n        m.add(1, 'days')\r\n\r\n        lightsOnArray[lightsOnArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.on)).format('x')\r\n        lightsOffArray[lightsOffArray.length] = moment(new Date(m.format('L') + ' ' + this.props.grow.config.LIGHTS.off)).format('x')\r\n\r\n        this.setState({\r\n            lightsOnArray: lightsOnArray,\r\n            lightsOffArray: lightsOffArray\r\n        })\r\n\r\n        this.lightsOnArray = lightsOnArray\r\n        this.lightsOffArray = lightsOffArray\r\n\r\n        this.createTickArray()\r\n\r\n    }\r\n\r\n    createTickArray = (processedData = this.state.processedData) => {\r\n        if (!processedData || !processedData[0]) {\r\n            return\r\n        }\r\n\r\n        var tickRange = [new Date(processedData[0].time).getTime(), new Date(processedData[processedData.length - 1].time).getTime()]\r\n\r\n        var ticks = []\r\n\r\n        var tempOnArray = this.lightsOnArray\r\n        var tempOffArray = this.lightsOffArray\r\n\r\n        if (!tempOffArray && !tempOnArray) {\r\n            return\r\n        }\r\n\r\n        var sourceArray = tempOnArray.concat(tempOffArray)\r\n\r\n        sourceArray.sort((a, b) => (a > b) ? 1 : -1)\r\n\r\n        sourceArray.forEach((tick) => {\r\n            if (tick > tickRange[0] && tick < tickRange[1]) {\r\n                ticks[ticks.length] = tick\r\n            }\r\n        })\r\n\r\n        //set backgrounds\r\n        if (tempOnArray.includes(ticks[0])) {\r\n            this.setState({ lightBackgrounds: ['#7344e740', '#fff93640'] })\r\n        } else {\r\n            this.setState({ lightBackgrounds: ['#fff93640', '#7344e740'] })\r\n\r\n        }\r\n\r\n        this.setState({ tickArray: ticks })\r\n\r\n    }\r\n\r\n    processData = (window = this.state.displayWindow) => {\r\n        var data = null\r\n        if (!this.concatData) {\r\n            return;\r\n        } else {\r\n            data = this.concatData\r\n        }\r\n\r\n        var processedData = []\r\n        var i = -1\r\n        var now = new Date().getTime()\r\n\r\n        var reducerValue = Math.round(window / 10800000)\r\n        if (reducerValue < 1) {\r\n            reducerValue = 1\r\n        }\r\n\r\n\r\n        data.forEach((dataPoint) => {\r\n            if (now - dataPoint.time < window) {\r\n                i++;\r\n                if (i === 0 || i % reducerValue === 0) {\r\n                    var processedPoint = dataPoint\r\n                    processedData[processedData.length] = processedPoint\r\n                }\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            processedData: processedData\r\n        });\r\n\r\n        this.createTickArray(processedData)\r\n\r\n    }\r\n\r\n    toggleWindow = (e) => {\r\n        var setVAl = parseInt(e.target.value)\r\n\r\n        this.setState({ displayWindow: setVAl })\r\n        this.processData(setVAl)\r\n        this.render()\r\n    }\r\n\r\n    renderTooltip = (props) => {\r\n        var rawContent = props.payload\r\n        if (rawContent === null || rawContent.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var readableTime = moment(props.payload[0].payload.time).format('ddd - HH:mm')\r\n\r\n        const listItems = rawContent.map((l) =>\r\n            (() => {\r\n                if (this.props.activeLines) {\r\n                    var tIndex = this.props.activeLines.indexOf(l.dataKey)\r\n                    var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                    if (!curSensor) {\r\n                        return\r\n                    }\r\n\r\n\r\n                    return (\r\n                        <div className=\"Grow-Details-Graph-Tooltip-Data\" key={curSensor.PID} style={{ color: l.stroke, paddingLeft: '2px', paddingRight: '2px' }}>\r\n                            <div style={{ color: l.stroke, display: \"flex\", flexDirection: \"row\", justifyContent: 'space-between' }}>\r\n                                <div>{l.name}: </div>\r\n                                <div style={{ fontWeight: 600 }} >{rawContent[0].payload[l.dataKey]} {curSensor.unit}</div>\r\n                            </div>\r\n                            <div style={{ width: \"100%\", height: '1px', background: \"#2d2d2e\" }} />\r\n                        </div>\r\n                    )\r\n                }\r\n            })()\r\n        );\r\n\r\n\r\n        return (\r\n            <div className=\"Grow-Details-Graph-Tooltip\">\r\n                <div>{readableTime}</div>\r\n\r\n                {listItems}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const lineItems = this.props.grow.config.SENSORS.map((l) =>\r\n            (() => {\r\n                if (this.props.activeLines && this.props.activeLines.includes(l.PID)) {\r\n                    if (l.type === \"airTemp\" || l.type === \"waterTemp\" || l.type === \"co2\") {\r\n                        return <Line yAxisId=\"left\" type=\"monotone\" name={l.name} dataKey={l.PID} key={l.PID} stroke={l.color} strokeWidth={l.thickness} dot={false} />\r\n                    } else {\r\n                        return <Line yAxisId=\"right\" type=\"monotone\" name={l.name} dataKey={l.PID} key={l.PID} stroke={l.color} strokeWidth={l.thickness} dot={false} />\r\n                    }\r\n                    // temp solition for the multi graph page\r\n                } else if (!this.props.activeLines) {\r\n                    if (l.type === \"airTemp\" || l.type === \"waterTemp\" || l.type === \"co2\") {\r\n                        return <Line yAxisId=\"left\" type=\"monotone\" name={l.name} dataKey={l.PID} key={l.PID} stroke={l.color} strokeWidth={l.thickness} dot={false} />\r\n                    } else {\r\n                        return <Line yAxisId=\"right\" type=\"monotone\" name={l.name} dataKey={l.PID} key={l.PID} stroke={l.color} strokeWidth={l.thickness} dot={false} />\r\n                    }\r\n                }\r\n            })()\r\n        );\r\n\r\n\r\n        var renderDayGraph = null\r\n        if (this.state.processedData && this.state.processedData[0]) {\r\n            if (this.props.parentSize) {\r\n                var xSize = Math.floor(this.props.parentSize[0] * 0.91)\r\n                var ySize = Math.floor(this.props.parentSize[1] * 0.9)\r\n\r\n                renderDayGraph = (\r\n                    <LineChart width={xSize} height={ySize} data={this.state.processedData}>\r\n\r\n                        {lineItems}\r\n\r\n                        <CartesianGrid vertical horizontal={false} verticalFill={[this.state.lightBackgrounds[0], this.state.lightBackgrounds[1]]} stroke=\"none\" fillOpacity={0.2} />\r\n\r\n                        <XAxis\r\n                            tick={{ fill: \"#B3C2B5\" }}\r\n                            dataKey=\"time\"\r\n                            type=\"number\"\r\n                            domain={[new Date().getTime(), new Date(new Date() - this.state.displayWindow).getTime()]} //fix!\r\n                            ticks={this.state.tickArray}\r\n                            tickFormatter={(tick) => moment(tick * 1).format('ddd - HH:mm')}\r\n                        />\r\n                        <YAxis yAxisId=\"left\" orientation=\"left\" domain={[24]} tick={{ fill: \"#B3C2B5\" }} />\r\n                        <YAxis yAxisId=\"right\" hide={true} orientation=\"right\" tick={{ fill: \"#B3C2B5\" }} />\r\n                        <Tooltip content={this.renderTooltip} />\r\n                    </LineChart>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"Chart-Container\">\r\n\r\n                {renderDayGraph}\r\n\r\n                {/* Time Scale Select... */}\r\n                <div style={{ width: '40px', fontSize: '0.55em', display: 'flex', flexDirection: 'column', position: 'absolute', marginLeft: '2.5%', marginTop: '4%' }}>\r\n\r\n                    <select onChange={this.toggleWindow} id=\"GraphSensors-Time-Scale\" defaultValue={43200000} style={{ fontSize: '0.8em', maxWidth: \"74px\", height: '20px' }} >\r\n                        <option value={1800000}>&#189;h</option>\r\n                        <option value={10800000}>3h</option>\r\n                        <option value={43200000}>12h</option>\r\n                        <option value={86400000}>24h</option>\r\n                        <option value={259200000}>72h</option>\r\n                    </select>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GraphSensors;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport GraphSensors from '../Graphs/GraphSensors.js'\r\n\r\n\r\nclass GrowDetailsGraphs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            elementSize: [],\r\n        };\r\n\r\n        this.graphSizeUpdated = 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this._ismounted === false) {\r\n            return;\r\n        }\r\n\r\n        var dateNow = new Date()\r\n        if (((this.state.elementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]) && ((dateNow.getTime() - this.graphSizeUpdated) > 500))) {\r\n            var tempSize = [this.divRef.clientWidth + (this.divRef.clientWidth / 100) * 10, this.divRef.clientHeight]\r\n\r\n            if (tempSize !== this.state.elementSize) {\r\n                this.setState({ elementSize: tempSize });\r\n                this.graphSizeUpdated = dateNow.getTime();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"Grow-Details-Graphs-Page\" ref={element => this.divRef = element}>\r\n                <GraphSensors activeLines={this.props.activeLines} parentSize={this.state.elementSize} rawGrowData={this.props.rawGrowData} grow={this.props.grow} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowDetailsGraphs;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport TimePicker from 'react-time-picker'\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\nimport { WiThermometer, WiHumidity, WiHurricane, WiCloudUp, WiThermometerExterior } from 'react-icons/wi';\r\nimport co2svg from '../../../assets/co2svg.svg'\r\nimport tvocSvg from '../../../assets/tvoc-svg.svg'\r\n\r\n\r\n\r\nclass GrowSettings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            config: null\r\n        };\r\n\r\n        this.dbHelper = new DbHelper()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n        this.watchConfig = this.getConfig(this.setFetchedConfig);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    getConfig = async (setData) => {\r\n        try {\r\n            await this.dbHelper.getGrowConfig(this.props.grow.id, setData)\r\n        } catch (e) {\r\n            console.log(e);\r\n            return 'caught ' + e\r\n        }\r\n    }\r\n\r\n    setFetchedConfig = (configObj) => {\r\n        this.setState({\r\n            config: configObj\r\n        });\r\n    }\r\n\r\n\r\n    // UI METHODS\r\n    postConfig = () => {\r\n        // Post config\r\n        this.dbHelper.setGrowConfig(this.props.grow.id, this.state.config)\r\n        // Refresh page data\r\n        this.props.refreshGrows(this.state.config)\r\n        // Close settings menu\r\n        this.props.close()\r\n    }\r\n\r\n    sensorMeanChange = (e) => {\r\n        console.log(\"Change \" + e.target.id + \": \" + e.target.value)\r\n\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor._mean = parseFloat(e.target.value)\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    sensorDeviationChange = (e) => {\r\n        console.log(\"Change \" + e.target.id + \": \" + e.target.value)\r\n\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor._deviation = parseFloat(e.target.value)\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    sensorWeightChange = (e) => {\r\n        console.log(\"Change \" + e.target.id + \": \" + e.target.value)\r\n\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor.thickness = e.target.value\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    sensorColorChange = (e) => {\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor.color = e.target.value\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    sensorTypeChange = (e) => {\r\n        console.log(\"Change \" + e.target.id + \": \" + e.target.value)\r\n\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor.type = e.target.value\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    sensorNameChange = (e) => {\r\n        console.log(\"Change \" + e.target.id + \": \" + e.target.value)\r\n\r\n        var tempConfig = this.state.config\r\n        tempConfig.SENSORS.forEach((sensor) => {\r\n            if (sensor.PID === e.target.id) {\r\n                sensor.name = e.target.value\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    handleLightsOnChange = (value) => {\r\n        var tempConfig = this.state.config\r\n        tempConfig.LIGHTS.on = value\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    handleLightsOffChange = (value) => {\r\n        var tempConfig = this.state.config\r\n        tempConfig.LIGHTS.off = value\r\n\r\n        this.setState({\r\n            config: tempConfig\r\n        });\r\n    }\r\n\r\n    close = () => {\r\n        this.props.close();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const sensorSettingRows = this.props.grow.config.SENSORS.map((sensor) =>\r\n\r\n            <div key={sensor.PID} className=\"Config-Settings-Field\" style={{ backgroundColor: '#3d7a80' }}>\r\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n\r\n                    <div style={{ userSelect: 'none', fontsize: '0.6em', color: \"#FFF\", background: '#131B14', maxHeight: '30px', height: '30px' }} >\r\n\r\n                        {(() => {\r\n                            if (sensor.type === \"airTemp\") {\r\n                                return (<WiThermometer style={{ fontSize: '1.3em', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"waterTemp\") {\r\n                                return (<WiThermometerExterior style={{ fontSize: '1.3em', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"humidity\") {\r\n                                return (<WiHumidity style={{ fontSize: '1.3em', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"fan\") {\r\n                                return (<WiHurricane style={{ fontSize: '1.3em', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"humidifier\") {\r\n                                return (<WiCloudUp style={{ fontSize: '1.3em', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"co2\") {\r\n                                return (<img src={co2svg} alt=\"CO2 Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '80%', color: sensor.color }} />)\r\n                            } else if (sensor.type === \"tvoc\") {\r\n                                return (<img src={tvocSvg} alt=\"CO2 Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '80%', color: sensor.color }} />)\r\n                            } else {\r\n                                return (<div />)\r\n                            }\r\n                        })()}\r\n                        {sensor.PID}\r\n\r\n                    </div>\r\n\r\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly' }}>\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                Name\r\n                            </div>\r\n                            <div style={{ fontWeight: '400' }}>\r\n                                <input onChange={this.sensorNameChange} id={sensor.PID} name=\"name\" type=\"name\" defaultValue={sensor.name} maxLength=\"16\" style={{ fontSize: '0.8em', maxWidth: \"70px\" }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                Type\r\n                            </div>\r\n                            <div>\r\n                                <select onChange={this.sensorTypeChange} id={sensor.PID} defaultValue={sensor.type} style={{ fontSize: '0.8em', maxWidth: \"74px\", height: '20px' }} >\r\n                                    <option value=\"airTemp\">airTemp</option>\r\n                                    <option value=\"waterTemp\">waterTemp</option>\r\n                                    <option value=\"humidity\">humidity</option>\r\n                                    <option value=\"co2\">CO&#8322;</option>\r\n                                    <option value=\"fan\">fan</option>\r\n                                    <option value=\"humidifier\">humidifier</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                Weight\r\n                            </div>\r\n                            <div>\r\n                                <select onChange={this.sensorWeightChange} id={sensor.PID} defaultValue={sensor.thickness} style={{ fontSize: '0.7em', maxWidth: \"44px\", height: '20px' }} >\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"1.5\">1.5</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"0.75\">0.75</option>\r\n                                    <option value=\"0.5\">0.5</option>\r\n                                    <option value=\"0.25\">0.25</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                Mean\r\n                            </div>\r\n                            <div style={{ fontSize: '1em', fontWeight: '400' }}>\r\n                                <input type='number' onChange={this.sensorMeanChange} id={sensor.PID} name=\"_mean\" defaultValue={sensor._mean} style={{ fontSize: '0.8em', maxWidth: \"36px\" }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                SDev\r\n                            </div>\r\n                            <div style={{ fontSize: '1em', fontWeight: '400' }}>\r\n                                <input type='number' onChange={this.sensorDeviationChange} id={sensor.PID} name=\"_deviation\" defaultValue={sensor._deviation} style={{ fontSize: '0.8em', maxWidth: \"36px\" }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ fontSize: '0.7em', userSelect: 'none' }}>\r\n                                Color\r\n                            </div>\r\n                            <div style={{ fontSize: '1em', fontWeight: '400' }}>\r\n                                <input onChange={this.sensorColorChange} id={sensor.PID} name=\"color\" type=\"color\" defaultValue={sensor.color} maxLength=\"10\" style={{ fontSize: '0.8em', padding: 0, marginTop: '1px', maxWidth: \"18px\", maxHeight: '18px' }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div style={{ height: '100%', maxHeight: '100%', width: '100%', maxWidth: '100%', backgroundColor: '#000000BF', position: 'fixed', justifyItems: 'center', justifyContent: 'center', alignContent: 'center', zIndex: 3 }}>\r\n                <div style={{ margin: 'auto', width: '90%', height: '90%', border: '3px solid #262626', padding: '10px', background: '#303630', color: '#d3dbd5' }}>\r\n\r\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                        <div style={{ fontSize: '1.2em', userSelect: 'none' }}></div>\r\n                        <div style={{ fontSize: '1em', fontWeight: '100', userSelect: 'none' }}>Settings</div>\r\n                        <div onClick={this.close} style={{ fontSize: '1.2em', color: '#FF0000', userSelect: 'none', cursor: 'pointer' }}>X</div>\r\n                    </div>\r\n                    {(() => {\r\n                        if (this.state.config) {\r\n                            return (\r\n                                <div id=\"Grow-Details-Config-Settings-Div\" style={{ margin: '4px', height: \"95%\" }}>\r\n                                    <div id=\"Grow-Details-Config-Scroll\" style={{ overflowY: 'scroll' }}>\r\n\r\n                                        {/* LIGHTS */}\r\n                                        {(() => {\r\n                                            if (this.state.config.LIGHTS) {\r\n                                                return (\r\n                                                    <div>\r\n                                                        <div className=\"Config-Item-Header-Text\">LIGHTS</div>\r\n\r\n                                                        <div className=\"Config-Settings-Field\" style={{ backgroundColor: '#e8e81e' }}>\r\n                                                            <div className=\"Settings-Data-Line\">\r\n                                                                <div>on <TimePicker\r\n                                                                    clearIcon={null}\r\n                                                                    id=\"lights_on\"\r\n                                                                    value={this.state.config.LIGHTS.on}\r\n                                                                    onChange={this.handleLightsOnChange.bind(this)} />\r\n                                                                </div>\r\n                                                                <div>off <TimePicker\r\n                                                                    clearIcon={null}\r\n                                                                    id=\"lights_off\"\r\n                                                                    value={this.state.config.LIGHTS.off}\r\n                                                                    onChange={this.handleLightsOffChange.bind(this)} />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        })()}\r\n                                        {/* SENSORS */}\r\n                                        <div className=\"Config-Item-Header-Text\">SENSORS</div>\r\n\r\n                                        {sensorSettingRows}\r\n\r\n\r\n                                        {/* Doubly hid for now */}\r\n                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginTop: '4px' }}>\r\n                                            <div id=\"GROW-DETAILS-SAVE-CONFIG-BTN\" onClick={() => this.postConfig()}>SAVE <br></br> SETTINGS</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n\r\n                </div>\r\n\r\n                {/* use me! */}\r\n                {\r\n                    (() => {\r\n                    })()\r\n                }\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowSettings;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport GrowDetailsGraphs from './GrowDetailsGraphs'\r\nimport GrowSettings from './GrowSettings';\r\n\r\nimport DbHelper from '../../_utils/DbHelper.js'\r\n\r\n\r\nimport moment from 'moment'\r\n\r\nimport { WiThermometer, WiHumidity, WiHurricane, WiCloudUp, WiThermometerExterior } from 'react-icons/wi';\r\nimport { BsGearFill } from 'react-icons/bs';\r\nimport co2svg from '../../../assets/co2svg.svg'\r\nimport tvocSvg from '../../../assets/tvoc-svg.svg'\r\n\r\n\r\nclass GrowDetailsPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeIndicatorStyle: 'Grow-Active-Indicator-Circle',\r\n\r\n            SENSOR_PIDS: [],\r\n            SENSORS_INIT: false,\r\n\r\n            DAILY_HIGHS: [],\r\n            DAILY_HIGHS_TIMES: [],\r\n            DAILY_LOWS: [],\r\n            DAILY_LOWS_TIMES: [],\r\n            DAILY_AVGS: [],\r\n            YEST_AVGS: [],\r\n\r\n            ACTIVE_LINES: [],\r\n            ACTIVE_INIT: false,\r\n\r\n            TABLE_INIT: false,\r\n\r\n            SHOW_SETTINGS: false\r\n        };\r\n\r\n        this.dbHelper = new DbHelper(); // Need for linked journals\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n\r\n\r\n\r\n        if (this.props.grow && !this.state.SENSOR_DEVIATIONS) {\r\n            var SENSOR_DEVIATIONS = []\r\n            var SENSOR_MEANS = []\r\n\r\n            for (const [key, value] of Object.entries(this.props.grow.config.SENSORS)) {\r\n                SENSOR_DEVIATIONS[value.PID] = value._deviation\r\n                SENSOR_MEANS[value.PID] = value._mean\r\n            }\r\n\r\n            this.setState({\r\n                SENSOR_DEVIATIONS: SENSOR_DEVIATIONS,\r\n                SENSOR_MEANS: SENSOR_MEANS\r\n            })\r\n        }\r\n\r\n\r\n\r\n        if (this.props.rawGrowData && this.state.SENSOR_PIDS && this.state.SENSOR_MEANS) {\r\n            if (!this.props.rawGrowData[this.props.grow.id]) {\r\n                return;\r\n            }\r\n\r\n            var dataLengthRef = this.props.rawGrowData[this.props.grow.id][this.props.rawGrowData[this.props.grow.id].length - 1].length\r\n\r\n            if (this.dataLengthRef !== dataLengthRef) {\r\n                this.dataLengthRef = dataLengthRef\r\n                this.processGrowData(this.props.rawGrowData)\r\n            }\r\n            this.forceUpdate()\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n        if (this.props.grow !== this.grow) {\r\n            console.log(\"FRESH GROW!\")\r\n            this.grow = this.props.grow\r\n            this.harmonyRatiosUpdated = null\r\n\r\n            var SENSOR_DEVIATIONS = []\r\n            var SENSOR_MEANS = []\r\n\r\n            for (const [key, value] of Object.entries(this.props.grow.config.SENSORS)) {\r\n                SENSOR_DEVIATIONS[value.PID] = value._deviation\r\n                SENSOR_MEANS[value.PID] = value._mean\r\n            }\r\n\r\n            this.setState({\r\n                SENSOR_DEVIATIONS: SENSOR_DEVIATIONS,\r\n                SENSOR_MEANS: SENSOR_MEANS\r\n            })\r\n        }\r\n\r\n        if (this.props.rawGrowData) {\r\n            if (!this.props.rawGrowData[this.props.grow.id]) {\r\n                return;\r\n            }\r\n\r\n            var dataLengthRef = this.props.rawGrowData[this.props.grow.id][this.props.rawGrowData[this.props.grow.id].length - 1].length\r\n\r\n            if (this.dataLengthRef !== dataLengthRef) {\r\n                this.dataLengthRef = dataLengthRef\r\n                this.processGrowData(this.props.rawGrowData)\r\n            } else if (!this.state.TABLE_INIT) {\r\n                // Gotta get this process in the first time for things to go smooth... not quite sure why.\r\n                this.dataLengthRef = dataLengthRef\r\n                this.processGrowData(this.props.rawGrowData)\r\n                this.setState({ TABLE_INIT: true })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    processGrowData = (growData) => {\r\n\r\n        var concatData = []\r\n        growData[this.props.grow.id].forEach((list) => {\r\n            concatData = concatData.concat(list)\r\n        })\r\n        concatData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n        this.setState({\r\n            liveData: concatData[concatData.length - 1],\r\n            lastLiveData: concatData[concatData.length - 2],\r\n        })\r\n\r\n        var now = new Date().getTime()\r\n\r\n        var HARMONY_POINT_COUNT = []\r\n        var HARMONY_PLUS_ONE_COUNT = []\r\n        var HARMONY_PLUS_TWO_COUNT = []\r\n        var HARMONY_CHECKED = false\r\n\r\n        var DAILY_HIGHS = []\r\n        var DAILY_HIGHS_TIMES = []\r\n        var DAILY_LOWS = []\r\n        var DAILY_LOWS_TIMES = []\r\n        var DAILY_AVGS = []\r\n        var YEST_AVGS = []\r\n\r\n        var DAILY_POINT_COUNT = 0\r\n        var YEST_POINT_COUNT = 0\r\n\r\n        var lastDayData = []\r\n        var yesterdayData = []\r\n\r\n        // INITIALIZING SENSOR INFO\r\n        // get all sensor pids...   ?\r\n        var SENSOR_PIDS = []\r\n        if (this.state.SENSORS_INIT !== this.props.grow && this.props.grow.config.SENSORS !== this.state.SENSOR_PIDS) {\r\n            this.props.grow.config.SENSORS.forEach((sensor, key) => {\r\n\r\n                if (SENSOR_PIDS[key] !== sensor.PID) {\r\n                    SENSOR_PIDS[key] = sensor.PID\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                SENSOR_PIDS: SENSOR_PIDS\r\n            });\r\n\r\n            if (this.state.ACTIVE_INIT !== this.props.grow) {\r\n                this.setState({\r\n                    ACTIVE_LINES: SENSOR_PIDS,\r\n                    ACTIVE_INIT: this.props.grow\r\n                });\r\n            }\r\n        }\r\n\r\n        concatData.forEach((dataPoint) => {\r\n            if (now - dataPoint.time < 86400000) {\r\n                DAILY_POINT_COUNT += 1\r\n\r\n                lastDayData[lastDayData.length] = dataPoint\r\n\r\n                // DATA and CALCS for avgs/lows/highs\r\n                for (const pid in dataPoint) {\r\n\r\n                    if (SENSOR_PIDS.includes(pid)) {\r\n                        var tIndex = SENSOR_PIDS.indexOf(pid)\r\n\r\n                        // HIGHS\r\n                        if (!DAILY_HIGHS[tIndex] || parseFloat(dataPoint[pid]) >= DAILY_HIGHS[tIndex]) {\r\n                            DAILY_HIGHS[tIndex] = dataPoint[pid]\r\n                            DAILY_HIGHS_TIMES[tIndex] = dataPoint.time\r\n                        }\r\n                        // LOWS\r\n                        if (!DAILY_LOWS[tIndex] || parseFloat(dataPoint[pid]) <= DAILY_LOWS[tIndex]) {\r\n                            DAILY_LOWS[tIndex] = dataPoint[pid]\r\n                            DAILY_LOWS_TIMES[tIndex] = dataPoint.time\r\n                        }\r\n                        // AVERAGES\r\n                        if (!DAILY_AVGS[tIndex]) {\r\n                            DAILY_AVGS[tIndex] = 0\r\n                        }\r\n                        DAILY_AVGS[tIndex] = parseFloat(dataPoint[pid]) + parseFloat(DAILY_AVGS[tIndex])\r\n\r\n                        // HARMONY RATIOS\r\n                        if (!(this.state.HARMONY_WARN && this.state.HARMONY_DANGER) || !this.harmonyRatiosUpdated || (new Date().valueOf() - this.harmonyRatiosUpdated > 900000)) {\r\n                            HARMONY_CHECKED = true\r\n\r\n                            // HARMONY_POINT_COUNT\r\n                            if (!HARMONY_POINT_COUNT[pid]) {\r\n                                HARMONY_POINT_COUNT[pid] = 0\r\n                                HARMONY_PLUS_ONE_COUNT[pid] = 0\r\n                                HARMONY_PLUS_TWO_COUNT[pid] = 0\r\n                            }\r\n                            HARMONY_POINT_COUNT[pid] = HARMONY_POINT_COUNT[pid] + 1\r\n\r\n\r\n                            // HARMONY_PLUS_TWO_COUNT\r\n                            if ((dataPoint[pid] > (this.state.SENSOR_MEANS[pid]) + (this.state.SENSOR_DEVIATIONS[pid] * 2)) ||\r\n                                (dataPoint[pid] < (this.state.SENSOR_MEANS[pid]) - (this.state.SENSOR_DEVIATIONS[pid] * 2))) {\r\n                                HARMONY_PLUS_TWO_COUNT[pid] = HARMONY_PLUS_TWO_COUNT[pid] + 1\r\n                                // HARMONY_PLUS_ONE_COUNT[pid] = HARMONY_PLUS_ONE_COUNT[pid] - 1 // hacky... but it'll play for now\r\n                            } else if ((dataPoint[pid] > (this.state.SENSOR_MEANS[pid]) + (this.state.SENSOR_DEVIATIONS[pid])) ||\r\n                                (dataPoint[pid] < (this.state.SENSOR_MEANS[pid]) - (this.state.SENSOR_DEVIATIONS[pid]))) {  // HARMONY_PLUS_ONE_COUNT\r\n                                HARMONY_PLUS_ONE_COUNT[pid] = HARMONY_PLUS_ONE_COUNT[pid] + 1\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // YESTERDAY AVERAGES\r\n            if ((now - dataPoint.time < (86400000 * 2)) && (now - dataPoint.time > 86400000)) {\r\n                YEST_POINT_COUNT += 1\r\n\r\n                yesterdayData[yesterdayData.length] = dataPoint\r\n\r\n                // DATA and CALCS for avgs/lows/highs\r\n                for (const pid in dataPoint) {\r\n\r\n                    if (SENSOR_PIDS.includes(pid)) {\r\n                        var yIndex = SENSOR_PIDS.indexOf(pid)\r\n\r\n                        //AVERAGES\r\n                        if (!YEST_AVGS[yIndex]) {\r\n                            YEST_AVGS[yIndex] = 0\r\n                        }\r\n                        YEST_AVGS[yIndex] = parseFloat(dataPoint[pid]) + parseFloat(YEST_AVGS[yIndex])\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        // CALCULATE HARMONIES\r\n        if (Object.keys(HARMONY_POINT_COUNT).length !== 0 && HARMONY_CHECKED) {\r\n\r\n            console.log(\"UPDATED HARMONY RATIOS!\")\r\n\r\n            this.harmonyRatiosUpdated = new Date().valueOf()\r\n\r\n            for (const [key, value] of Object.entries(HARMONY_PLUS_ONE_COUNT)) {\r\n                HARMONY_PLUS_ONE_COUNT[key] = Math.round((HARMONY_PLUS_ONE_COUNT[key] / HARMONY_POINT_COUNT[key]) * 100)\r\n            }\r\n\r\n            for (const [key, value] of Object.entries(HARMONY_PLUS_TWO_COUNT)) {\r\n                HARMONY_PLUS_TWO_COUNT[key] = Math.round((HARMONY_PLUS_TWO_COUNT[key] / HARMONY_POINT_COUNT[key]) * 100)\r\n            }\r\n\r\n            console.log(\"HARMONY count\", HARMONY_POINT_COUNT)\r\n            console.log(\"HARMONY one\", HARMONY_PLUS_ONE_COUNT)\r\n            console.log(\"HARMONY two\", HARMONY_PLUS_TWO_COUNT)\r\n\r\n            this.setState({\r\n                HARMONY_DANGER: HARMONY_PLUS_TWO_COUNT,\r\n                HARMONY_WARN: HARMONY_PLUS_ONE_COUNT\r\n            });\r\n        }\r\n\r\n\r\n        // CALCULATE AVERAGES\r\n        DAILY_AVGS.forEach((avg, key) => {\r\n            DAILY_AVGS[key] = DAILY_AVGS[key] / DAILY_POINT_COUNT\r\n        });\r\n\r\n        YEST_AVGS.forEach((avg, key) => {\r\n            YEST_AVGS[key] = YEST_AVGS[key] / YEST_POINT_COUNT\r\n        });\r\n\r\n        this.setState({\r\n            DAILY_HIGHS: DAILY_HIGHS,\r\n            DAILY_HIGHS_TIMES: DAILY_HIGHS_TIMES,\r\n            DAILY_LOWS: DAILY_LOWS,\r\n            DAILY_LOWS_TIMES: DAILY_LOWS_TIMES,\r\n            DAILY_AVGS: DAILY_AVGS,\r\n            YEST_AVGS: YEST_AVGS\r\n        });\r\n    }\r\n\r\n    toggleLine = (e) => {\r\n        var pid = e.currentTarget.getAttribute('data-value')\r\n\r\n        var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n\r\n        var tActiveLines = this.state.ACTIVE_LINES\r\n\r\n        if (tActiveLines.includes(pid)) {\r\n            tActiveLines[tIndex] = null\r\n        } else {\r\n            tActiveLines[tIndex] = pid\r\n        }\r\n\r\n        this.setState({ ACTIVE_LINES: tActiveLines })\r\n        this.forceUpdate()\r\n    }\r\n\r\n    openCloseSettings = () => {\r\n        if (this.state.SHOW_SETTINGS) {\r\n            this.setState({ SHOW_SETTINGS: false })\r\n        } else {\r\n            this.setState({ SHOW_SETTINGS: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const sensorInfoRows = this.state.SENSOR_PIDS.map((pid) =>\r\n            <div className=\"Grow-Details-Main-Data-Display-Row\" key={pid}>\r\n\r\n                {(() => {\r\n\r\n                    var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                    var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                    var setOpacity = 0.3\r\n                    var setPaddingTop = '3px'\r\n\r\n                    if (this.state.ACTIVE_LINES.includes(pid)) {\r\n                        setOpacity = 1\r\n                        setPaddingTop = '4px'\r\n                    }\r\n\r\n                    if (!this.props.grow.config.SENSORS[tIndex]) {\r\n                        return\r\n                    }\r\n\r\n                    return (\r\n                        <div data-value={pid} key={pid} onClick={this.toggleLine} style={{ width: '120px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', fontSize: '0.65em', cursor: 'pointer', background: '#0c140d', opacity: setOpacity, color: this.props.grow.config.SENSORS[tIndex].color }}  >\r\n                            <div style={{ paddingTop: setPaddingTop }} > {curSensor.name}</div>\r\n\r\n                            {(() => {\r\n                                if (curSensor.type === \"airTemp\") {\r\n                                    return <WiThermometer style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                } else if (curSensor.type === \"humidity\") {\r\n                                    return <WiHumidity style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                } else if (curSensor.type === \"fan\") {\r\n                                    return <WiHurricane style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                } else if (curSensor.type === \"humidifier\") {\r\n                                    return <WiCloudUp style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                } else if (curSensor.type === \"waterTemp\") {\r\n                                    return <WiThermometerExterior style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                } else if (curSensor.type === \"co2\") {\r\n                                    return <img src={co2svg} alt=\"CO2 Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '28px' }} />\r\n                                } else if (curSensor.type === \"tvoc\") {\r\n                                    return <img src={tvocSvg} alt=\"TVOC Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '28px' }} />\r\n                                } else {\r\n                                    return <div />\r\n                                }\r\n                            })()}\r\n\r\n                        </div>\r\n                    )\r\n                })()}\r\n                {(() => {\r\n                    var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                    var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                    var setIndicatorColor = '#FFF'\r\n\r\n                    if (!curSensor) {\r\n                        return\r\n                    }\r\n\r\n                    if ((curSensor._mean || curSensor._mean === 0) && (curSensor._deviation || curSensor._deviation === 0)) {\r\n                        if (((curSensor._mean + (curSensor._deviation * 2)) < this.state.liveData[pid]) || ((curSensor._mean - (curSensor._deviation * 2)) > this.state.liveData[pid])) {\r\n                            setIndicatorColor = '#FF0000' // BAD\r\n                        } else if (((curSensor._mean + (curSensor._deviation)) < this.state.liveData[pid]) || ((curSensor._mean - (curSensor._deviation)) > this.state.liveData[pid])) {\r\n                            setIndicatorColor = '#ded954' // WARN\r\n                        } else {\r\n                            setIndicatorColor = '#38c538' // GOOD\r\n                        }\r\n                    }\r\n\r\n                    return (\r\n                        <div className=\"Grow-Details-Main-Data-Current-Data\" style={{ background: setIndicatorColor }}>\r\n\r\n\r\n                            {(() => {\r\n                                if (this.state.liveData[pid] > this.state.lastLiveData[pid]) {\r\n                                    return <div style={{ fontSize: '14px', color: '#a02525' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                } else if (this.state.liveData[pid] < this.state.lastLiveData[pid]) {\r\n                                    return <div style={{ fontSize: '14px', color: '#242490' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                } else {\r\n                                    return <div style={{ fontSize: '14px', visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                }\r\n                            })()}\r\n\r\n\r\n                            {(() => {\r\n                                var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                                var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                                if (!curSensor) {\r\n                                    return\r\n                                }\r\n\r\n                                return <div style={{ flex: 1 }}>{Math.round(this.state.liveData[pid] * 10) / 10}{curSensor.unit}</div>\r\n                            })()}\r\n\r\n\r\n\r\n                            <div style={{ width: '1px', background: '#000' }} />\r\n\r\n                            {(() => {\r\n                                var harmonyWarnFlex = 0\r\n                                var harmonyDangerFlex = 0\r\n                                var harmonyGoodFlex = 100\r\n                                if (this.state.HARMONY_WARN) {\r\n                                    harmonyWarnFlex = this.state.HARMONY_WARN[pid]\r\n                                }\r\n                                if (this.state.HARMONY_DANGER) {\r\n                                    harmonyDangerFlex = this.state.HARMONY_DANGER[pid]\r\n                                }\r\n                                harmonyGoodFlex = harmonyGoodFlex - harmonyWarnFlex - harmonyDangerFlex\r\n\r\n                                return (\r\n                                    <div style={{ display: 'flex', flexDirection: 'column', height: \"100%\", width: \"4px\" }}>\r\n                                        <div style={{ flex: harmonyDangerFlex, background: '#FF0000' }} />\r\n                                        <div style={{ flex: harmonyWarnFlex, background: '#fcba03' }} />\r\n                                        <div style={{ flex: harmonyGoodFlex, background: '#38c538' }} />\r\n                                    </div>\r\n                                )\r\n                            })()}\r\n\r\n                            <div style={{ width: '1px', background: '#000' }} />\r\n\r\n                        </div>\r\n                    )\r\n                })()}\r\n\r\n                <div className=\"Grow-Details-Main-Data-Data\" style={{ marginBottom: '1px' }}>\r\n                    <div className=\"Grow-Details-Main-Yest-Data\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                        {(() => {\r\n                            var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                            var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                            if (!curSensor) {\r\n                                return\r\n                            }\r\n\r\n                            if (this.state.YEST_AVGS[tIndex]) {\r\n                                return Math.round(this.state.YEST_AVGS[tIndex] * 10) / 10 + curSensor.unit\r\n                            }\r\n                        })()}\r\n\r\n\r\n                        {(() => {\r\n                            var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n\r\n                            if (this.state.DAILY_AVGS[tIndex] && this.state.YEST_AVGS[tIndex]) {\r\n\r\n                                if (this.state.DAILY_AVGS[tIndex] > this.state.YEST_AVGS[tIndex]) {\r\n                                    return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"higher value\">&#9650;</span></div>\r\n                                } else if (this.state.DAILY_AVGS[tIndex] < this.state.YEST_AVGS[tIndex]) {\r\n                                    return <div style={{ color: '#FFF' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                } else {\r\n                                    return <div style={{ visibility: 'hidden' }}><span role=\"img\" aria-label=\"lower value\">&#9660;</span></div>\r\n                                }\r\n                            }\r\n                        })()}\r\n                    </div>\r\n\r\n\r\n                    {(() => {\r\n                        var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                        var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                        if (!curSensor) {\r\n                            return\r\n                        }\r\n\r\n                        if (this.state.DAILY_AVGS[tIndex]) {\r\n                            return Math.round(this.state.DAILY_AVGS[tIndex] * 10) / 10 + curSensor.unit\r\n                        }\r\n                    })()}\r\n                </div>\r\n\r\n\r\n                <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#c77725', marginBottom: '1px' }}>\r\n                    <div className=\"Grow-Details-Main-Data-Time\">\r\n                        {(() => {\r\n                            var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n\r\n                            if (this.state.DAILY_HIGHS_TIMES) {\r\n                                var m = moment(this.state.DAILY_HIGHS_TIMES[tIndex])\r\n                                return m.format('HH:mm')\r\n                            }\r\n                        })()}\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                        var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                        if (!curSensor) {\r\n                            return\r\n                        }\r\n\r\n                        if (this.state.DAILY_HIGHS) {\r\n                            return Math.round(this.state.DAILY_HIGHS[tIndex] * 10) / 10 + curSensor.unit\r\n                        }\r\n                    })()}\r\n                </div>\r\n\r\n                <div className=\"Grow-Details-Main-Data-Data\" style={{ backgroundColor: '#2584c7', marginBottom: '1px' }}>\r\n                    <div className=\"Grow-Details-Main-Data-Time\">\r\n                        {(() => {\r\n                            var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n\r\n                            if (this.state.DAILY_LOWS_TIMES) {\r\n                                var m = moment(this.state.DAILY_LOWS_TIMES[tIndex])\r\n                                return m.format('HH:mm')\r\n                            }\r\n                        })()}\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        var tIndex = this.state.SENSOR_PIDS.indexOf(pid)\r\n                        var curSensor = this.props.grow.config.SENSORS[tIndex]\r\n                        if (!curSensor) {\r\n                            return\r\n                        }\r\n\r\n                        if (this.state.DAILY_LOWS) {\r\n                            return Math.round(this.state.DAILY_LOWS[tIndex] * 10) / 10 + curSensor.unit\r\n                        }\r\n                    })()}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n\r\n        // MAIN RENDER RETURN\r\n        return (\r\n            <div className=\"Grow-Details-Page\">\r\n                <div className=\"Grow-Details-Page-Content\">\r\n                    <div className=\"Grow-Details-Content-Bottom\">\r\n                        <div className=\"Grow-Details-Header\">\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flex: 1 }}>\r\n                                <div className={this.state.activeIndicatorStyle} />\r\n                                <div id=\"Grow-Header-Text\">{this.props.grow.name}</div>\r\n                            </div>\r\n                            <div onClick={() => this.openCloseSettings()} style={{ paddingRight: '30px', color: '#A9A9A9', userSelect: 'none', cursor: 'pointer' }}>\r\n                                <BsGearFill style={{ color: '#9e9e9e', fontSize: '22px', marginTop: '8px' }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"Grow-Details-Bottom-Item\" >\r\n                            <GrowDetailsGraphs activeLines={this.state.ACTIVE_LINES} rawGrowData={this.props.rawGrowData} grow={this.props.grow} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if (this.state.SHOW_SETTINGS) {\r\n                            return (\r\n                                <GrowSettings grow={this.props.grow} refreshGrows={this.props.refreshGrows} close={this.openCloseSettings} />\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n                    <div className=\"Grow-Details-Page-Panel\">\r\n                        <div id=\"Grow-Details-Data-Display\">\r\n                            {(() => {\r\n                                if (this.state.liveData) {\r\n                                    return (\r\n                                        <div id=\"Grow-Details-Main-Data-Display\">\r\n                                            <div className=\"Grow-Details-Headers-Display-Row\">\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ color: '#FFF', width: '120px', maxWidth: '120px' }}></div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '88px', maxWidth: '88px' }}></div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '64px', maxWidth: '64px' }}>24h~</div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '64px', maxWidth: '64px' }}>24h&#8593;</div>\r\n                                                <div className=\"Grow-Details-Main-Data-Row-Header\" style={{ width: '64px', maxWidth: '64px' }}>24h&#8595;</div>\r\n                                            </div>\r\n\r\n                                            {sensorInfoRows}\r\n\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            })()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowDetailsPage;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\n\r\nimport GrowDetailsPage from './GrowPage/GrowDetailsPage'\r\n\r\n\r\nclass GrowPage extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdisplayContent: \"main\", // main\r\n\t\t\tgrow: this.props.grow\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._ismounted = true;\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis._ismounted = false;\r\n\t}\r\n\r\n\tcomponentDidUpdate = () => {\r\n\t\tif (!this._ismounted) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tcloseModal = (key) => {\r\n\t\tif (!key || key === '') {\r\n\t\t\tthis.setState({ displayContent: \"main\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({ displayContent: \"main\" });\r\n\t}\r\n\r\n\topenMainPage = (page, id) => {\r\n\t\tthis.props.openMainPage(page, id)\r\n\t}\r\n\r\n\topenCreateGrowModal = () => {\r\n\t\talert(\"GrowPage.js openCreateGrowModal() TODO\")\r\n\t}\r\n\r\n\topenGrow = (grow) => {\r\n\t\tif (!grow) {\r\n\t\t\tthis.props.setGrow(null)\r\n\t\t}\r\n\r\n\t\tthis.props.setGrow(grow)\r\n\t}\r\n\r\n\tsetJournalID = (journalID) => {\r\n\t\tconsole.log(\"setJournalID: \" + journalID)\r\n\t\tthis.props.setJournalID(journalID)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div id=\"Grow-Page\">\r\n\t\t\t\t<div id=\"Grow-Main\">\r\n\t\t\t\t\t<div id=\"Grow-Main-Area\">\r\n\r\n\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\tif (this.props.grow === null) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div style={{ height: \"100%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t{/* nothing... used to be a grows display */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t{/* <iframe id=\"Food-Chart\" title=\"FoodChart\" src=\"https://docs.google.com/spreadsheets/d/1P5X98doJf2eJsbkW502PaO9aZghInk86H-kHPO4mV88/edit?usp=sharing\">\r\n\t\t\t\t\t\t\t\t\t\t</iframe> */}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})()}\r\n\r\n\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\tif (this.props.grow) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<GrowDetailsPage grow={this.props.grow} refreshGrows={this.props.refreshGrows} openMainPage={this.openMainPage} setJournalID={this.setJournalID} rawGrowData={this.props.rawGrowData} user={this.props.user} />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})()}\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GrowPage;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\r\n\r\nimport moment from 'moment'\r\n\r\n\r\n\r\n\r\nclass AllGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayWindow: 43200000, // 1800000, 10800000, 43200000, 86400000, 259200000\r\n\r\n            lightsOnArray: [],\r\n            lightsOffArray: [],\r\n            tickArray: [],\r\n            lightBackgrounds: ['#7344e740', '#fff93640'],\r\n        };\r\n\r\n        this.concatData = []\r\n\r\n        this.firstPointTime = 0\r\n        this.lastPointTime = 0\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n\r\n        if (this.props.user) {\r\n            if (this.props.user.PREFS) {\r\n                if (this.props.user.PREFS.GRAPHS) {\r\n                    if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                        if (this.props.user.PREFS.GRAPHS.AllGraph.timeWindow && (this.props.user.PREFS.GRAPHS.AllGraph.timeWindow !== this.state.displayWindow)) {\r\n                            this.setState({\r\n                                displayWindow: this.props.user.PREFS.GRAPHS.AllGraph.timeWindow\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.rawGrowData && this.props.growIDs) {\r\n            var newArrayLengths = []\r\n            var valChanged = false\r\n            this.props.growIDs.forEach((gwID) => {\r\n\r\n\r\n                // returns\r\n                if (!this.props.rawGrowData[gwID]) {\r\n                    newArrayLengths[gwID] = 0\r\n                    return\r\n                }\r\n                if ((this.DataLengthChecks) && (this.DataLengthChecks[gwID] && this.props.rawGrowData[gwID]) && (this.DataLengthChecks[gwID] === this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length)) {\r\n                    newArrayLengths[gwID] = this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length\r\n                    return; // \r\n                }\r\n                valChanged = true\r\n\r\n                newArrayLengths[gwID] = this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length\r\n\r\n                var subConcatData = []\r\n                this.props.rawGrowData[gwID].forEach((list) => {\r\n                    subConcatData = subConcatData.concat(list)\r\n                })\r\n\r\n                if (!this.DataLengthChecks || this.DataLengthChecks[gwID] !== subConcatData.length) {\r\n                    subConcatData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n                    this.concatData[gwID] = subConcatData\r\n                }\r\n\r\n            })\r\n\r\n            if (valChanged) {\r\n                this.DataLengthChecks = newArrayLengths\r\n\r\n                this.processData()\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n        if (this.props.rawGrowData && this.props.growIDs) {\r\n            var newArrayLengths = []\r\n            var valChanged = false\r\n            this.props.growIDs.forEach((gwID) => {\r\n\r\n                // returns\r\n                if (!this.props.rawGrowData[gwID]) {\r\n                    newArrayLengths[gwID] = 0\r\n                    return\r\n                }\r\n                if ((this.DataLengthChecks) && (this.DataLengthChecks[gwID] && this.props.rawGrowData[gwID]) && (this.DataLengthChecks[gwID] === this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length)) {\r\n                    newArrayLengths[gwID] = this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length\r\n                    return; // \r\n                }\r\n                valChanged = true\r\n\r\n                newArrayLengths[gwID] = this.props.rawGrowData[gwID][this.props.rawGrowData[gwID].length - 1].length\r\n\r\n                var subConcatData = []\r\n                this.props.rawGrowData[gwID].forEach((list) => {\r\n                    subConcatData = subConcatData.concat(list)\r\n                })\r\n\r\n                if (!this.DataLengthChecks || this.DataLengthChecks[gwID] !== subConcatData.length) {\r\n                    subConcatData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n                    this.concatData[gwID] = subConcatData\r\n                }\r\n\r\n            })\r\n\r\n            if (valChanged) {\r\n                this.DataLengthChecks = newArrayLengths\r\n\r\n                this.processData()\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processData = (window = this.state.displayWindow) => {\r\n        var superData = null\r\n        if (!this.concatData) {\r\n            return;\r\n        } else {\r\n            superData = this.concatData\r\n        }\r\n\r\n        var now = new Date().getTime()\r\n        var processedData = []\r\n        var combinedProcessedData = []\r\n\r\n        //forEach\r\n        this.props.growIDs.forEach((id) => {\r\n            if (!superData[id]) {\r\n                return\r\n            }\r\n\r\n            var subProcessedData = []\r\n\r\n            var i = -1\r\n            superData[id].forEach((dataPoint) => {\r\n\r\n                var subCombined = {}\r\n\r\n                var reducerValue = Math.round(this.state.displayWindow / 10800000)\r\n                if (reducerValue < 1) {\r\n                    reducerValue = 1\r\n                }\r\n\r\n                if (now - dataPoint.time < window) {\r\n                    i++;\r\n\r\n                    if (i === 0 || i % reducerValue === 0) {\r\n                        var processedPoint = dataPoint\r\n\r\n                        for (const [key, value] of Object.entries(processedPoint)) {\r\n                            if (key !== \"time\") {\r\n                                subCombined[key + \"^\" + id] = value\r\n                            } else {\r\n                                subCombined.time = value\r\n                            }\r\n                        }\r\n\r\n                        combinedProcessedData[combinedProcessedData.length] = subCombined\r\n\r\n                        subProcessedData[subProcessedData.length] = processedPoint\r\n                    }\r\n                }\r\n            })\r\n\r\n            processedData[id] = subProcessedData\r\n        })\r\n\r\n        combinedProcessedData.sort((a, b) => (a.time > b.time) ? 1 : -1)\r\n\r\n        this.setState({\r\n            combinedProcessedData: combinedProcessedData,\r\n            processedData: processedData\r\n        });\r\n    }\r\n\r\n\r\n    toggleWindow = (e) => {\r\n        this.setState({ displayWindow: e.target.value })\r\n        this.processData(e.target.value)\r\n        this.props.toggleWindow(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    renderTooltip = (props) => {\r\n        var rawContent = props.payload\r\n        if (rawContent === null || rawContent.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var readableTime = moment(props.payload[0].payload.time).format('ddd - HH:mm')\r\n\r\n        const listItems = rawContent.map((curSensor) => {\r\n            var tID = curSensor.name.split(\"^\")[1]\r\n            var tPID = curSensor.name.split(\"^\")[3]\r\n\r\n            if (this.props.user) {\r\n                if (this.props.user.PREFS) {\r\n                    if (this.props.user.PREFS.GRAPHS) {\r\n                        if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                            if (this.props.user.PREFS.GRAPHS.AllGraph.showSensors && (this.props.user.PREFS.GRAPHS.AllGraph.showSensors[curSensor.dataKey] === false)) {\r\n                                return\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            var grow = null\r\n            this.props.userGrows.forEach((g) => {\r\n                if (g.id === tID) {\r\n                    grow = g\r\n                    return\r\n                } else {\r\n                    return\r\n                }\r\n            })\r\n\r\n            var sensor = null\r\n            grow.config.SENSORS.forEach((s) => {\r\n                if (s.PID === tPID) {\r\n                    sensor = s\r\n                }\r\n            })\r\n\r\n            return (\r\n                <div className=\"AllGraph-Tooltip-Data\" key={curSensor.dataKey} style={{ color: sensor.color, paddingLeft: '2px', paddingRight: '2px' }}>\r\n                    <div style={{ color: sensor.color, display: \"flex\", flexDirection: \"row\", justifyContent: 'space-between' }}>\r\n                        <div>{sensor.name}: </div>\r\n                        <div style={{ fontWeight: 800 }} >{curSensor.payload[curSensor.dataKey]} {sensor.unit}</div>\r\n                    </div>\r\n                    <div style={{ width: \"100%\", height: '1px', background: \"#2d2d2e\" }} />\r\n                </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"AllGraph-Tooltip\" >\r\n                <div>{readableTime}</div>\r\n\r\n                { listItems}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var defaultWindow = 43200000\r\n        if (this.props.user) {\r\n            if (this.props.user.PREFS) {\r\n                if (this.props.user.PREFS.GRAPHS) {\r\n                    if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                        if (this.props.user.PREFS.GRAPHS.AllGraph.timeWindow) {\r\n                            defaultWindow = this.props.user.PREFS.GRAPHS.AllGraph.timeWindow\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.state.combinedProcessedData) {\r\n            var lineItems = this.props.userGrows.map(grow => grow.config.SENSORS.map((sensor) => {\r\n                var dataBlob = sensor.name + \"^\" + grow.id + \"^\" + sensor.unit + \"^\" + sensor.PID\r\n                var lineKey = sensor.PID + \"^\" + grow.id\r\n\r\n                if (this.props.user) {\r\n                    if (this.props.user.PREFS) {\r\n                        if (this.props.user.PREFS.GRAPHS) {\r\n                            if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                                if (this.props.user.PREFS.GRAPHS.AllGraph.showSensors && (this.props.user.PREFS.GRAPHS.AllGraph.showSensors[lineKey] === false)) {\r\n                                    return\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                if (sensor.type === \"airTemp\" || sensor.type === \"waterTemp\") {\r\n                    return <Line yAxisId=\"temperature\" connectNulls={true} type=\"monotone\" name={dataBlob} dataKey={lineKey} key={lineKey} stroke={sensor.color} strokeWidth={sensor.thickness} dot={false} />\r\n                } else if (sensor.type === \"humidifier\" || sensor.type === \"fan\" || sensor.type === \"humidity\") {\r\n                    return <Line yAxisId=\"percent\" connectNulls={true} type=\"monotone\" name={dataBlob} dataKey={lineKey} key={lineKey} stroke={sensor.color} strokeWidth={sensor.thickness} dot={false} />\r\n                } else if (sensor.unit === \"ᵖᵖᵐ\") {\r\n                    return <Line yAxisId=\"ppm\" connectNulls={true} type=\"monotone\" name={dataBlob} dataKey={lineKey} key={lineKey} stroke={sensor.color} strokeWidth={sensor.thickness} dot={false} />\r\n                } else if (sensor.unit === \"ᵖᵖᵇ\") {\r\n                    return <Line yAxisId=\"ppb\" connectNulls={true} type=\"monotone\" name={dataBlob} dataKey={lineKey} key={lineKey} stroke={sensor.color} strokeWidth={sensor.thickness} dot={false} />\r\n                } else {\r\n                    return <Line yAxisId=\"ppm\" connectNulls={true} type=\"monotone\" name={dataBlob} dataKey={lineKey} key={lineKey} stroke={sensor.color} strokeWidth={sensor.thickness} dot={false} />\r\n                }\r\n            }));\r\n\r\n\r\n            var renderDayGraph = null\r\n            if (this.props.parentSize) {\r\n                var xSize = Math.floor(this.props.parentSize[0] * 0.9)\r\n                var ySize = Math.floor(this.props.parentSize[1] * 0.9)\r\n\r\n                renderDayGraph = (\r\n                    <LineChart width={xSize} height={ySize} data={this.state.combinedProcessedData}>\r\n\r\n                        {lineItems}\r\n\r\n                        <CartesianGrid vertical horizontal={false} verticalFill={[this.state.lightBackgrounds[0], this.state.lightBackgrounds[1]]} stroke=\"none\" fillOpacity={0.2} />\r\n\r\n                        <XAxis\r\n                            tick={{ fill: \"#B3C2B5\" }}\r\n                            dataKey=\"time\"\r\n                            type=\"number\"\r\n                            domain={[new Date().getTime(), new Date(new Date() - this.state.displayWindow).getTime()]} //fix!\r\n                            ticks={this.state.tickArray}\r\n                            tickFormatter={(tick) => moment(tick * 1).format('ddd - HH:mm')}\r\n                        />\r\n                        <YAxis yAxisId=\"temperature\" orientation=\"left\" domain={[24]} tick={{ fill: \"#B3C2B5\" }} />\r\n                        <YAxis yAxisId=\"percent\" orientation=\"right\" hide={true} domain={[0, 100]} tick={{ fill: \"#B3C2B5\" }} />\r\n                        <YAxis yAxisId=\"ppm\" orientation=\"right\" hide={true} domain={[0, 100]} tick={{ fill: \"#false\" }} />\r\n                        <YAxis yAxisId=\"ppb\" orientation=\"right\" hide={true} domain={[0, 100]} tick={{ fill: \"false\" }} />\r\n                        <Tooltip content={this.renderTooltip} />\r\n                    </LineChart>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"Chart-Container\">\r\n\r\n                {renderDayGraph}\r\n\r\n                {/* Time Scale Select... */}\r\n                <div style={{ width: '40px', fontSize: '0.55em', display: 'flex', flexDirection: 'column', position: 'absolute', marginLeft: '2.5%', marginTop: '2%' }}>\r\n\r\n                    <select onChange={this.toggleWindow} id=\"AllGraph-Time-Scale\" defaultValue={defaultWindow} style={{ fontSize: '0.8em', maxWidth: \"74px\", height: '20px' }} >\r\n                        <option value={1800000}>&#189;h</option>\r\n                        <option value={10800000}>3h</option>\r\n                        <option value={43200000}>12h</option>\r\n                        <option value={86400000}>24h</option>\r\n                        <option value={259200000}>72h</option>\r\n                    </select>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllGraph;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\n\r\nimport AllGraph from './Graphs/AllGraph'\r\n\r\n// import moment from 'moment' // for datetime...\r\n\r\nimport { WiThermometer, WiHumidity, WiHurricane, WiCloudUp, WiThermometerExterior } from 'react-icons/wi';\r\nimport co2svg from '../../assets/co2svg.svg'\r\nimport tvocSvg from '../../assets/tvoc-svg.svg'\r\n\r\n\r\n\r\nclass AllGraphs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            grow: this.props.grow,\r\n            graphElementSize: [150, 150], // needs init\r\n            graphSizeUpdated: 0 // init at 0\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this._ismounted = true;\r\n\r\n        if (this.props.userGrows && this.props.user) {\r\n            if (this.props.userGrows === this.userGrows) {\r\n                return\r\n            }\r\n            this.userGrows = this.props.userGrows\r\n\r\n            var activeLines = []\r\n\r\n            for (const [key] of Object.entries(this.props.userGrows)) {\r\n\r\n                var grow = this.props.userGrows[key]\r\n\r\n                // add all sensors to active lines\r\n                var growActiveLines = []\r\n                this.props.userGrows[key].config.SENSORS.forEach((sensor, key) => {\r\n\r\n                    if (growActiveLines[key] !== sensor.PID) {\r\n\r\n                        var tempIdentifier = sensor.PID + \"^\" + grow.id\r\n\r\n                        if (this.props.user.PREFS) {\r\n                            if (this.props.user.PREFS.GRAPHS) {\r\n                                if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                                    if (this.props.user.PREFS.GRAPHS.AllGraph.showSensors) {\r\n                                        if (this.props.user.PREFS.GRAPHS.AllGraph.showSensors[tempIdentifier] === false) {\r\n                                            return\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        growActiveLines[growActiveLines.length] = tempIdentifier\r\n\r\n                    }\r\n                });\r\n\r\n                activeLines[grow.id] = growActiveLines\r\n            }\r\n\r\n\r\n            this.setState({\r\n                activeLines: activeLines, // same same for now.. to init\r\n                groupedSensors: activeLines\r\n            });\r\n        }\r\n\r\n        this.calcGraphDimensions()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.calcGraphDimensions()\r\n\r\n        if (!this.state.growIDs) {\r\n            // continue     \r\n        } else if (this.state.growIDs.length !== this.props.userGrows.length) {\r\n            // continue\r\n        } else {\r\n            return\r\n        }\r\n\r\n        if (this.props.userGrows && (!this.state.growIDs || (this.state.growIDs && (this.state.growIDs.length !== this.props.userGrows.length)))) {\r\n            var growIDs = this.state.growIDs\r\n            if (!growIDs) {\r\n                growIDs = []\r\n            }\r\n\r\n            for (const [key] of Object.entries(this.props.userGrows)) {\r\n\r\n                if (!growIDs || !growIDs.includes(this.props.userGrows[key].id)) {\r\n                    growIDs[growIDs.length] = this.props.userGrows[key].id\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                growIDs: growIDs\r\n            });\r\n        }\r\n    }\r\n\r\n    calcGraphDimensions() {\r\n        var dateNow = new Date()\r\n\r\n        if (((this.state.graphElementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]) && ((dateNow.getTime() - this.state.graphSizeUpdated) > 500))) {\r\n\r\n            var tempSize = [this.divRef.clientWidth + (this.divRef.clientWidth / 100) * 10, this.divRef.clientHeight + (this.divRef.clientHeight / 100) * 5]\r\n\r\n            if (tempSize !== this.state.graphElementSize) {\r\n                if (this._ismounted) {\r\n                    this.setState({\r\n                        graphElementSize: tempSize,\r\n                        graphSizeUpdated: dateNow.getTime()\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleLine = (e) => {\r\n        var data = e.currentTarget.getAttribute('data-value')\r\n\r\n        // update firebase data\r\n        var tempUser = this.props.user\r\n\r\n        if (tempUser.PREFS) {\r\n            if (tempUser.PREFS.GRAPHS) {\r\n                if (tempUser.PREFS.GRAPHS.AllGraph) {\r\n                    if (tempUser.PREFS.GRAPHS.AllGraph.showSensors) {\r\n                        if (tempUser.PREFS.GRAPHS.AllGraph.showSensors[data] === false) {\r\n                            tempUser.PREFS.GRAPHS.AllGraph.showSensors[data] = true\r\n                            this.setUserPrefs(tempUser)\r\n                            return\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        tempUser.PREFS.GRAPHS.AllGraph.showSensors[data] = false\r\n        this.setUserPrefs(tempUser)\r\n\r\n    }\r\n\r\n    toggleWindow = (tWindow) => {\r\n        // update firebase data\r\n        var tempUser = this.props.user\r\n        tempUser.PREFS.GRAPHS.AllGraph.timeWindow = tWindow\r\n        this.setUserPrefs(tempUser)\r\n    }\r\n\r\n    setUserPrefs = (data) => {\r\n        this.props.setFirebaseUser(data)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var sensorInfoRows = []\r\n        if (this.state.activeLines) {\r\n            sensorInfoRows = this.props.userGrows.map(grow => grow.config.SENSORS.map((sensor, key) => {\r\n                return (\r\n                    <div className=\"AllGraph-Main-Data-Display-Row\" key={sensor.PID}>\r\n\r\n                        {(() => {\r\n\r\n                            var pid = sensor.PID\r\n                            var tIndex = key\r\n                            var curSensor = grow.config.SENSORS[tIndex]\r\n                            var dataVal = pid + \"^\" + grow.id\r\n\r\n                            var setOpacity = 1\r\n                            var setPaddingTop = '4px'\r\n\r\n                            if (this.props.user) {\r\n                                if (this.props.user.PREFS) {\r\n                                    if (this.props.user.PREFS.GRAPHS) {\r\n                                        if (this.props.user.PREFS.GRAPHS.AllGraph) {\r\n                                            if (this.props.user.PREFS.GRAPHS.AllGraph.showSensors && (this.props.user.PREFS.GRAPHS.AllGraph.showSensors[dataVal] === false)) {\r\n                                                setOpacity = 0.3\r\n                                                setPaddingTop = '3px'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            return (\r\n                                <div data-value={dataVal} key={pid} onClick={this.toggleLine} style={{ width: '113px', maxHeight: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', fontSize: '0.65em', cursor: 'pointer', background: '#0c140d', opacity: setOpacity, color: grow.config.SENSORS[tIndex].color }}  >\r\n                                    <div style={{ paddingTop: setPaddingTop }} > {curSensor.name}</div>\r\n\r\n                                    {(() => {\r\n                                        if (curSensor.type === \"airTemp\") {\r\n                                            return <WiThermometer style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                        } else if (curSensor.type === \"humidity\") {\r\n                                            return <WiHumidity style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                        } else if (curSensor.type === \"fan\") {\r\n                                            return <WiHurricane style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                        } else if (curSensor.type === \"humidifier\") {\r\n                                            return <WiCloudUp style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                        } else if (curSensor.type === \"waterTemp\") {\r\n                                            return <WiThermometerExterior style={{ color: '#FFF', fontSize: '30px' }} />\r\n                                        } else if (curSensor.type === \"co2\") {\r\n                                            return <img src={co2svg} alt=\"CO2 Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '28px' }} />\r\n                                        } else if (curSensor.type === \"tvoc\") {\r\n                                            return <img src={tvocSvg} alt=\"TVOC Icon\" style={{ position: 'relative', display: 'inline-block', maxHeight: '28px' }} />\r\n                                        } else {\r\n                                            return <div />\r\n                                        }\r\n                                    })()}\r\n\r\n                                </div>\r\n                            )\r\n                        })()}\r\n                        {(() => {\r\n                            var pid = sensor.PID\r\n                            var tIndex = key\r\n                            var curSensor = grow.config.SENSORS[tIndex]\r\n                            var setIndicatorColor = '#FFF'\r\n\r\n                            if (this.props.liveGrowData && this.props.liveGrowData[grow.id] && (curSensor._mean || curSensor._mean === 0) && (curSensor._deviation || curSensor._deviation === 0)) {\r\n                                if (((curSensor._mean + (curSensor._deviation * 2)) < this.props.liveGrowData[grow.id][pid]) || ((curSensor._mean - (curSensor._deviation * 2)) > this.props.liveGrowData[grow.id][pid])) {\r\n                                    setIndicatorColor = '#FF0000' // BAD\r\n                                } else if (((curSensor._mean + (curSensor._deviation)) < this.props.liveGrowData[grow.id][pid]) || ((curSensor._mean - (curSensor._deviation)) > this.props.liveGrowData[grow.id][pid])) {\r\n                                    setIndicatorColor = '#ded954' // WARN\r\n                                } else {\r\n                                    setIndicatorColor = '#38c538' // GOOD\r\n                                }\r\n                            }\r\n\r\n                            return (\r\n                                <div className=\"AllGraph-Main-Data-Current-Data\" style={{ background: setIndicatorColor }}>\r\n\r\n                                    {(() => {\r\n                                        if (!this.props.liveGrowData[grow.id]) {\r\n                                            return\r\n                                        }\r\n                                        var tIndex = key\r\n                                        var curSensor = grow.config.SENSORS[tIndex]\r\n\r\n                                        return <div>{Math.round(this.props.liveGrowData[grow.id][pid] * 10) / 10}{curSensor.unit}</div>\r\n                                    })()}\r\n                                </div>\r\n                            )\r\n                        })()}\r\n                    </div>\r\n                )\r\n            }\r\n            )\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'column', overflowY: 'auto', overflowX: 'hidden' }}>\r\n                <div style={{ width: \"100vw\", height: \"80vh\", minHeight: \"60vh\" }} ref={element => this.divRef = element} >\r\n                    <div className=\"AllGraphs-Graph-Item\">\r\n                        <div className=\"AllGraphs-Graph-Main\">\r\n                            <div className=\"AllGraphs-Info\">\r\n                                <div className=\"Grow-Box-Info-Graph-Area\" >\r\n                                    {(() => {\r\n                                        if (this.state.growIDs && this.state.graphElementSize && this.state.groupedSensors) {\r\n                                            return <AllGraph parentSize={this.state.graphElementSize} rawGrowData={this.props.threeDayData} groupedSensors={this.state.groupedSensors} userGrows={this.props.userGrows} growIDs={this.state.growIDs} toggleWindow={this.toggleWindow} user={this.props.user} />\r\n                                        }\r\n                                    })()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                <div className=\"Grow-Details-Page-Panel\">\r\n                    <div id=\"Grow-Details-Data-Display\">\r\n\r\n                        <div id=\"All-Graphs-Buttons\">\r\n\r\n                            {sensorInfoRows}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllGraphs;\r\n","import React, { Component } from 'react';\r\nimport '../../../styles/App.css';\r\n\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip } from 'recharts';\r\n\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nclass LifetimeGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._ismounted = true;\r\n        if (this.props.grow && this._ismounted) {\r\n            if (this.props.grow.id !== this.growID) {\r\n                this.growID = this.props.grow.id;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.normalizedData && this.props.normalizedData !== this.state.normalizedData) {\r\n            console.log(\"NORMALIZED DATA\", this.props.normalizedData)\r\n            this.setState({\r\n                normalizedData: this.props.normalizedData\r\n            })\r\n        }\r\n    }\r\n\r\n    renderTooltip = (props) => {\r\n        var rawContent = props.payload\r\n        if (rawContent === null || rawContent.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var readableTime = moment(props.payload[0].payload.time).format('MM-D-YYYY')\r\n\r\n        const listItems = rawContent.map((l) =>\r\n            (() => {\r\n                return (\r\n                    <div style={{ fontSize: '.6em', color: l.stroke }} key={l.dataKey}>{l.dataKey.split(\"^\")[0]} {l.dataKey.split(\"^\")[2]} : {rawContent[0].payload[l.dataKey]}</div>\r\n                )\r\n            })()\r\n        );\r\n\r\n        return (\r\n            <div className=\"Lifetime-Graph-Tooltip\">\r\n                <div>{readableTime}</div>\r\n\r\n                {listItems}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var lineItems = null\r\n        if (this.props.sensorList) {\r\n            const colours = [\"#FFF\", \"#FF0000\", \"#00FF00\", \"#0000FF\", \"#F0F0F0\", \"#f542e3\", \"#52e625\", \"#25bce6\", \"#889c54\", \"#71418a\",\r\n                \"#FFF\", \"#FF0000\", \"#00FF00\", \"#0000FF\", \"#F0F0F0\", \"#f542e3\", \"#52e625\", \"#25bce6\", \"#889c54\", \"#71418a\"] // possible bug if getting past this number of sensors...\r\n            var i = 0\r\n            lineItems = this.props.sensorList.map((sensorID) =>\r\n                (() => {\r\n                    i++\r\n                    if (sensorID.split(\"^\")[2] === \"HIGH\") {\r\n                        return <Line yAxisId=\"left\" type=\"monotone\" name={sensorID} dataKey={sensorID} key={sensorID} stroke={\"#FF0000\"} thickness={0.5} dot={false} />\r\n                    } else if (sensorID.split(\"^\")[2] === \"LOW\") {\r\n                        return <Line yAxisId=\"left\" type=\"monotone\" name={sensorID} dataKey={sensorID} key={sensorID} stroke={\"#19b2ff\"} thickness={0.5} dot={false} />\r\n                    } else {\r\n                        return <Line yAxisId=\"left\" type=\"monotone\" name={sensorID} dataKey={sensorID} key={sensorID} stroke={\"#FFFFFF\"} thickness={1} dot={false} />\r\n                    }\r\n                })()\r\n            );\r\n        }\r\n\r\n\r\n\r\n\r\n        var renderLifetimeGraph = null\r\n        if (this.state.normalizedData && this.state.normalizedData[0]) {\r\n            if (this.props.parentSize) {\r\n                var xSize = Math.floor(this.props.parentSize[0] * 1)\r\n                var ySize = Math.floor(this.props.parentSize[1] * 0.9)\r\n\r\n                renderLifetimeGraph = (\r\n                    <LineChart width={xSize} height={ySize} data={this.state.normalizedData}>\r\n\r\n                        {lineItems}\r\n\r\n                        <XAxis\r\n                            dataKey=\"time\"\r\n                            type=\"number\"\r\n                            domain={[new Date(this.state.normalizedData[0].time).getTime(), new Date(this.state.normalizedData[this.state.normalizedData.length - 1].time).getTime()]}\r\n                            tickFormatter={(unixTime) => moment(unixTime).format('MM-D-YYYY')}\r\n                            hide={false} />\r\n                        <YAxis yAxisId=\"left\" orientation=\"left\" domain={[21, 27]} />\r\n                        <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n                        <Tooltip content={this.renderTooltip} />\r\n                    </LineChart>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"Chart-Container-Box\">\r\n                {renderLifetimeGraph}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default LifetimeGraph;","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\n\r\nimport LifetimeGraph from './Graphs/LifetimeGraph'\r\n\r\nimport moment from 'moment' // for datetime...\r\n\r\n\r\nclass LifetimeGraphs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            graphElementSize: [150, 150], // needs init\r\n            graphSizeUpdated: 0, // init at 0\r\n\r\n            growID: '-C02kOvSXRrm1zIZ6EOx', // hardcoded for now // '-LdtkOvSXRrm1zIZ6EOx' // '-LdtfBTlG6Fgg-ADD8-b' // '-C02kOvSXRrm1zIZ6EOx'\r\n            year: '2020',\r\n            month: '09',\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this._ismounted = true;\r\n        if (this.props.lifetimeData) {\r\n            this.normalizeLifetimeData(this.props.lifetimeData)\r\n        }\r\n\r\n        // SCARY TIMES!\r\n        // this.getMonthChunkData()\r\n\r\n        this.calcGraphDimensions()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.calcGraphDimensions()\r\n    }\r\n\r\n    calcGraphDimensions() {\r\n        var dateNow = new Date()\r\n\r\n        if (((this.state.graphElementSize !== [this.divRef.clientWidth, this.divRef.clientHeight]) && ((dateNow.getTime() - this.state.graphSizeUpdated) > 500))) {\r\n\r\n            var tempSize = [this.divRef.clientWidth + (this.divRef.clientWidth / 100) * 10, this.divRef.clientHeight + (this.divRef.clientHeight / 100) * 5]\r\n\r\n            if (tempSize !== this.state.graphElementSize) {\r\n                if (this._ismounted) {\r\n                    this.setState({\r\n                        graphElementSize: tempSize,\r\n                        graphSizeUpdated: dateNow.getTime()\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    postLifetimeData(lifetimeObject, day) {\r\n        this.props.postLifetimeData(lifetimeObject, this.state.growID, this.state.year, this.state.month, day)\r\n    }\r\n\r\n    normalizeLifetimeData() {\r\n        console.log(\"normalize LIFETIMEDATA!\", this.props.lifetimeData)\r\n\r\n        var rawData = this.props.lifetimeData\r\n        var allYears = [2019, 2020]\r\n        var allMonths = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]\r\n        var allDays = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\",\r\n            \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\r\n            \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"]\r\n\r\n        var normalizedEntries = []\r\n        var sensorList = []\r\n\r\n        allYears.forEach((year) => {\r\n            allMonths.forEach((month) => {\r\n                allDays.forEach((day) => {\r\n\r\n                    var normalizedDataPoint = {}\r\n                    for (const [growID, dataSet] of Object.entries(this.props.lifetimeData)) {\r\n                        if (dataSet[year] && dataSet[year][month] && dataSet[year][month][day]) {\r\n\r\n                            // add datapieces to normalizedDataPoint\r\n                            for (const [dataType, values] of Object.entries(dataSet[year][month][day])) {\r\n                                for (const [pid, value] of Object.entries(values)) {\r\n                                    var renamedSensor = pid + \"^\" + growID + \"^\" + dataType\r\n                                    normalizedDataPoint[renamedSensor] = value\r\n                                    // add to sensorlist if not yet there\r\n                                    if (!sensorList.includes(renamedSensor)) {\r\n                                        sensorList[sensorList.length] = renamedSensor\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (Object.keys(normalizedDataPoint).length !== 0) {\r\n                        // add normalized datapoint to normalizedEntries\r\n                        var aDate = new Date(year + \"-\" + month + \"-\" + day).valueOf()\r\n                        normalizedDataPoint.time = aDate\r\n                        normalizedEntries[normalizedEntries.length] = normalizedDataPoint\r\n                    }\r\n                })\r\n            })\r\n        })\r\n\r\n        // setState\r\n        this.setState({\r\n            sensorList: sensorList,\r\n            normalizedData: normalizedEntries\r\n        })\r\n\r\n    }\r\n\r\n\r\n    // \r\n    // CHUNKY stuff\r\n    // \r\n    getMonthChunkData() {\r\n        this.props.getMonthChunkData(this.state.growID, this.state.year, this.state.month, this.setStateMonthChunk)\r\n    }\r\n\r\n    setStateMonthChunk = (chunk) => {\r\n        this.setState({\r\n            monthChunk: chunk\r\n        });\r\n\r\n        this.processChunk(chunk)\r\n    }\r\n\r\n    processChunk(chunk) {\r\n        // JUST A HUGE FCKN function for now why not\r\n        // Iterate over days\r\n        console.log(\"chunky0PRIME \", chunk)\r\n        for (const [day, dayChunk] of Object.entries(chunk)) {\r\n            var datapointCount = []\r\n            var averagesObject = []\r\n            var lowsObject = []\r\n            var highsObject = []\r\n\r\n            for (const [hour, hourChunk] of Object.entries(dayChunk)) {\r\n                for (const [entryID, entry] of Object.entries(hourChunk)) {\r\n                    for (const [sensorPID, value] of Object.entries(entry)) {\r\n                        // skip time\r\n                        if (sensorPID === \"time\") {\r\n                            continue\r\n                        }\r\n\r\n                        // datapointCount\r\n                        if (!datapointCount[sensorPID]) {\r\n                            datapointCount[sensorPID] = 1\r\n                        } else {\r\n                            datapointCount[sensorPID] = datapointCount[sensorPID] + 1\r\n                        }\r\n\r\n                        // averages\r\n                        if (!averagesObject[sensorPID]) {\r\n                            averagesObject[sensorPID] = Math.round((value) * 10) / 10\r\n                        } else {\r\n                            averagesObject[sensorPID] = parseFloat(averagesObject[sensorPID]) + parseFloat(value)\r\n                        }\r\n\r\n                        // highs\r\n                        if (!highsObject[sensorPID] || highsObject[sensorPID] < value) {\r\n                            highsObject[sensorPID] = Math.round((value) * 10) / 10\r\n                        }\r\n\r\n                        // lows\r\n                        if (!lowsObject[sensorPID] || lowsObject[sensorPID] > value) {\r\n                            lowsObject[sensorPID] = Math.round((value) * 10) / 10\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (const [key, value] of Object.entries(averagesObject)) {\r\n                averagesObject[key] = Math.round((value / datapointCount[key]) * 10) / 10\r\n            }\r\n\r\n            // post lifetimeObject\r\n            var lifetimeObject = []\r\n            lifetimeObject.HIGH = highsObject\r\n            lifetimeObject.LOW = lowsObject\r\n            lifetimeObject.AVERAGE = averagesObject\r\n            this.postLifetimeData(lifetimeObject, day)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <div style={{ width: \"100vw\", minHeight: \"65vh\" }} ref={element => this.divRef = element} >\r\n                    <div className=\"AllGraphs-Graph-Item\">\r\n                        <div className=\"AllGraphs-Graph-Main\">\r\n                            <div className=\"AllGraphs-Info\">\r\n                                <div className=\"Grow-Box-Info-Graph-Area\" >\r\n                                    <LifetimeGraph parentSize={this.state.graphElementSize} normalizedData={this.state.normalizedData} sensorList={this.state.sensorList} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                <div className=\"Grow-Details-Page-Panel\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default LifetimeGraphs;\r\n","import React, { Component } from 'react';\r\n\r\nimport moment from 'moment'\r\n\r\nimport '../../styles/App.css';\r\n\r\nimport cornerLogo from '../../assets/corner-logo.png'\r\n\r\nimport { AiOutlineLineChart } from 'react-icons/ai';\r\nimport { GiSpellBook } from 'react-icons/gi';\r\n\r\nclass AppBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n    }\r\n\r\n    openJournals = () => {\r\n        this.props.setMainContent('journals')\r\n    }\r\n\r\n    openGraphs = () => {\r\n        this.props.setMainContent('graphs')\r\n    }\r\n\r\n    openLifetime = () => {\r\n        this.props.setMainContent('lifetime')\r\n    }\r\n\r\n    openGrows = () => {\r\n        this.props.setMainContent('grows')\r\n    }\r\n\r\n    setGrow = (ev) => {\r\n        this.props.userGrows.forEach((grow) => {\r\n            if (grow.id === ev.target.dataset.value) {\r\n                this.props.setGrow(grow)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSignOut = () => {\r\n        this.props.handleSignOut()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        var renderedLiveGrowButtons = null;\r\n        if (this.props.userGrows) {\r\n            renderedLiveGrowButtons = this.props.userGrows.map((grow) => {\r\n\r\n                var liveButtonData = null\r\n                if (this.props.liveGrowData[grow.id]) {\r\n                    liveButtonData = this.props.liveGrowData[grow.id]\r\n                }\r\n\r\n                var brokenName = grow.name.split(\" \")\r\n                var acroName = \"\"\r\n\r\n                if (grow.name.length >= 4) {\r\n                    brokenName.forEach((piece) => {\r\n                        acroName += piece.charAt(0)\r\n                    })\r\n                } else {\r\n                    acroName = grow.name\r\n                }\r\n\r\n                var indicatorColor = \"#FF0000\"\r\n                var lastUpdate = null;\r\n                if (this.props.liveGrowData[grow.id]) {\r\n                    var now = new Date().getTime();\r\n                    var updatedAtDate = new Date(this.props.liveGrowData[grow.id].time * 1000)\r\n\r\n                    if (this.updatedAtDate && (updatedAtDate !== this.updatedAtDate[grow.id])) {\r\n                        this.updatedAtDate[grow.id] = updatedAtDate\r\n                    }\r\n\r\n\r\n\r\n                    var difference = now - this.props.liveGrowData[grow.id].time * 1000\r\n                    if (difference > 10000000) {\r\n                        indicatorColor = \"#989e98\"\r\n                    } else if (difference > 300000) {\r\n                        indicatorColor = \"#fa360a\"\r\n                    } else if (difference > 60000) {\r\n                        indicatorColor = \"#facb23\"\r\n                    } else if (difference < 60000) {\r\n                        indicatorColor = \"#27d927\"\r\n                    }\r\n\r\n\r\n\r\n                    lastUpdate = moment(updatedAtDate).fromNow()\r\n                }\r\n\r\n\r\n\r\n                return (\r\n                    <div className=\"App-Bar-Button-Grow\" key={grow.id} onClick={this.setGrow} data-value={grow.id}>\r\n                        <div className=\"App-Bar-Button-Updated\" data-value={grow.id}>\r\n                            <div style={{ paddingBottom: '15px' }}>\r\n                                {lastUpdate}\r\n                            </div>\r\n                            <div style={{ color: indicatorColor, marginLeft: '1px' }}>\r\n                                ⬤\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"App-Bar-Button-Grow-Name\" data-value={grow.id}>\r\n                            {acroName}\r\n                        </div>\r\n                        {(() => {\r\n                            if (liveButtonData && liveButtonData.sA1_Temp) {\r\n                                return (\r\n                                    <div ref={this.flowerTempRef} className=\"App-Bar-Button-Grow-Temp\" data-value={grow.id}>\r\n                                        {Math.round(liveButtonData.sA1_Temp * 10) / 10}°C\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n\r\n                        {(() => {\r\n                            if (liveButtonData && liveButtonData.sA1_Humi) {\r\n                                return (\r\n                                    <div ref={this.flowerHumidityRef} className=\"App-Bar-Button-Grow-Humidity\" data-value={grow.id}>\r\n                                        {Math.round(liveButtonData.sA1_Humi * 10) / 10}%\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n\r\n        return (\r\n\r\n            <div id=\"App-Bar\" >\r\n                <div id=\"App-Bar-Logo\" onClick={this.openGraphs}>\r\n                    <img src={cornerLogo} alt=\"App Logo\" style={{ maxWidth: \"100px\" }} />\r\n                </div>\r\n\r\n                {renderedLiveGrowButtons}\r\n\r\n                <div className=\"App-Bar-Button-Grow\" style={{ background: '#6b5729' }} onClick={this.openLifetime}>\r\n                    <AiOutlineLineChart style={{ color: '#FFF', fontSize: '30px', paddingTop: '5px' }} /> L\r\n                </div>\r\n\r\n                <div className=\"App-Bar-Button-Grow\" style={{ background: '#a0823e' }} onClick={this.openJournals}>\r\n                    <GiSpellBook style={{ color: '#FFF', fontSize: '30px', paddingTop: '5px' }} />\r\n                </div>\r\n\r\n                <div className=\"App-Bar-Filler-Div\"></div>\r\n                <div className=\"App-Bar-Logout-Button\" onClick={this.handleSignOut}>\r\n                    &#10162;\r\n                </div>\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppBar;\r\n","import React, { Component } from 'react';\r\nimport '../styles/App.css';\r\n\r\n\r\nimport Firebase from '../config/firebaseConfig.js'\r\n\r\nimport DbHelper from './_utils/DbHelper.js'\r\n\r\n\r\n// Auth\r\nimport SignIn from './auth/SignIn.js'\r\nimport SignUp from './auth/SignUp.js'\r\n\r\n// Main Content\r\nimport GrowJournal from './main-content/GrowJournal/GrowJournal.js'\r\nimport GrowPage from './main-content/GrowPage.js'\r\nimport AllGraphs from './main-content/AllGraphs.js'\r\nimport LifetimeGraphs from './main-content/LifetimeGraphs.js'\r\n\r\n\r\n// Top Bar\r\nimport AppBar from './app-bar/AppBar.js'\r\n\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmainContent: 'signin', // signin, signup, main, journal, grows, etc.\r\n\t\t\tUID: null,\r\n\t\t\tusername: '',\r\n\t\t\tjournalID: null,\r\n\t\t\tcurrentGrow: null,\r\n\t\t\tgrowID: null, //todo: remove, use currentGrow\r\n\r\n\t\t\tuserJournals: [],\r\n\t\t\tliveGrowData: [],\r\n\r\n\t\t\tthreeDayData: []\r\n\t\t};\r\n\r\n\t\tthis.dbHelper = new DbHelper();\r\n\r\n\t\tthis.firebase = new Firebase();\r\n\r\n\t\tthis.firebase.auth.onAuthStateChanged((user) => {\r\n\t\t\tif (user) {\r\n\t\t\t\tthis.setState({ UID: user.uid });\r\n\t\t\t\tthis.getUsername();\r\n\r\n\t\t\t\tthis.dbHelper.getLifetimeData(user.uid, this.stateSetLifetimeData)\r\n\r\n\t\t\t\tthis.dbHelper.getUser(user.uid, this.setUser)\r\n\t\t\t\tthis.dbHelper.getUserGrows(this.setUserGrows) // currently grabbing B's hardcoded\r\n\t\t\t\tthis.dbHelper.getUserJournals(this.setUserJournals)\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tsetUser = (u) => {\r\n\t\tthis.setState({ user: u });\r\n\t}\r\n\r\n\t// To pass to components...\r\n\tsetFirebaseUserPrefs = (u) => {\r\n\t\tthis.setState({ user: u });\r\n\r\n\t\tconsole.log(\"temp user GONNASET\", u)\r\n\r\n\t\tthis.dbHelper.setUser(u)\r\n\t}\r\n\r\n\t// To add lifetime data to components...\r\n\tpostLifetimeData = (lifetimeObject, growID, year, month, day) => {\r\n\t\t// this.setState({ user: u }); // -- set liftime data eventually\r\n\r\n\t\tconsole.log(\"chunky post LifetimeData\", lifetimeObject)\r\n\t\tthis.dbHelper.postLifetimeData(lifetimeObject, growID, year, month, day)\r\n\t}\r\n\r\n\tstateSetLifetimeData = (lifetimeData) => {\r\n\t\tthis.setState({ lifetimeData: lifetimeData });\r\n\t}\r\n\r\n\tgetMonthChunkData = (growID, year, month, setData) => {\r\n\t\tthis.dbHelper.getMonthChunk(growID, year, month, setData)\r\n\t}\r\n\r\n\t// when config settings change...\r\n\trefreshGrows = (newGrowConfig) => {\r\n\t\tvar tempGrow = this.state.currentGrow\r\n\t\ttempGrow.config = newGrowConfig\r\n\r\n\t\tthis.setState({ currentGrow: tempGrow });\r\n\t}\r\n\r\n\tsetUserGrows = (userGrows) => {\r\n\t\tconsole.log(\"USER GROWS!\", userGrows)\r\n\r\n\t\tuserGrows.forEach((grow) => {\r\n\t\t\tthis.dbHelper.getThreeDayData(grow.id, this.setThreeDayData)\r\n\t\t})\r\n\r\n\t\tthis.setState({ userGrows: userGrows });\r\n\r\n\t\tthis.dbHelper.getLiveGrowData(userGrows, this.setLiveGrowData)\r\n\t}\r\n\r\n\tsetUserJournals = (userJournals) => {\r\n\t\tthis.setState({ userJournals: userJournals });\r\n\t}\r\n\r\n\tsetLiveGrowData = (dataID, newGrowData) => {\r\n\t\tif (newGrowData === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar currentData = this.state.liveGrowData\r\n\t\tcurrentData[dataID.toString()] = newGrowData\r\n\r\n\t\tthis.setState({ liveGrowData: currentData });\r\n\t}\r\n\r\n\tsetThreeDayData = (growDeprecate, day, data) => {\r\n\t\tvar previousData = this.state.threeDayData\r\n\r\n\t\tvar tempThreeDayData = []\r\n\r\n\t\tday = parseInt(day)\r\n\r\n\t\tif (previousData[growDeprecate]) {\r\n\t\t\ttempThreeDayData = previousData[growDeprecate]\r\n\t\t}\r\n\r\n\t\tif (tempThreeDayData[day]) {\r\n\t\t\ttempThreeDayData[day] = null\r\n\t\t}\r\n\r\n\t\ttempThreeDayData[day] = data\r\n\r\n\t\tpreviousData[growDeprecate] = tempThreeDayData\r\n\r\n\t\tthis.setState({ threeDayData: previousData });\r\n\r\n\t}\r\n\r\n\r\n\tgetUsername = () => {\r\n\t\t// Users location in tree\r\n\t\tvar ref = this.firebase.db.ref().child('users').child(this.state.UID)\r\n\r\n\t\tref.on(\"value\", (snapshot) => {\r\n\t\t\tthis.setState({ username: snapshot.val().username });\r\n\t\t}, function (errorObject) {\r\n\t\t\tconsole.log(\"The username read failed: \" + errorObject.code);\r\n\t\t});\r\n\r\n\t}\r\n\r\n\thandleSignOut = () => {\r\n\t\tthis.setState({\r\n\t\t\tUID: null\r\n\t\t});\r\n\t\tthis.firebase.auth.signOut().then(function () {\r\n\t\t\t// Sign-out successful.\r\n\t\t\tconsole.log(`signed out`)\r\n\t\t\twindow.location.reload()\r\n\t\t}).catch(function (error) {\r\n\t\t\t// An error happened.\r\n\t\t\tconsole.log(`Error signing out: ${error}`)\r\n\t\t});\r\n\t}\r\n\r\n\tsetMainContent = (setValue, id) => {\r\n\t\tthis.setState({\r\n\t\t\tmainContent: setValue,\r\n\t\t\tcurrentGrow: null,\r\n\t\t\tgrowID: id,\r\n\t\t\tjournalID: null\r\n\t\t});\r\n\t}\r\n\r\n\topenJournals = () => {\r\n\t\tif (this.state.mainContent !== 'journals') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmainContent: 'journals',\r\n\t\t\t\tjournalID: null\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tjournalID: null\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\topenGrows = () => {\r\n\t\tif (this.state.mainContent !== 'grows') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmainContent: 'grows',\r\n\t\t\t\tcurrentGrow: null\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentGrow: null\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsetGrow = (grow) => {\r\n\t\tconsole.log(\"APP Setgrow\", grow)\r\n\t\tthis.setState({\r\n\t\t\tcurrentGrow: grow,\r\n\t\t\tmainContent: 'grows'\r\n\t\t});\r\n\t}\r\n\r\n\tsetJournalID = (journalID) => {\r\n\t\tconsole.log(\"APP SetJournalID\", journalID)\r\n\t\tthis.setState({\r\n\t\t\tmainContent: 'journals',\r\n\t\t\tjournalID: journalID\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<header className=\"App-body\">\r\n\r\n\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\tif (this.state.UID) {\r\n\t\t\t\t\t\t\treturn <AppBar mainContent={this.state.mainContent} setMainContent={this.setMainContent} setGrow={this.setGrow} handleSignOut={this.handleSignOut} liveGrowData={this.state.liveGrowData} userGrows={this.state.userGrows} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})()}\r\n\r\n\t\t\t\t\t<div id=\"App-Inner-Body\">\r\n\r\n\r\n\t\t\t\t\t\t<div id=\"App-Body-Content\">\r\n\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\tif (this.state.UID && this.state.userGrows && this.state.user && this.state.threeDayData && this.state.liveGrowData) {\r\n\t\t\t\t\t\t\t\t\tswitch (this.state.mainContent) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'grows':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <GrowPage refreshGrows={this.refreshGrows} setJournalID={this.setJournalID} setGrow={this.setGrow} user={this.state.user} grow={this.state.currentGrow} growID={this.state.growID} userGrows={this.state.userGrows} liveGrowData={this.state.liveGrowData} rawGrowData={this.state.threeDayData} />\r\n\t\t\t\t\t\t\t\t\t\tcase 'journals':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <GrowJournal setJournalID={this.setJournalID} journalID={this.state.journalID} userJournals={this.state.userJournals} />\r\n\t\t\t\t\t\t\t\t\t\tcase 'lifetime':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <LifetimeGraphs postLifetimeData={this.postLifetimeData} getMonthChunkData={this.getMonthChunkData} user={this.state.user} lifetimeData={this.state.lifetimeData} />\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\treturn <AllGraphs setFirebaseUser={this.setFirebaseUserPrefs} userGrows={this.state.userGrows} user={this.state.user} threeDayData={this.state.threeDayData} liveGrowData={this.state.liveGrowData} />\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tswitch (this.state.mainContent) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'signin':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <SignIn gotoSignUp={this.setMainContent} />;\r\n\t\t\t\t\t\t\t\t\t\tcase 'signup':\r\n\t\t\t\t\t\t\t\t\t\t\treturn <SignUp gotoSignIn={this.setMainContent} />;\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\treturn <SignIn gotoSignUp={this.setMainContent} />;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})()}\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</header>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './js/serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/co2svg.fc43d345.svg\";","module.exports = __webpack_public_path__ + \"static/media/tvoc-svg.86ee762c.svg\";"],"sourceRoot":""}